{
  "timestamp": "2025-08-01T05:31:19.333Z",
  "files": {
    "definitions/generated/index.ts": {
      "filePath": "definitions/generated/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/definitions/generated/index.ts",
      "size": 1869,
      "lines": 39,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 11,
          "raw": "export * from '../../shared/core/tool-definitions.js';",
          "all": true,
          "from": "../../shared/core/tool-definitions.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 12,
          "raw": "export * from '../../shared/prompts/prompt-templates.js';",
          "all": true,
          "from": "../../shared/prompts/prompt-templates.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 13,
          "raw": "export * from '../../shared/resources/resources.js';",
          "all": true,
          "from": "../../shared/resources/resources.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 16,
          "raw": "export * from './types/tools-types.js';",
          "all": true,
          "from": "./types/tools-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 17,
          "raw": "export * from './types/prompts-types.js';",
          "all": true,
          "from": "./types/prompts-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 18,
          "raw": "export * from './types/resources-types.js';",
          "all": true,
          "from": "./types/resources-types.js"
        },
        {
          "named": [
            "DEFINITIONS_METADATA"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "export const DEFINITIONS_METADATA = {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/definitions/generated/index.ts"
    },
    "definitions/generated/types/prompts-types.ts": {
      "filePath": "definitions/generated/types/prompts-types.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/definitions/generated/types/prompts-types.ts",
      "size": 4593,
      "lines": 152,
      "imports": [],
      "exports": [
        {
          "named": [
            "CreateCodingAssistantPrompt"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "export interface CreateCodingAssistantPrompt {"
        },
        {
          "named": [
            "CreateDataAnalystPrompt"
          ],
          "typeOnly": false,
          "line": 23,
          "raw": "export interface CreateDataAnalystPrompt {"
        },
        {
          "named": [
            "CreateWritingAssistantPrompt"
          ],
          "typeOnly": false,
          "line": 34,
          "raw": "export interface CreateWritingAssistantPrompt {"
        },
        {
          "named": [
            "CreateConversationThreadPrompt"
          ],
          "typeOnly": false,
          "line": 47,
          "raw": "export interface CreateConversationThreadPrompt {"
        },
        {
          "named": [
            "OrganizeThreadMessagesPrompt"
          ],
          "typeOnly": false,
          "line": 60,
          "raw": "export interface OrganizeThreadMessagesPrompt {"
        },
        {
          "named": [
            "ExplainCodePrompt"
          ],
          "typeOnly": false,
          "line": 71,
          "raw": "export interface ExplainCodePrompt {"
        },
        {
          "named": [
            "ReviewCodePrompt"
          ],
          "typeOnly": false,
          "line": 84,
          "raw": "export interface ReviewCodePrompt {"
        },
        {
          "named": [
            "ConfigureAssistantRunPrompt"
          ],
          "typeOnly": false,
          "line": 97,
          "raw": "export interface ConfigureAssistantRunPrompt {"
        },
        {
          "named": [
            "DebugRunIssuesPrompt"
          ],
          "typeOnly": false,
          "line": 110,
          "raw": "export interface DebugRunIssuesPrompt {"
        },
        {
          "named": [
            "AnalyzeDatasetPrompt"
          ],
          "typeOnly": false,
          "line": 123,
          "raw": "export interface AnalyzeDatasetPrompt {"
        },
        {
          "named": [
            "PromptsTypesMap"
          ],
          "typeOnly": false,
          "line": 140,
          "raw": "export interface PromptsTypesMap {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/definitions/generated/types/prompts-types.ts"
    },
    "definitions/generated/types/resources-types.ts": {
      "filePath": "definitions/generated/types/resources-types.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/definitions/generated/types/resources-types.ts",
      "size": 2510,
      "lines": 86,
      "imports": [],
      "exports": [
        {
          "named": [
            "Coding"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "export interface Coding Assistant TemplateResource {"
        },
        {
          "named": [
            "Data"
          ],
          "typeOnly": false,
          "line": 19,
          "raw": "export interface Data Analyst TemplateResource {"
        },
        {
          "named": [
            "Customer"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export interface Customer Support TemplateResource {"
        },
        {
          "named": [
            "OpenAI"
          ],
          "typeOnly": false,
          "line": 37,
          "raw": "export interface OpenAI Assistants API ReferenceResource {"
        },
        {
          "named": [
            "Best"
          ],
          "typeOnly": false,
          "line": 46,
          "raw": "export interface Best Practices GuideResource {"
        },
        {
          "named": [
            "Troubleshooting"
          ],
          "typeOnly": false,
          "line": 55,
          "raw": "export interface Troubleshooting GuideResource {"
        },
        {
          "named": [
            "Batch"
          ],
          "typeOnly": false,
          "line": 64,
          "raw": "export interface Batch Processing WorkflowResource {"
        },
        {
          "named": [
            "ResourcesTypesMap"
          ],
          "typeOnly": false,
          "line": 77,
          "raw": "export interface ResourcesTypesMap {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/definitions/generated/types/resources-types.ts"
    },
    "definitions/generated/types/tool-params.ts": {
      "filePath": "definitions/generated/types/tool-params.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/definitions/generated/types/tool-params.ts",
      "size": 12622,
      "lines": 250,
      "imports": [],
      "exports": [
        {
          "named": [
            "AssistantCreateParams"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "export interface AssistantCreateParams {"
        },
        {
          "named": [
            "AssistantListParams"
          ],
          "typeOnly": false,
          "line": 25,
          "raw": "export interface AssistantListParams {"
        },
        {
          "named": [
            "AssistantGetParams"
          ],
          "typeOnly": false,
          "line": 36,
          "raw": "export interface AssistantGetParams {"
        },
        {
          "named": [
            "AssistantUpdateParams"
          ],
          "typeOnly": false,
          "line": 41,
          "raw": "export interface AssistantUpdateParams {"
        },
        {
          "named": [
            "AssistantDeleteParams"
          ],
          "typeOnly": false,
          "line": 58,
          "raw": "export interface AssistantDeleteParams {"
        },
        {
          "named": [
            "ThreadCreateParams"
          ],
          "typeOnly": false,
          "line": 63,
          "raw": "export interface ThreadCreateParams {"
        },
        {
          "named": [
            "ThreadGetParams"
          ],
          "typeOnly": false,
          "line": 70,
          "raw": "export interface ThreadGetParams {"
        },
        {
          "named": [
            "ThreadUpdateParams"
          ],
          "typeOnly": false,
          "line": 75,
          "raw": "export interface ThreadUpdateParams {"
        },
        {
          "named": [
            "ThreadDeleteParams"
          ],
          "typeOnly": false,
          "line": 82,
          "raw": "export interface ThreadDeleteParams {"
        },
        {
          "named": [
            "MessageCreateParams"
          ],
          "typeOnly": false,
          "line": 87,
          "raw": "export interface MessageCreateParams {"
        },
        {
          "named": [
            "MessageListParams"
          ],
          "typeOnly": false,
          "line": 98,
          "raw": "export interface MessageListParams {"
        },
        {
          "named": [
            "MessageGetParams"
          ],
          "typeOnly": false,
          "line": 113,
          "raw": "export interface MessageGetParams {"
        },
        {
          "named": [
            "MessageUpdateParams"
          ],
          "typeOnly": false,
          "line": 120,
          "raw": "export interface MessageUpdateParams {"
        },
        {
          "named": [
            "MessageDeleteParams"
          ],
          "typeOnly": false,
          "line": 129,
          "raw": "export interface MessageDeleteParams {"
        },
        {
          "named": [
            "RunCreateParams"
          ],
          "typeOnly": false,
          "line": 136,
          "raw": "export interface RunCreateParams {"
        },
        {
          "named": [
            "RunListParams"
          ],
          "typeOnly": false,
          "line": 153,
          "raw": "export interface RunListParams {"
        },
        {
          "named": [
            "RunGetParams"
          ],
          "typeOnly": false,
          "line": 166,
          "raw": "export interface RunGetParams {"
        },
        {
          "named": [
            "RunUpdateParams"
          ],
          "typeOnly": false,
          "line": 173,
          "raw": "export interface RunUpdateParams {"
        },
        {
          "named": [
            "RunCancelParams"
          ],
          "typeOnly": false,
          "line": 182,
          "raw": "export interface RunCancelParams {"
        },
        {
          "named": [
            "RunSubmitToolOutputsParams"
          ],
          "typeOnly": false,
          "line": 189,
          "raw": "export interface RunSubmitToolOutputsParams {"
        },
        {
          "named": [
            "RunStepListParams"
          ],
          "typeOnly": false,
          "line": 198,
          "raw": "export interface RunStepListParams {"
        },
        {
          "named": [
            "RunStepGetParams"
          ],
          "typeOnly": false,
          "line": 213,
          "raw": "export interface RunStepGetParams {"
        },
        {
          "named": [
            "ToolParamsMap"
          ],
          "typeOnly": false,
          "line": 226,
          "raw": "export interface ToolParamsMap {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/definitions/generated/types/tool-params.ts"
    },
    "definitions/generated/types/tools-types.ts": {
      "filePath": "definitions/generated/types/tools-types.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/definitions/generated/types/tools-types.ts",
      "size": 12596,
      "lines": 250,
      "imports": [],
      "exports": [
        {
          "named": [
            "AssistantCreateParams"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "export interface AssistantCreateParams {"
        },
        {
          "named": [
            "AssistantListParams"
          ],
          "typeOnly": false,
          "line": 25,
          "raw": "export interface AssistantListParams {"
        },
        {
          "named": [
            "AssistantGetParams"
          ],
          "typeOnly": false,
          "line": 36,
          "raw": "export interface AssistantGetParams {"
        },
        {
          "named": [
            "AssistantUpdateParams"
          ],
          "typeOnly": false,
          "line": 41,
          "raw": "export interface AssistantUpdateParams {"
        },
        {
          "named": [
            "AssistantDeleteParams"
          ],
          "typeOnly": false,
          "line": 58,
          "raw": "export interface AssistantDeleteParams {"
        },
        {
          "named": [
            "ThreadCreateParams"
          ],
          "typeOnly": false,
          "line": 63,
          "raw": "export interface ThreadCreateParams {"
        },
        {
          "named": [
            "ThreadGetParams"
          ],
          "typeOnly": false,
          "line": 70,
          "raw": "export interface ThreadGetParams {"
        },
        {
          "named": [
            "ThreadUpdateParams"
          ],
          "typeOnly": false,
          "line": 75,
          "raw": "export interface ThreadUpdateParams {"
        },
        {
          "named": [
            "ThreadDeleteParams"
          ],
          "typeOnly": false,
          "line": 82,
          "raw": "export interface ThreadDeleteParams {"
        },
        {
          "named": [
            "MessageCreateParams"
          ],
          "typeOnly": false,
          "line": 87,
          "raw": "export interface MessageCreateParams {"
        },
        {
          "named": [
            "MessageListParams"
          ],
          "typeOnly": false,
          "line": 98,
          "raw": "export interface MessageListParams {"
        },
        {
          "named": [
            "MessageGetParams"
          ],
          "typeOnly": false,
          "line": 113,
          "raw": "export interface MessageGetParams {"
        },
        {
          "named": [
            "MessageUpdateParams"
          ],
          "typeOnly": false,
          "line": 120,
          "raw": "export interface MessageUpdateParams {"
        },
        {
          "named": [
            "MessageDeleteParams"
          ],
          "typeOnly": false,
          "line": 129,
          "raw": "export interface MessageDeleteParams {"
        },
        {
          "named": [
            "RunCreateParams"
          ],
          "typeOnly": false,
          "line": 136,
          "raw": "export interface RunCreateParams {"
        },
        {
          "named": [
            "RunListParams"
          ],
          "typeOnly": false,
          "line": 153,
          "raw": "export interface RunListParams {"
        },
        {
          "named": [
            "RunGetParams"
          ],
          "typeOnly": false,
          "line": 166,
          "raw": "export interface RunGetParams {"
        },
        {
          "named": [
            "RunUpdateParams"
          ],
          "typeOnly": false,
          "line": 173,
          "raw": "export interface RunUpdateParams {"
        },
        {
          "named": [
            "RunCancelParams"
          ],
          "typeOnly": false,
          "line": 182,
          "raw": "export interface RunCancelParams {"
        },
        {
          "named": [
            "RunSubmitToolOutputsParams"
          ],
          "typeOnly": false,
          "line": 189,
          "raw": "export interface RunSubmitToolOutputsParams {"
        },
        {
          "named": [
            "RunStepListParams"
          ],
          "typeOnly": false,
          "line": 198,
          "raw": "export interface RunStepListParams {"
        },
        {
          "named": [
            "RunStepGetParams"
          ],
          "typeOnly": false,
          "line": 213,
          "raw": "export interface RunStepGetParams {"
        },
        {
          "named": [
            "ToolsTypesMap"
          ],
          "typeOnly": false,
          "line": 226,
          "raw": "export interface ToolsTypesMap {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/definitions/generated/types/tools-types.ts"
    },
    "definitions/scripts/build.js": {
      "filePath": "definitions/scripts/build.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/definitions/scripts/build.js",
      "size": 25481,
      "lines": 791,
      "imports": [
        {
          "from": "fs/promises",
          "named": [],
          "typeOnly": false,
          "line": 17,
          "raw": "import fs from 'fs/promises';",
          "default": "fs"
        },
        {
          "from": "path",
          "named": [],
          "typeOnly": false,
          "line": 18,
          "raw": "import path from 'path';",
          "default": "path"
        },
        {
          "from": "url",
          "named": [
            "fileURLToPath"
          ],
          "typeOnly": false,
          "line": 19,
          "raw": "import { fileURLToPath } from 'url';"
        },
        {
          "from": "../types/index.js",
          "named": [
            "MCPTool"
          ],
          "typeOnly": false,
          "line": 350,
          "raw": "import { MCPTool } from '../types/index.js';"
        },
        {
          "from": "./handlers/base-tool-handler.js",
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 351,
          "raw": "import { BaseToolHandler } from './handlers/base-tool-handler.js';"
        },
        {
          "from": "./tool-registry.js",
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 352,
          "raw": "import { ToolRegistry } from './tool-registry.js';"
        },
        {
          "from": "../types/index.js",
          "named": [
            "Prompt",
            "PromptTemplate",
            "PromptMessage"
          ],
          "typeOnly": false,
          "line": 447,
          "raw": "import { Prompt, PromptTemplate, PromptMessage } from '../types/index.js';"
        },
        {
          "from": "../types/index.js",
          "named": [
            "MCPResource"
          ],
          "typeOnly": false,
          "line": 587,
          "raw": "import { MCPResource } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "generateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 366,
          "raw": "export function generateToolDefinitions(registry: ToolRegistry): MCPTool[] {"
        },
        {
          "named": [
            "validateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 403,
          "raw": "export function validateToolDefinitions(registry: ToolRegistry): {"
        },
        {
          "named": [
            "getPromptTemplates"
          ],
          "typeOnly": false,
          "line": 519,
          "raw": "export function getPromptTemplates(): PromptTemplate[] {"
        },
        {
          "named": [
            "getPromptTemplate"
          ],
          "typeOnly": false,
          "line": 529,
          "raw": "export function getPromptTemplate(name: string): PromptTemplate | undefined {"
        },
        {
          "named": [
            "getPromptTemplatesByCategory"
          ],
          "typeOnly": false,
          "line": 540,
          "raw": "export function getPromptTemplatesByCategory(category: string): PromptTemplate[] {"
        },
        {
          "named": [
            "getResources"
          ],
          "typeOnly": false,
          "line": 604,
          "raw": "export function getResources(): MCPResource[] {"
        },
        {
          "named": [
            "getResource"
          ],
          "typeOnly": false,
          "line": 614,
          "raw": "export function getResource(uri: string): MCPResource | undefined {"
        },
        {
          "named": [
            "getResourceContent"
          ],
          "typeOnly": false,
          "line": 624,
          "raw": "export function getResourceContent(uri: string): any {"
        },
        {
          "named": [
            "getResourcesByCategory"
          ],
          "typeOnly": false,
          "line": 634,
          "raw": "export function getResourcesByCategory(category: string): MCPResource[] {"
        },
        {
          "named": [
            "RESOURCE_URIS"
          ],
          "typeOnly": false,
          "line": 641,
          "raw": "export const RESOURCE_URIS = {"
        },
        {
          "named": [
            "mcpResources"
          ],
          "typeOnly": false,
          "line": 646,
          "raw": "export const mcpResources = getResources();"
        },
        {
          "named": [
            "resourceContent"
          ],
          "typeOnly": false,
          "line": 647,
          "raw": "export const resourceContent = RESOURCE_CONTENT;"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 668,
          "raw": "export * from '../../shared/core/tool-definitions.js';",
          "all": true,
          "from": "../../shared/core/tool-definitions.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 669,
          "raw": "export * from '../../shared/prompts/prompt-templates.js';",
          "all": true,
          "from": "../../shared/prompts/prompt-templates.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 670,
          "raw": "export * from '../../shared/resources/resources.js';",
          "all": true,
          "from": "../../shared/resources/resources.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 673,
          "raw": "export * from './types/tools-types.js';",
          "all": true,
          "from": "./types/tools-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 674,
          "raw": "export * from './types/prompts-types.js';",
          "all": true,
          "from": "./types/prompts-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 675,
          "raw": "export * from './types/resources-types.js';",
          "all": true,
          "from": "./types/resources-types.js"
        },
        {
          "named": [
            "DEFINITIONS_METADATA"
          ],
          "typeOnly": false,
          "line": 678,
          "raw": "export const DEFINITIONS_METADATA = {"
        },
        {
          "named": [
            "build"
          ],
          "typeOnly": false,
          "line": 791,
          "raw": "export { build };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "fs/promises",
        "path",
        "url"
      ],
      "isDuplicated": true,
      "duplicatePath": "npm-package/definitions/scripts/build.js"
    },
    "definitions/scripts/enhanced-build.js": {
      "filePath": "definitions/scripts/enhanced-build.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/definitions/scripts/enhanced-build.js",
      "size": 24451,
      "lines": 837,
      "imports": [
        {
          "from": "fs/promises",
          "named": [],
          "typeOnly": false,
          "line": 14,
          "raw": "import fs from 'fs/promises';",
          "default": "fs"
        },
        {
          "from": "path",
          "named": [],
          "typeOnly": false,
          "line": 15,
          "raw": "import path from 'path';",
          "default": "path"
        },
        {
          "from": "url",
          "named": [
            "fileURLToPath"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { fileURLToPath } from 'url';"
        },
        {
          "from": "react",
          "named": [
            "useState",
            "useEffect"
          ],
          "typeOnly": false,
          "line": 479,
          "raw": "import { useState, useEffect } from 'react';"
        }
      ],
      "exports": [
        {
          "named": [
            "enhancedBuild"
          ],
          "typeOnly": false,
          "line": 837,
          "raw": "export { enhancedBuild };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "fs/promises",
        "path",
        "url",
        "react"
      ],
      "isDuplicated": false,
      "duplicatePath": "npm-package/definitions/scripts/enhanced-build.js"
    },
    "definitions/scripts/enhanced-validate.js": {
      "filePath": "definitions/scripts/enhanced-validate.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/definitions/scripts/enhanced-validate.js",
      "size": 23249,
      "lines": 779,
      "imports": [
        {
          "from": "fs/promises",
          "named": [],
          "typeOnly": false,
          "line": 14,
          "raw": "import fs from 'fs/promises';",
          "default": "fs"
        },
        {
          "from": "path",
          "named": [],
          "typeOnly": false,
          "line": 15,
          "raw": "import path from 'path';",
          "default": "path"
        },
        {
          "from": "url",
          "named": [
            "fileURLToPath"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { fileURLToPath } from 'url';"
        }
      ],
      "exports": [
        {
          "named": [
            "enhancedValidate"
          ],
          "typeOnly": false,
          "line": 779,
          "raw": "export { enhancedValidate };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "fs/promises",
        "path",
        "url"
      ],
      "isDuplicated": false,
      "duplicatePath": "npm-package/definitions/scripts/enhanced-validate.js"
    },
    "definitions/scripts/migrate.js": {
      "filePath": "definitions/scripts/migrate.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/definitions/scripts/migrate.js",
      "size": 7036,
      "lines": 222,
      "imports": [
        {
          "from": "fs/promises",
          "named": [],
          "typeOnly": false,
          "line": 10,
          "raw": "import fs from 'fs/promises';",
          "default": "fs"
        },
        {
          "from": "path",
          "named": [],
          "typeOnly": false,
          "line": 11,
          "raw": "import path from 'path';",
          "default": "path"
        },
        {
          "from": "url",
          "named": [
            "fileURLToPath"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { fileURLToPath } from 'url';"
        }
      ],
      "exports": [
        {
          "named": [
            "migrate"
          ],
          "typeOnly": false,
          "line": 222,
          "raw": "export { migrate };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "fs/promises",
        "path",
        "url"
      ],
      "isDuplicated": true,
      "duplicatePath": "npm-package/definitions/scripts/migrate.js"
    },
    "definitions/scripts/validate.js": {
      "filePath": "definitions/scripts/validate.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/definitions/scripts/validate.js",
      "size": 9086,
      "lines": 321,
      "imports": [
        {
          "from": "fs/promises",
          "named": [],
          "typeOnly": false,
          "line": 10,
          "raw": "import fs from 'fs/promises';",
          "default": "fs"
        },
        {
          "from": "path",
          "named": [],
          "typeOnly": false,
          "line": 11,
          "raw": "import path from 'path';",
          "default": "path"
        },
        {
          "from": "url",
          "named": [
            "fileURLToPath"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { fileURLToPath } from 'url';"
        }
      ],
      "exports": [
        {
          "named": [
            "validate"
          ],
          "typeOnly": false,
          "line": 321,
          "raw": "export { validate };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "fs/promises",
        "path",
        "url"
      ],
      "isDuplicated": true,
      "duplicatePath": "npm-package/definitions/scripts/validate.js"
    },
    "examples/configuration/advanced-feature-flags.js": {
      "filePath": "examples/configuration/advanced-feature-flags.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/examples/configuration/advanced-feature-flags.js",
      "size": 7724,
      "lines": 233,
      "imports": [
        {
          "from": "../../shared/config/index.js",
          "named": [
            "ConfigurationSystem"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { ConfigurationSystem } from '../../shared/config/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "advancedFeatureFlagsExample"
          ],
          "typeOnly": false,
          "line": 233,
          "raw": "export { advancedFeatureFlagsExample };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "examples/configuration/basic-setup.js": {
      "filePath": "examples/configuration/basic-setup.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/examples/configuration/basic-setup.js",
      "size": 2806,
      "lines": 81,
      "imports": [
        {
          "from": "../../shared/config/index.js",
          "named": [
            "ConfigurationSystem",
            "getConfig",
            "isFeatureEnabled"
          ],
          "typeOnly": false,
          "line": 7,
          "raw": "import { ConfigurationSystem, getConfig, isFeatureEnabled } from '../../shared/config/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "basicSetupExample"
          ],
          "typeOnly": false,
          "line": 81,
          "raw": "export { basicSetupExample };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "examples/configuration/custom-source.js": {
      "filePath": "examples/configuration/custom-source.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/examples/configuration/custom-source.js",
      "size": 16292,
      "lines": 587,
      "imports": [
        {
          "from": "../../shared/config/index.js",
          "named": [
            "ConfigurationSystem",
            "ConfigurationSource"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { ConfigurationSystem, ConfigurationSource } from '../../shared/config/index.js';"
        },
        {
          "from": "events",
          "named": [
            "EventEmitter"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { EventEmitter } from 'events';"
        }
      ],
      "exports": [
        {
          "named": [
            "customSourceExample",
            "DatabaseConfigurationSource",
            "APIConfigurationSource",
            "YAMLConfigurationSource"
          ],
          "typeOnly": false,
          "line": 587,
          "raw": "export { customSourceExample, DatabaseConfigurationSource, APIConfigurationSource, YAMLConfigurationSource };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "events"
      ],
      "isDuplicated": false
    },
    "examples/configuration/index.js": {
      "filePath": "examples/configuration/index.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/examples/configuration/index.js",
      "size": 8640,
      "lines": 277,
      "imports": [
        {
          "from": "./basic-setup.js",
          "named": [
            "basicSetupExample"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "import { basicSetupExample } from './basic-setup.js';"
        },
        {
          "from": "./advanced-feature-flags.js",
          "named": [
            "advancedFeatureFlagsExample"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { advancedFeatureFlagsExample } from './advanced-feature-flags.js';"
        },
        {
          "from": "./runtime-updates.js",
          "named": [
            "runtimeUpdatesExample"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { runtimeUpdatesExample } from './runtime-updates.js';"
        },
        {
          "from": "./multi-environment.js",
          "named": [
            "multiEnvironmentExample"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { multiEnvironmentExample } from './multi-environment.js';"
        },
        {
          "from": "./custom-source.js",
          "named": [
            "customSourceExample"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { customSourceExample } from './custom-source.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "examples"
          ],
          "typeOnly": false,
          "line": 19,
          "raw": "export const examples = {"
        },
        {
          "named": [
            "listExamples"
          ],
          "typeOnly": false,
          "line": 144,
          "raw": "export function listExamples() {"
        },
        {
          "named": [
            "getExamplesByDifficulty"
          ],
          "typeOnly": false,
          "line": 168,
          "raw": "export function getExamplesByDifficulty(difficulty) {"
        },
        {
          "named": [
            "getExamplesByTopic"
          ],
          "typeOnly": false,
          "line": 180,
          "raw": "export function getExamplesByTopic(topic) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "examples/configuration/multi-environment.js": {
      "filePath": "examples/configuration/multi-environment.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/examples/configuration/multi-environment.js",
      "size": 11283,
      "lines": 327,
      "imports": [
        {
          "from": "../../shared/config/index.js",
          "named": [
            "ConfigurationSystem",
            "executeDeploymentPipeline"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { ConfigurationSystem, executeDeploymentPipeline } from '../../shared/config/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "multiEnvironmentExample"
          ],
          "typeOnly": false,
          "line": 327,
          "raw": "export { multiEnvironmentExample };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "examples/configuration/runtime-updates.js": {
      "filePath": "examples/configuration/runtime-updates.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/examples/configuration/runtime-updates.js",
      "size": 9046,
      "lines": 275,
      "imports": [
        {
          "from": "../../shared/config/index.js",
          "named": [
            "ConfigurationSystem"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { ConfigurationSystem } from '../../shared/config/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "runtimeUpdatesExample"
          ],
          "typeOnly": false,
          "line": 275,
          "raw": "export { runtimeUpdatesExample };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "npm-package/bin/openai-vector-store-mcp.js": {
      "filePath": "npm-package/bin/openai-vector-store-mcp.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/bin/openai-vector-store-mcp.js",
      "size": 1004,
      "lines": 32,
      "imports": [],
      "exports": [],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "npm-package/definitions/generated/index.ts": {
      "filePath": "npm-package/definitions/generated/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/definitions/generated/index.ts",
      "size": 1869,
      "lines": 39,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 11,
          "raw": "export * from '../../shared/core/tool-definitions.js';",
          "all": true,
          "from": "../../shared/core/tool-definitions.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 12,
          "raw": "export * from '../../shared/prompts/prompt-templates.js';",
          "all": true,
          "from": "../../shared/prompts/prompt-templates.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 13,
          "raw": "export * from '../../shared/resources/resources.js';",
          "all": true,
          "from": "../../shared/resources/resources.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 16,
          "raw": "export * from './types/tools-types.js';",
          "all": true,
          "from": "./types/tools-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 17,
          "raw": "export * from './types/prompts-types.js';",
          "all": true,
          "from": "./types/prompts-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 18,
          "raw": "export * from './types/resources-types.js';",
          "all": true,
          "from": "./types/resources-types.js"
        },
        {
          "named": [
            "DEFINITIONS_METADATA"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "export const DEFINITIONS_METADATA = {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "definitions/generated/index.ts"
    },
    "npm-package/definitions/generated/types/prompts-types.ts": {
      "filePath": "npm-package/definitions/generated/types/prompts-types.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/definitions/generated/types/prompts-types.ts",
      "size": 4593,
      "lines": 152,
      "imports": [],
      "exports": [
        {
          "named": [
            "CreateCodingAssistantPrompt"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "export interface CreateCodingAssistantPrompt {"
        },
        {
          "named": [
            "CreateDataAnalystPrompt"
          ],
          "typeOnly": false,
          "line": 23,
          "raw": "export interface CreateDataAnalystPrompt {"
        },
        {
          "named": [
            "CreateWritingAssistantPrompt"
          ],
          "typeOnly": false,
          "line": 34,
          "raw": "export interface CreateWritingAssistantPrompt {"
        },
        {
          "named": [
            "CreateConversationThreadPrompt"
          ],
          "typeOnly": false,
          "line": 47,
          "raw": "export interface CreateConversationThreadPrompt {"
        },
        {
          "named": [
            "OrganizeThreadMessagesPrompt"
          ],
          "typeOnly": false,
          "line": 60,
          "raw": "export interface OrganizeThreadMessagesPrompt {"
        },
        {
          "named": [
            "ExplainCodePrompt"
          ],
          "typeOnly": false,
          "line": 71,
          "raw": "export interface ExplainCodePrompt {"
        },
        {
          "named": [
            "ReviewCodePrompt"
          ],
          "typeOnly": false,
          "line": 84,
          "raw": "export interface ReviewCodePrompt {"
        },
        {
          "named": [
            "ConfigureAssistantRunPrompt"
          ],
          "typeOnly": false,
          "line": 97,
          "raw": "export interface ConfigureAssistantRunPrompt {"
        },
        {
          "named": [
            "DebugRunIssuesPrompt"
          ],
          "typeOnly": false,
          "line": 110,
          "raw": "export interface DebugRunIssuesPrompt {"
        },
        {
          "named": [
            "AnalyzeDatasetPrompt"
          ],
          "typeOnly": false,
          "line": 123,
          "raw": "export interface AnalyzeDatasetPrompt {"
        },
        {
          "named": [
            "PromptsTypesMap"
          ],
          "typeOnly": false,
          "line": 140,
          "raw": "export interface PromptsTypesMap {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "definitions/generated/types/prompts-types.ts"
    },
    "npm-package/definitions/generated/types/resources-types.ts": {
      "filePath": "npm-package/definitions/generated/types/resources-types.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/definitions/generated/types/resources-types.ts",
      "size": 2510,
      "lines": 86,
      "imports": [],
      "exports": [
        {
          "named": [
            "Coding"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "export interface Coding Assistant TemplateResource {"
        },
        {
          "named": [
            "Data"
          ],
          "typeOnly": false,
          "line": 19,
          "raw": "export interface Data Analyst TemplateResource {"
        },
        {
          "named": [
            "Customer"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export interface Customer Support TemplateResource {"
        },
        {
          "named": [
            "OpenAI"
          ],
          "typeOnly": false,
          "line": 37,
          "raw": "export interface OpenAI Assistants API ReferenceResource {"
        },
        {
          "named": [
            "Best"
          ],
          "typeOnly": false,
          "line": 46,
          "raw": "export interface Best Practices GuideResource {"
        },
        {
          "named": [
            "Troubleshooting"
          ],
          "typeOnly": false,
          "line": 55,
          "raw": "export interface Troubleshooting GuideResource {"
        },
        {
          "named": [
            "Batch"
          ],
          "typeOnly": false,
          "line": 64,
          "raw": "export interface Batch Processing WorkflowResource {"
        },
        {
          "named": [
            "ResourcesTypesMap"
          ],
          "typeOnly": false,
          "line": 77,
          "raw": "export interface ResourcesTypesMap {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "definitions/generated/types/resources-types.ts"
    },
    "npm-package/definitions/generated/types/tool-params.ts": {
      "filePath": "npm-package/definitions/generated/types/tool-params.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/definitions/generated/types/tool-params.ts",
      "size": 12622,
      "lines": 250,
      "imports": [],
      "exports": [
        {
          "named": [
            "AssistantCreateParams"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "export interface AssistantCreateParams {"
        },
        {
          "named": [
            "AssistantListParams"
          ],
          "typeOnly": false,
          "line": 25,
          "raw": "export interface AssistantListParams {"
        },
        {
          "named": [
            "AssistantGetParams"
          ],
          "typeOnly": false,
          "line": 36,
          "raw": "export interface AssistantGetParams {"
        },
        {
          "named": [
            "AssistantUpdateParams"
          ],
          "typeOnly": false,
          "line": 41,
          "raw": "export interface AssistantUpdateParams {"
        },
        {
          "named": [
            "AssistantDeleteParams"
          ],
          "typeOnly": false,
          "line": 58,
          "raw": "export interface AssistantDeleteParams {"
        },
        {
          "named": [
            "ThreadCreateParams"
          ],
          "typeOnly": false,
          "line": 63,
          "raw": "export interface ThreadCreateParams {"
        },
        {
          "named": [
            "ThreadGetParams"
          ],
          "typeOnly": false,
          "line": 70,
          "raw": "export interface ThreadGetParams {"
        },
        {
          "named": [
            "ThreadUpdateParams"
          ],
          "typeOnly": false,
          "line": 75,
          "raw": "export interface ThreadUpdateParams {"
        },
        {
          "named": [
            "ThreadDeleteParams"
          ],
          "typeOnly": false,
          "line": 82,
          "raw": "export interface ThreadDeleteParams {"
        },
        {
          "named": [
            "MessageCreateParams"
          ],
          "typeOnly": false,
          "line": 87,
          "raw": "export interface MessageCreateParams {"
        },
        {
          "named": [
            "MessageListParams"
          ],
          "typeOnly": false,
          "line": 98,
          "raw": "export interface MessageListParams {"
        },
        {
          "named": [
            "MessageGetParams"
          ],
          "typeOnly": false,
          "line": 113,
          "raw": "export interface MessageGetParams {"
        },
        {
          "named": [
            "MessageUpdateParams"
          ],
          "typeOnly": false,
          "line": 120,
          "raw": "export interface MessageUpdateParams {"
        },
        {
          "named": [
            "MessageDeleteParams"
          ],
          "typeOnly": false,
          "line": 129,
          "raw": "export interface MessageDeleteParams {"
        },
        {
          "named": [
            "RunCreateParams"
          ],
          "typeOnly": false,
          "line": 136,
          "raw": "export interface RunCreateParams {"
        },
        {
          "named": [
            "RunListParams"
          ],
          "typeOnly": false,
          "line": 153,
          "raw": "export interface RunListParams {"
        },
        {
          "named": [
            "RunGetParams"
          ],
          "typeOnly": false,
          "line": 166,
          "raw": "export interface RunGetParams {"
        },
        {
          "named": [
            "RunUpdateParams"
          ],
          "typeOnly": false,
          "line": 173,
          "raw": "export interface RunUpdateParams {"
        },
        {
          "named": [
            "RunCancelParams"
          ],
          "typeOnly": false,
          "line": 182,
          "raw": "export interface RunCancelParams {"
        },
        {
          "named": [
            "RunSubmitToolOutputsParams"
          ],
          "typeOnly": false,
          "line": 189,
          "raw": "export interface RunSubmitToolOutputsParams {"
        },
        {
          "named": [
            "RunStepListParams"
          ],
          "typeOnly": false,
          "line": 198,
          "raw": "export interface RunStepListParams {"
        },
        {
          "named": [
            "RunStepGetParams"
          ],
          "typeOnly": false,
          "line": 213,
          "raw": "export interface RunStepGetParams {"
        },
        {
          "named": [
            "ToolParamsMap"
          ],
          "typeOnly": false,
          "line": 226,
          "raw": "export interface ToolParamsMap {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "definitions/generated/types/tool-params.ts"
    },
    "npm-package/definitions/generated/types/tools-types.ts": {
      "filePath": "npm-package/definitions/generated/types/tools-types.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/definitions/generated/types/tools-types.ts",
      "size": 12596,
      "lines": 250,
      "imports": [],
      "exports": [
        {
          "named": [
            "AssistantCreateParams"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "export interface AssistantCreateParams {"
        },
        {
          "named": [
            "AssistantListParams"
          ],
          "typeOnly": false,
          "line": 25,
          "raw": "export interface AssistantListParams {"
        },
        {
          "named": [
            "AssistantGetParams"
          ],
          "typeOnly": false,
          "line": 36,
          "raw": "export interface AssistantGetParams {"
        },
        {
          "named": [
            "AssistantUpdateParams"
          ],
          "typeOnly": false,
          "line": 41,
          "raw": "export interface AssistantUpdateParams {"
        },
        {
          "named": [
            "AssistantDeleteParams"
          ],
          "typeOnly": false,
          "line": 58,
          "raw": "export interface AssistantDeleteParams {"
        },
        {
          "named": [
            "ThreadCreateParams"
          ],
          "typeOnly": false,
          "line": 63,
          "raw": "export interface ThreadCreateParams {"
        },
        {
          "named": [
            "ThreadGetParams"
          ],
          "typeOnly": false,
          "line": 70,
          "raw": "export interface ThreadGetParams {"
        },
        {
          "named": [
            "ThreadUpdateParams"
          ],
          "typeOnly": false,
          "line": 75,
          "raw": "export interface ThreadUpdateParams {"
        },
        {
          "named": [
            "ThreadDeleteParams"
          ],
          "typeOnly": false,
          "line": 82,
          "raw": "export interface ThreadDeleteParams {"
        },
        {
          "named": [
            "MessageCreateParams"
          ],
          "typeOnly": false,
          "line": 87,
          "raw": "export interface MessageCreateParams {"
        },
        {
          "named": [
            "MessageListParams"
          ],
          "typeOnly": false,
          "line": 98,
          "raw": "export interface MessageListParams {"
        },
        {
          "named": [
            "MessageGetParams"
          ],
          "typeOnly": false,
          "line": 113,
          "raw": "export interface MessageGetParams {"
        },
        {
          "named": [
            "MessageUpdateParams"
          ],
          "typeOnly": false,
          "line": 120,
          "raw": "export interface MessageUpdateParams {"
        },
        {
          "named": [
            "MessageDeleteParams"
          ],
          "typeOnly": false,
          "line": 129,
          "raw": "export interface MessageDeleteParams {"
        },
        {
          "named": [
            "RunCreateParams"
          ],
          "typeOnly": false,
          "line": 136,
          "raw": "export interface RunCreateParams {"
        },
        {
          "named": [
            "RunListParams"
          ],
          "typeOnly": false,
          "line": 153,
          "raw": "export interface RunListParams {"
        },
        {
          "named": [
            "RunGetParams"
          ],
          "typeOnly": false,
          "line": 166,
          "raw": "export interface RunGetParams {"
        },
        {
          "named": [
            "RunUpdateParams"
          ],
          "typeOnly": false,
          "line": 173,
          "raw": "export interface RunUpdateParams {"
        },
        {
          "named": [
            "RunCancelParams"
          ],
          "typeOnly": false,
          "line": 182,
          "raw": "export interface RunCancelParams {"
        },
        {
          "named": [
            "RunSubmitToolOutputsParams"
          ],
          "typeOnly": false,
          "line": 189,
          "raw": "export interface RunSubmitToolOutputsParams {"
        },
        {
          "named": [
            "RunStepListParams"
          ],
          "typeOnly": false,
          "line": 198,
          "raw": "export interface RunStepListParams {"
        },
        {
          "named": [
            "RunStepGetParams"
          ],
          "typeOnly": false,
          "line": 213,
          "raw": "export interface RunStepGetParams {"
        },
        {
          "named": [
            "ToolsTypesMap"
          ],
          "typeOnly": false,
          "line": 226,
          "raw": "export interface ToolsTypesMap {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "definitions/generated/types/tools-types.ts"
    },
    "npm-package/definitions/scripts/build.js": {
      "filePath": "npm-package/definitions/scripts/build.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/definitions/scripts/build.js",
      "size": 25481,
      "lines": 791,
      "imports": [
        {
          "from": "fs/promises",
          "named": [],
          "typeOnly": false,
          "line": 17,
          "raw": "import fs from 'fs/promises';",
          "default": "fs"
        },
        {
          "from": "path",
          "named": [],
          "typeOnly": false,
          "line": 18,
          "raw": "import path from 'path';",
          "default": "path"
        },
        {
          "from": "url",
          "named": [
            "fileURLToPath"
          ],
          "typeOnly": false,
          "line": 19,
          "raw": "import { fileURLToPath } from 'url';"
        },
        {
          "from": "../types/index.js",
          "named": [
            "MCPTool"
          ],
          "typeOnly": false,
          "line": 350,
          "raw": "import { MCPTool } from '../types/index.js';"
        },
        {
          "from": "./handlers/base-tool-handler.js",
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 351,
          "raw": "import { BaseToolHandler } from './handlers/base-tool-handler.js';"
        },
        {
          "from": "./tool-registry.js",
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 352,
          "raw": "import { ToolRegistry } from './tool-registry.js';"
        },
        {
          "from": "../types/index.js",
          "named": [
            "Prompt",
            "PromptTemplate",
            "PromptMessage"
          ],
          "typeOnly": false,
          "line": 447,
          "raw": "import { Prompt, PromptTemplate, PromptMessage } from '../types/index.js';"
        },
        {
          "from": "../types/index.js",
          "named": [
            "MCPResource"
          ],
          "typeOnly": false,
          "line": 587,
          "raw": "import { MCPResource } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "generateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 366,
          "raw": "export function generateToolDefinitions(registry: ToolRegistry): MCPTool[] {"
        },
        {
          "named": [
            "validateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 403,
          "raw": "export function validateToolDefinitions(registry: ToolRegistry): {"
        },
        {
          "named": [
            "getPromptTemplates"
          ],
          "typeOnly": false,
          "line": 519,
          "raw": "export function getPromptTemplates(): PromptTemplate[] {"
        },
        {
          "named": [
            "getPromptTemplate"
          ],
          "typeOnly": false,
          "line": 529,
          "raw": "export function getPromptTemplate(name: string): PromptTemplate | undefined {"
        },
        {
          "named": [
            "getPromptTemplatesByCategory"
          ],
          "typeOnly": false,
          "line": 540,
          "raw": "export function getPromptTemplatesByCategory(category: string): PromptTemplate[] {"
        },
        {
          "named": [
            "getResources"
          ],
          "typeOnly": false,
          "line": 604,
          "raw": "export function getResources(): MCPResource[] {"
        },
        {
          "named": [
            "getResource"
          ],
          "typeOnly": false,
          "line": 614,
          "raw": "export function getResource(uri: string): MCPResource | undefined {"
        },
        {
          "named": [
            "getResourceContent"
          ],
          "typeOnly": false,
          "line": 624,
          "raw": "export function getResourceContent(uri: string): any {"
        },
        {
          "named": [
            "getResourcesByCategory"
          ],
          "typeOnly": false,
          "line": 634,
          "raw": "export function getResourcesByCategory(category: string): MCPResource[] {"
        },
        {
          "named": [
            "RESOURCE_URIS"
          ],
          "typeOnly": false,
          "line": 641,
          "raw": "export const RESOURCE_URIS = {"
        },
        {
          "named": [
            "mcpResources"
          ],
          "typeOnly": false,
          "line": 646,
          "raw": "export const mcpResources = getResources();"
        },
        {
          "named": [
            "resourceContent"
          ],
          "typeOnly": false,
          "line": 647,
          "raw": "export const resourceContent = RESOURCE_CONTENT;"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 668,
          "raw": "export * from '../../shared/core/tool-definitions.js';",
          "all": true,
          "from": "../../shared/core/tool-definitions.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 669,
          "raw": "export * from '../../shared/prompts/prompt-templates.js';",
          "all": true,
          "from": "../../shared/prompts/prompt-templates.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 670,
          "raw": "export * from '../../shared/resources/resources.js';",
          "all": true,
          "from": "../../shared/resources/resources.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 673,
          "raw": "export * from './types/tools-types.js';",
          "all": true,
          "from": "./types/tools-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 674,
          "raw": "export * from './types/prompts-types.js';",
          "all": true,
          "from": "./types/prompts-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 675,
          "raw": "export * from './types/resources-types.js';",
          "all": true,
          "from": "./types/resources-types.js"
        },
        {
          "named": [
            "DEFINITIONS_METADATA"
          ],
          "typeOnly": false,
          "line": 678,
          "raw": "export const DEFINITIONS_METADATA = {"
        },
        {
          "named": [
            "build"
          ],
          "typeOnly": false,
          "line": 791,
          "raw": "export { build };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "fs/promises",
        "path",
        "url"
      ],
      "isDuplicated": false,
      "duplicatePath": "definitions/scripts/build.js"
    },
    "npm-package/definitions/scripts/migrate.js": {
      "filePath": "npm-package/definitions/scripts/migrate.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/definitions/scripts/migrate.js",
      "size": 7036,
      "lines": 222,
      "imports": [
        {
          "from": "fs/promises",
          "named": [],
          "typeOnly": false,
          "line": 10,
          "raw": "import fs from 'fs/promises';",
          "default": "fs"
        },
        {
          "from": "path",
          "named": [],
          "typeOnly": false,
          "line": 11,
          "raw": "import path from 'path';",
          "default": "path"
        },
        {
          "from": "url",
          "named": [
            "fileURLToPath"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { fileURLToPath } from 'url';"
        }
      ],
      "exports": [
        {
          "named": [
            "migrate"
          ],
          "typeOnly": false,
          "line": 222,
          "raw": "export { migrate };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "fs/promises",
        "path",
        "url"
      ],
      "isDuplicated": false,
      "duplicatePath": "definitions/scripts/migrate.js"
    },
    "npm-package/definitions/scripts/validate.js": {
      "filePath": "npm-package/definitions/scripts/validate.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/definitions/scripts/validate.js",
      "size": 9086,
      "lines": 321,
      "imports": [
        {
          "from": "fs/promises",
          "named": [],
          "typeOnly": false,
          "line": 10,
          "raw": "import fs from 'fs/promises';",
          "default": "fs"
        },
        {
          "from": "path",
          "named": [],
          "typeOnly": false,
          "line": 11,
          "raw": "import path from 'path';",
          "default": "path"
        },
        {
          "from": "url",
          "named": [
            "fileURLToPath"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { fileURLToPath } from 'url';"
        }
      ],
      "exports": [
        {
          "named": [
            "validate"
          ],
          "typeOnly": false,
          "line": 321,
          "raw": "export { validate };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "fs/promises",
        "path",
        "url"
      ],
      "isDuplicated": false,
      "duplicatePath": "definitions/scripts/validate.js"
    },
    "npm-package/shared/core/base-mcp-handler.ts": {
      "filePath": "npm-package/shared/core/base-mcp-handler.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/base-mcp-handler.ts",
      "size": 19820,
      "lines": 625,
      "imports": [
        {
          "from": "../services/index.js",
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 42,
          "raw": "import { OpenAIService } from '../services/index.js';"
        },
        {
          "from": "../resources/index.js",
          "named": [
            "getAllResources",
            "getResource",
            "getResourceContent"
          ],
          "typeOnly": false,
          "line": 43,
          "raw": "import { getAllResources, getResource, getResourceContent } from '../resources/index.js';"
        },
        {
          "from": "./index.js",
          "named": [
            "setupHandlerSystem",
            "ToolRegistry",
            "generateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 44,
          "raw": "import { setupHandlerSystem, ToolRegistry, generateToolDefinitions } from './index.js';"
        },
        {
          "from": "./handlers/prompt-handlers.js",
          "named": [
            "createPromptHandlers",
            "PromptHandlerContext"
          ],
          "typeOnly": false,
          "line": 45,
          "raw": "import { createPromptHandlers, PromptHandlerContext } from './handlers/prompt-handlers.js';"
        },
        {
          "from": "./handlers/completion-handlers.js",
          "named": [
            "createCompletionHandlers",
            "CompletionHandlerContext"
          ],
          "typeOnly": false,
          "line": 46,
          "raw": "import { createCompletionHandlers, CompletionHandlerContext } from './handlers/completion-handlers.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "BaseMCPHandlerConfig"
          ],
          "typeOnly": false,
          "line": 57,
          "raw": "export interface BaseMCPHandlerConfig {"
        },
        {
          "named": [
            "TransportAdapter"
          ],
          "typeOnly": false,
          "line": 78,
          "raw": "export interface TransportAdapter {"
        },
        {
          "named": [
            "BaseMCPHandler"
          ],
          "typeOnly": false,
          "line": 93,
          "raw": "export class BaseMCPHandler {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/base-mcp-handler.ts"
    },
    "npm-package/shared/core/handlers/assistant-handlers.ts": {
      "filePath": "npm-package/shared/core/handlers/assistant-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/handlers/assistant-handlers.ts",
      "size": 5268,
      "lines": 201,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './base-tool-handler.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "AssistantCreateHandler"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export class AssistantCreateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "AssistantListHandler"
          ],
          "typeOnly": false,
          "line": 56,
          "raw": "export class AssistantListHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "AssistantGetHandler"
          ],
          "typeOnly": false,
          "line": 84,
          "raw": "export class AssistantGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "AssistantUpdateHandler"
          ],
          "typeOnly": false,
          "line": 112,
          "raw": "export class AssistantUpdateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "AssistantDeleteHandler"
          ],
          "typeOnly": false,
          "line": 165,
          "raw": "export class AssistantDeleteHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createAssistantHandlers"
          ],
          "typeOnly": false,
          "line": 193,
          "raw": "export function createAssistantHandlers(context: ToolHandlerContext): Record<string, BaseToolHandler> {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/handlers/assistant-handlers.ts"
    },
    "npm-package/shared/core/handlers/base-prompt-handler.ts": {
      "filePath": "npm-package/shared/core/handlers/base-prompt-handler.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/handlers/base-prompt-handler.ts",
      "size": 3350,
      "lines": 125,
      "imports": [
        {
          "from": "../../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { MCPError, ErrorCodes } from '../../types/index.js';"
        },
        {
          "from": "../../validation/index.js",
          "named": [
            "ValidationResult"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { ValidationResult } from '../../validation/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PromptHandlerContext"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "export interface PromptHandlerContext {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/handlers/base-prompt-handler.ts"
    },
    "npm-package/shared/core/handlers/base-tool-handler.ts": {
      "filePath": "npm-package/shared/core/handlers/base-tool-handler.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/handlers/base-tool-handler.ts",
      "size": 4537,
      "lines": 160,
      "imports": [
        {
          "from": "../../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { MCPError, ErrorCodes } from '../../types/index.js';"
        },
        {
          "from": "../../validation/index.js",
          "named": [
            "ValidationResult"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { ValidationResult } from '../../validation/index.js';"
        },
        {
          "from": "../../services/index.js",
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { OpenAIService } from '../../services/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "export interface ToolHandlerContext {"
        },
        {
          "named": [
            "ToolExecutionResult"
          ],
          "typeOnly": false,
          "line": 30,
          "raw": "export interface ToolExecutionResult {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/handlers/base-tool-handler.ts"
    },
    "npm-package/shared/core/handlers/completion-handlers.ts": {
      "filePath": "npm-package/shared/core/handlers/completion-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/handlers/completion-handlers.ts",
      "size": 12407,
      "lines": 464,
      "imports": [
        {
          "from": "../../resources/index.js",
          "named": [
            "getResources"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "import { getResources } from '../../resources/index.js';"
        },
        {
          "from": "../tool-definitions.js",
          "named": [
            "generateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 22,
          "raw": "import { generateToolDefinitions } from '../tool-definitions.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "CompletionHandlerContext"
          ],
          "typeOnly": false,
          "line": 27,
          "raw": "export interface CompletionHandlerContext {"
        },
        {
          "named": [
            "CompletionHandler"
          ],
          "typeOnly": false,
          "line": 34,
          "raw": "export class CompletionHandler {"
        },
        {
          "named": [
            "createCompletionHandlers"
          ],
          "typeOnly": false,
          "line": 446,
          "raw": "export function createCompletionHandlers(context: CompletionHandlerContext) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/handlers/completion-handlers.ts"
    },
    "npm-package/shared/core/handlers/index.ts": {
      "filePath": "npm-package/shared/core/handlers/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/handlers/index.ts",
      "size": 6080,
      "lines": 152,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './base-tool-handler.js';"
        },
        {
          "from": "./assistant-handlers.js",
          "named": [
            "createAssistantHandlers"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { createAssistantHandlers } from './assistant-handlers.js';"
        },
        {
          "from": "./thread-handlers.js",
          "named": [
            "createThreadHandlers"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { createThreadHandlers } from './thread-handlers.js';"
        },
        {
          "from": "./message-handlers.js",
          "named": [
            "createMessageHandlers"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { createMessageHandlers } from './message-handlers.js';"
        },
        {
          "from": "./run-handlers.js",
          "named": [
            "createRunHandlers"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { createRunHandlers } from './run-handlers.js';"
        },
        {
          "from": "./run-step-handlers.js",
          "named": [
            "createRunStepHandlers"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { createRunStepHandlers } from './run-step-handlers.js';"
        },
        {
          "from": "./completion-handlers.js",
          "named": [
            "createCompletionHandlers"
          ],
          "typeOnly": false,
          "line": 17,
          "raw": "import { createCompletionHandlers } from './completion-handlers.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 20,
          "raw": "export { BaseToolHandler } from './base-tool-handler.js';",
          "from": "./base-tool-handler.js"
        },
        {
          "named": [
            "ToolHandlerContext"
          ],
          "typeOnly": true,
          "line": 21,
          "raw": "export type { ToolHandlerContext } from './base-tool-handler.js';",
          "from": "./base-tool-handler.js"
        },
        {
          "named": [
            "createAssistantHandlers"
          ],
          "typeOnly": false,
          "line": 24,
          "raw": "export { createAssistantHandlers } from './assistant-handlers.js';",
          "from": "./assistant-handlers.js"
        },
        {
          "named": [
            "createThreadHandlers"
          ],
          "typeOnly": false,
          "line": 25,
          "raw": "export { createThreadHandlers } from './thread-handlers.js';",
          "from": "./thread-handlers.js"
        },
        {
          "named": [
            "createMessageHandlers"
          ],
          "typeOnly": false,
          "line": 26,
          "raw": "export { createMessageHandlers } from './message-handlers.js';",
          "from": "./message-handlers.js"
        },
        {
          "named": [
            "createRunHandlers"
          ],
          "typeOnly": false,
          "line": 27,
          "raw": "export { createRunHandlers } from './run-handlers.js';",
          "from": "./run-handlers.js"
        },
        {
          "named": [
            "createRunStepHandlers"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export { createRunStepHandlers } from './run-step-handlers.js';",
          "from": "./run-step-handlers.js"
        },
        {
          "named": [
            "createCompletionHandlers"
          ],
          "typeOnly": false,
          "line": 29,
          "raw": "export { createCompletionHandlers } from './completion-handlers.js';",
          "from": "./completion-handlers.js"
        },
        {
          "named": [
            "createAllHandlers"
          ],
          "typeOnly": false,
          "line": 40,
          "raw": "export function createAllHandlers(context: ToolHandlerContext): {"
        },
        {
          "named": [
            "createFlatHandlerMap"
          ],
          "typeOnly": false,
          "line": 106,
          "raw": "export function createFlatHandlerMap(context: ToolHandlerContext): Record<string, BaseToolHandler> {"
        },
        {
          "named": [
            "HANDLER_CATEGORIES"
          ],
          "typeOnly": false,
          "line": 114,
          "raw": "export const HANDLER_CATEGORIES = {"
        },
        {
          "named": [
            "TOTAL_TOOL_COUNT"
          ],
          "typeOnly": false,
          "line": 125,
          "raw": "export const TOTAL_TOOL_COUNT = Object.values(HANDLER_CATEGORIES).reduce("
        },
        {
          "named": [
            "validateHandlerCompleteness"
          ],
          "typeOnly": false,
          "line": 136,
          "raw": "export function validateHandlerCompleteness(handlers: Record<string, BaseToolHandler>): {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/handlers/index.ts"
    },
    "npm-package/shared/core/handlers/message-handlers.ts": {
      "filePath": "npm-package/shared/core/handlers/message-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/handlers/message-handlers.ts",
      "size": 7534,
      "lines": 277,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './base-tool-handler.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "MessageCreateHandler"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export class MessageCreateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "MessageListHandler"
          ],
          "typeOnly": false,
          "line": 87,
          "raw": "export class MessageListHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "MessageGetHandler"
          ],
          "typeOnly": false,
          "line": 138,
          "raw": "export class MessageGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "MessageUpdateHandler"
          ],
          "typeOnly": false,
          "line": 178,
          "raw": "export class MessageUpdateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "MessageDeleteHandler"
          ],
          "typeOnly": false,
          "line": 229,
          "raw": "export class MessageDeleteHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createMessageHandlers"
          ],
          "typeOnly": false,
          "line": 269,
          "raw": "export function createMessageHandlers(context: ToolHandlerContext): Record<string, BaseToolHandler> {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/handlers/message-handlers.ts"
    },
    "npm-package/shared/core/handlers/prompt-handlers.ts": {
      "filePath": "npm-package/shared/core/handlers/prompt-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/handlers/prompt-handlers.ts",
      "size": 5330,
      "lines": 192,
      "imports": [
        {
          "from": "./base-prompt-handler.js",
          "named": [
            "BasePromptHandler"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { BasePromptHandler } from './base-prompt-handler.js';"
        },
        {
          "from": "./base-prompt-handler.js",
          "named": [
            "PromptHandlerContext"
          ],
          "typeOnly": true,
          "line": 10,
          "raw": "import type { PromptHandlerContext } from './base-prompt-handler.js';"
        },
        {
          "from": "../../validation/index.js",
          "named": [
            "ValidationResult"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { ValidationResult } from '../../validation/index.js';"
        },
        {
          "from": "../../prompts/index.js",
          "named": [
            "getAvailablePrompts",
            "generatePromptMessages",
            "hasPrompt"
          ],
          "typeOnly": false,
          "line": 18,
          "raw": "import { getAvailablePrompts, generatePromptMessages, hasPrompt } from '../../prompts/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PromptsListHandler"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export class PromptsListHandler extends BasePromptHandler {"
        },
        {
          "named": [
            "PromptsGetHandler"
          ],
          "typeOnly": false,
          "line": 85,
          "raw": "export class PromptsGetHandler extends BasePromptHandler {"
        },
        {
          "named": [
            "PromptHandlerContext"
          ],
          "typeOnly": true,
          "line": 168,
          "raw": "export type { PromptHandlerContext };"
        },
        {
          "named": [
            "createPromptHandlers"
          ],
          "typeOnly": false,
          "line": 173,
          "raw": "export function createPromptHandlers(context: PromptHandlerContext) {"
        },
        {
          "named": [
            "getPromptHandlerMethods"
          ],
          "typeOnly": false,
          "line": 183,
          "raw": "export function getPromptHandlerMethods(): string[] {"
        },
        {
          "named": [
            "isPromptHandlerMethod"
          ],
          "typeOnly": false,
          "line": 190,
          "raw": "export function isPromptHandlerMethod(method: string): boolean {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/handlers/prompt-handlers.ts"
    },
    "npm-package/shared/core/handlers/run-handlers.ts": {
      "filePath": "npm-package/shared/core/handlers/run-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/handlers/run-handlers.ts",
      "size": 9783,
      "lines": 349,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './base-tool-handler.js';"
        },
        {
          "from": "../../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 17,
          "raw": "import { MCPError, ErrorCodes } from '../../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "RunCreateHandler"
          ],
          "typeOnly": false,
          "line": 30,
          "raw": "export class RunCreateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunListHandler"
          ],
          "typeOnly": false,
          "line": 87,
          "raw": "export class RunListHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunGetHandler"
          ],
          "typeOnly": false,
          "line": 130,
          "raw": "export class RunGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunUpdateHandler"
          ],
          "typeOnly": false,
          "line": 170,
          "raw": "export class RunUpdateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunCancelHandler"
          ],
          "typeOnly": false,
          "line": 221,
          "raw": "export class RunCancelHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunSubmitToolOutputsHandler"
          ],
          "typeOnly": false,
          "line": 261,
          "raw": "export class RunSubmitToolOutputsHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createRunHandlers"
          ],
          "typeOnly": false,
          "line": 340,
          "raw": "export function createRunHandlers(context: ToolHandlerContext): Record<string, BaseToolHandler> {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/handlers/run-handlers.ts"
    },
    "npm-package/shared/core/handlers/run-step-handlers.ts": {
      "filePath": "npm-package/shared/core/handlers/run-step-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/handlers/run-step-handlers.ts",
      "size": 3334,
      "lines": 122,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './base-tool-handler.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "RunStepListHandler"
          ],
          "typeOnly": false,
          "line": 22,
          "raw": "export class RunStepListHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunStepGetHandler"
          ],
          "typeOnly": false,
          "line": 71,
          "raw": "export class RunStepGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createRunStepHandlers"
          ],
          "typeOnly": false,
          "line": 117,
          "raw": "export function createRunStepHandlers(context: ToolHandlerContext): Record<string, BaseToolHandler> {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/handlers/run-step-handlers.ts"
    },
    "npm-package/shared/core/handlers/thread-handlers.ts": {
      "filePath": "npm-package/shared/core/handlers/thread-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/handlers/thread-handlers.ts",
      "size": 4279,
      "lines": 168,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './base-tool-handler.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ThreadCreateHandler"
          ],
          "typeOnly": false,
          "line": 24,
          "raw": "export class ThreadCreateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "ThreadGetHandler"
          ],
          "typeOnly": false,
          "line": 60,
          "raw": "export class ThreadGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "ThreadUpdateHandler"
          ],
          "typeOnly": false,
          "line": 88,
          "raw": "export class ThreadUpdateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "ThreadDeleteHandler"
          ],
          "typeOnly": false,
          "line": 133,
          "raw": "export class ThreadDeleteHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createThreadHandlers"
          ],
          "typeOnly": false,
          "line": 161,
          "raw": "export function createThreadHandlers(context: ToolHandlerContext): Record<string, BaseToolHandler> {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/handlers/thread-handlers.ts"
    },
    "npm-package/shared/core/index.ts": {
      "filePath": "npm-package/shared/core/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/index.ts",
      "size": 4693,
      "lines": 159,
      "imports": [
        {
          "from": "./handlers/base-tool-handler.js",
          "named": [
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 67,
          "raw": "import { ToolHandlerContext } from './handlers/base-tool-handler.js';"
        },
        {
          "from": "./tool-registry.js",
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 68,
          "raw": "import { ToolRegistry } from './tool-registry.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export { BaseToolHandler } from './handlers/base-tool-handler.js';",
          "from": "./handlers/base-tool-handler.js"
        },
        {
          "named": [
            "ToolHandlerContext"
          ],
          "typeOnly": true,
          "line": 29,
          "raw": "export type { ToolHandlerContext } from './handlers/base-tool-handler.js';",
          "from": "./handlers/base-tool-handler.js"
        },
        {
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 30,
          "raw": "export { ToolRegistry } from './tool-registry.js';",
          "from": "./tool-registry.js"
        },
        {
          "named": [
            "ToolRegistryStats"
          ],
          "typeOnly": true,
          "line": 31,
          "raw": "export type { ToolRegistryStats } from './tool-registry.js';",
          "from": "./tool-registry.js"
        },
        {
          "named": [
            "BaseMCPHandler"
          ],
          "typeOnly": false,
          "line": 32,
          "raw": "export { BaseMCPHandler } from './base-mcp-handler.js';",
          "from": "./base-mcp-handler.js"
        },
        {
          "named": [
            "BaseMCPHandlerConfig",
            "TransportAdapter"
          ],
          "typeOnly": true,
          "line": 33,
          "raw": "export type { BaseMCPHandlerConfig, TransportAdapter } from './base-mcp-handler.js';",
          "from": "./base-mcp-handler.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 64,
          "raw": "export * from './pagination-utils.js';",
          "all": true,
          "from": "./pagination-utils.js"
        },
        {
          "named": [
            "setupHandlerSystem"
          ],
          "typeOnly": false,
          "line": 123,
          "raw": "export function setupHandlerSystem(context: ToolHandlerContext): ToolRegistry {"
        },
        {
          "named": [
            "HANDLER_SYSTEM_VERSION"
          ],
          "typeOnly": false,
          "line": 148,
          "raw": "export const HANDLER_SYSTEM_VERSION = '1.0.0-phase1';"
        },
        {
          "named": [
            "SYSTEM_INFO"
          ],
          "typeOnly": false,
          "line": 153,
          "raw": "export const SYSTEM_INFO = {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/index.ts"
    },
    "npm-package/shared/core/pagination-utils.ts": {
      "filePath": "npm-package/shared/core/pagination-utils.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/pagination-utils.ts",
      "size": 6209,
      "lines": 249,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { MCPError, ErrorCodes } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PaginationCursor"
          ],
          "typeOnly": false,
          "line": 19,
          "raw": "export interface PaginationCursor {"
        },
        {
          "named": [
            "PaginationParams"
          ],
          "typeOnly": false,
          "line": 31,
          "raw": "export interface PaginationParams {"
        },
        {
          "named": [
            "PaginationResult"
          ],
          "typeOnly": false,
          "line": 41,
          "raw": "export interface PaginationResult<T> {"
        },
        {
          "named": [
            "PAGINATION_DEFAULTS"
          ],
          "typeOnly": false,
          "line": 55,
          "raw": "export const PAGINATION_DEFAULTS = {"
        },
        {
          "named": [
            "encodeCursor"
          ],
          "typeOnly": false,
          "line": 69,
          "raw": "export function encodeCursor(cursor: PaginationCursor): string {"
        },
        {
          "named": [
            "decodeCursor"
          ],
          "typeOnly": false,
          "line": 85,
          "raw": "export function decodeCursor(cursorString: string): PaginationCursor {"
        },
        {
          "named": [
            "validatePaginationParams"
          ],
          "typeOnly": false,
          "line": 120,
          "raw": "export function validatePaginationParams(params: PaginationParams): {"
        },
        {
          "named": [
            "paginateArray"
          ],
          "typeOnly": false,
          "line": 156,
          "raw": "export function paginateArray<T>("
        },
        {
          "named": [
            "createPaginationMetadata"
          ],
          "typeOnly": false,
          "line": 201,
          "raw": "export function createPaginationMetadata("
        },
        {
          "named": [
            "createFirstPageCursor"
          ],
          "typeOnly": false,
          "line": 219,
          "raw": "export function createFirstPageCursor(total: number): string {"
        },
        {
          "named": [
            "isPaginationNeeded"
          ],
          "typeOnly": false,
          "line": 231,
          "raw": "export function isPaginationNeeded("
        },
        {
          "named": [
            "getPaginationSummary"
          ],
          "typeOnly": false,
          "line": 241,
          "raw": "export function getPaginationSummary<T>("
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/pagination-utils.ts"
    },
    "npm-package/shared/core/tool-definitions.ts": {
      "filePath": "npm-package/shared/core/tool-definitions.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/tool-definitions.ts",
      "size": 29882,
      "lines": 734,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "MCPTool"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { MCPTool } from '../types/index.js';"
        },
        {
          "from": "./handlers/base-tool-handler.js",
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { BaseToolHandler } from './handlers/base-tool-handler.js';"
        },
        {
          "from": "./tool-registry.js",
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { ToolRegistry } from './tool-registry.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "generateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 680,
          "raw": "export function generateToolDefinitions(registry: ToolRegistry): MCPTool[] {"
        },
        {
          "named": [
            "validateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 717,
          "raw": "export function validateToolDefinitions(registry: ToolRegistry): {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/tool-definitions.ts"
    },
    "npm-package/shared/core/tool-registry.ts": {
      "filePath": "npm-package/shared/core/tool-registry.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/tool-registry.ts",
      "size": 8796,
      "lines": 285,
      "imports": [
        {
          "from": "./handlers/base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './handlers/base-tool-handler.js';"
        },
        {
          "from": "../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { MCPError, ErrorCodes } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ToolRegistryStats"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "export interface ToolRegistryStats {"
        },
        {
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 36,
          "raw": "export class ToolRegistry {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/tool-registry.ts"
    },
    "npm-package/shared/core/transport-adapters.ts": {
      "filePath": "npm-package/shared/core/transport-adapters.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/core/transport-adapters.ts",
      "size": 5246,
      "lines": 164,
      "imports": [
        {
          "from": "./base-mcp-handler.js",
          "named": [
            "TransportAdapter"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { TransportAdapter } from './base-mcp-handler.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "CloudflareWorkerTransportAdapter"
          ],
          "typeOnly": false,
          "line": 23,
          "raw": "export class CloudflareWorkerTransportAdapter implements TransportAdapter {"
        },
        {
          "named": [
            "StdioTransportAdapter"
          ],
          "typeOnly": false,
          "line": 48,
          "raw": "export class StdioTransportAdapter implements TransportAdapter {"
        },
        {
          "named": [
            "ProxyTransportAdapter"
          ],
          "typeOnly": false,
          "line": 74,
          "raw": "export class ProxyTransportAdapter implements TransportAdapter {"
        },
        {
          "named": [
            "LocalDevTransportAdapter"
          ],
          "typeOnly": false,
          "line": 132,
          "raw": "export class LocalDevTransportAdapter implements TransportAdapter {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/core/transport-adapters.ts"
    },
    "npm-package/shared/index.ts": {
      "filePath": "npm-package/shared/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/index.ts",
      "size": 2044,
      "lines": 92,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 17,
          "raw": "export * from './types/index.js';",
          "all": true,
          "from": "./types/index.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 18,
          "raw": "export * from './validation/index.js';",
          "all": true,
          "from": "./validation/index.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 19,
          "raw": "export * from './resources/index.js';",
          "all": true,
          "from": "./resources/index.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 20,
          "raw": "export * from './services/index.js';",
          "all": true,
          "from": "./services/index.js"
        },
        {
          "named": [
            "ValidationResult"
          ],
          "typeOnly": true,
          "line": 62,
          "raw": "export type { ValidationResult } from './validation/index.js';",
          "from": "./validation/index.js"
        },
        {
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 92,
          "raw": "export { OpenAIService } from './services/index.js';",
          "from": "./services/index.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/index.ts"
    },
    "npm-package/shared/prompts/index.ts": {
      "filePath": "npm-package/shared/prompts/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/prompts/index.ts",
      "size": 1052,
      "lines": 42,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 9,
          "raw": "export * from './prompt-templates.js';",
          "all": true,
          "from": "./prompt-templates.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 12,
          "raw": "export * from './prompt-registry.js';",
          "all": true,
          "from": "./prompt-registry.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/prompts/index.ts"
    },
    "npm-package/shared/prompts/prompt-registry.ts": {
      "filePath": "npm-package/shared/prompts/prompt-registry.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/prompts/prompt-registry.ts",
      "size": 7137,
      "lines": 296,
      "imports": [
        {
          "from": "./prompt-templates.js",
          "named": [
            "getPromptTemplates"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { getPromptTemplates } from './prompt-templates.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PromptRegistry"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "export class PromptRegistry implements IPromptRegistry {"
        },
        {
          "named": [
            "promptRegistry"
          ],
          "typeOnly": false,
          "line": 243,
          "raw": "export const promptRegistry = new PromptRegistry();"
        },
        {
          "named": [
            "getAvailablePrompts"
          ],
          "typeOnly": false,
          "line": 252,
          "raw": "export function getAvailablePrompts(): Prompt[] {"
        },
        {
          "named": [
            "getPrompt"
          ],
          "typeOnly": false,
          "line": 259,
          "raw": "export function getPrompt(name: string): Prompt | null {"
        },
        {
          "named": [
            "generatePromptMessages"
          ],
          "typeOnly": false,
          "line": 266,
          "raw": "export function generatePromptMessages(name: string, args?: Record<string, string>): PromptMessage[] {"
        },
        {
          "named": [
            "hasPrompt"
          ],
          "typeOnly": false,
          "line": 273,
          "raw": "export function hasPrompt(name: string): boolean {"
        },
        {
          "named": [
            "searchPrompts"
          ],
          "typeOnly": false,
          "line": 280,
          "raw": "export function searchPrompts(query: string): Prompt[] {"
        },
        {
          "named": [
            "getPromptsByCategory"
          ],
          "typeOnly": false,
          "line": 287,
          "raw": "export function getPromptsByCategory(category: string): Prompt[] {"
        },
        {
          "named": [
            "getPromptRegistryStats"
          ],
          "typeOnly": false,
          "line": 294,
          "raw": "export function getPromptRegistryStats() {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/prompts/prompt-registry.ts"
    },
    "npm-package/shared/prompts/prompt-templates.ts": {
      "filePath": "npm-package/shared/prompts/prompt-templates.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/prompts/prompt-templates.ts",
      "size": 13877,
      "lines": 354,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "Prompt",
            "PromptTemplate",
            "PromptMessage"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { Prompt, PromptTemplate, PromptMessage } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "getPromptTemplates"
          ],
          "typeOnly": false,
          "line": 312,
          "raw": "export function getPromptTemplates(): PromptTemplate[] {"
        },
        {
          "named": [
            "getPromptTemplate"
          ],
          "typeOnly": false,
          "line": 322,
          "raw": "export function getPromptTemplate(name: string): PromptTemplate | undefined {"
        },
        {
          "named": [
            "getPromptTemplatesByCategory"
          ],
          "typeOnly": false,
          "line": 333,
          "raw": "export function getPromptTemplatesByCategory(category: string): PromptTemplate[] {"
        },
        {
          "named": [
            "CreateCodingAssistant"
          ],
          "typeOnly": false,
          "line": 344,
          "raw": "export const CreateCodingAssistant = PROMPT_TEMPLATES['create-coding-assistant'];"
        },
        {
          "named": [
            "CreateDataAnalyst"
          ],
          "typeOnly": false,
          "line": 345,
          "raw": "export const CreateDataAnalyst = PROMPT_TEMPLATES['create-data-analyst'];"
        },
        {
          "named": [
            "CreateWritingAssistant"
          ],
          "typeOnly": false,
          "line": 346,
          "raw": "export const CreateWritingAssistant = PROMPT_TEMPLATES['create-writing-assistant'];"
        },
        {
          "named": [
            "CreateConversationThread"
          ],
          "typeOnly": false,
          "line": 347,
          "raw": "export const CreateConversationThread = PROMPT_TEMPLATES['create-conversation-thread'];"
        },
        {
          "named": [
            "OrganizeThreadMessages"
          ],
          "typeOnly": false,
          "line": 348,
          "raw": "export const OrganizeThreadMessages = PROMPT_TEMPLATES['organize-thread-messages'];"
        },
        {
          "named": [
            "ExplainCode"
          ],
          "typeOnly": false,
          "line": 349,
          "raw": "export const ExplainCode = PROMPT_TEMPLATES['explain-code'];"
        },
        {
          "named": [
            "ReviewCode"
          ],
          "typeOnly": false,
          "line": 350,
          "raw": "export const ReviewCode = PROMPT_TEMPLATES['review-code'];"
        },
        {
          "named": [
            "ConfigureAssistantRun"
          ],
          "typeOnly": false,
          "line": 351,
          "raw": "export const ConfigureAssistantRun = PROMPT_TEMPLATES['configure-assistant-run'];"
        },
        {
          "named": [
            "DebugRunIssues"
          ],
          "typeOnly": false,
          "line": 352,
          "raw": "export const DebugRunIssues = PROMPT_TEMPLATES['debug-run-issues'];"
        },
        {
          "named": [
            "AnalyzeDataset"
          ],
          "typeOnly": false,
          "line": 353,
          "raw": "export const AnalyzeDataset = PROMPT_TEMPLATES['analyze-dataset'];"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/prompts/prompt-templates.ts"
    },
    "npm-package/shared/resources/index.ts": {
      "filePath": "npm-package/shared/resources/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/resources/index.ts",
      "size": 763,
      "lines": 30,
      "imports": [],
      "exports": [
        {
          "named": [
            "getResources"
          ],
          "typeOnly": false,
          "line": 30,
          "raw": "export const getResources = getAllResources;"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/resources/index.ts"
    },
    "npm-package/shared/resources/resources.ts": {
      "filePath": "npm-package/shared/resources/resources.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/resources/resources.ts",
      "size": 14798,
      "lines": 180,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "MCPResource"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { MCPResource } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "getResources"
          ],
          "typeOnly": false,
          "line": 130,
          "raw": "export function getResources(): MCPResource[] {"
        },
        {
          "named": [
            "getResource"
          ],
          "typeOnly": false,
          "line": 140,
          "raw": "export function getResource(uri: string): MCPResource | undefined {"
        },
        {
          "named": [
            "getResourceContent"
          ],
          "typeOnly": false,
          "line": 150,
          "raw": "export function getResourceContent(uri: string): any {"
        },
        {
          "named": [
            "getResourcesByCategory"
          ],
          "typeOnly": false,
          "line": 160,
          "raw": "export function getResourcesByCategory(category: string): MCPResource[] {"
        },
        {
          "named": [
            "RESOURCE_URIS"
          ],
          "typeOnly": false,
          "line": 167,
          "raw": "export const RESOURCE_URIS = {"
        },
        {
          "named": [
            "mcpResources"
          ],
          "typeOnly": false,
          "line": 178,
          "raw": "export const mcpResources = getResources();"
        },
        {
          "named": [
            "resourceContent"
          ],
          "typeOnly": false,
          "line": 179,
          "raw": "export const resourceContent = RESOURCE_CONTENT;"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/resources/resources.ts"
    },
    "npm-package/shared/services/index.ts": {
      "filePath": "npm-package/shared/services/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/services/index.ts",
      "size": 391,
      "lines": 12,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 9,
          "raw": "export * from './openai-service.js';",
          "all": true,
          "from": "./openai-service.js"
        },
        {
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "export { OpenAIService } from './openai-service.js';",
          "from": "./openai-service.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/services/index.ts"
    },
    "npm-package/shared/services/openai-service.ts": {
      "filePath": "npm-package/shared/services/openai-service.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/services/openai-service.ts",
      "size": 8803,
      "lines": 257,
      "imports": [],
      "exports": [
        {
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 40,
          "raw": "export class OpenAIService {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/services/openai-service.ts"
    },
    "npm-package/shared/test-foundation.ts": {
      "filePath": "npm-package/shared/test-foundation.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/test-foundation.ts",
      "size": 4087,
      "lines": 140,
      "imports": [
        {
          "from": "./core/index.js",
          "named": [
            "setupHandlerSystem",
            "SYSTEM_INFO",
            "validateHandlerCompleteness"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { setupHandlerSystem, SYSTEM_INFO, validateHandlerCompleteness } from './core/index.js';"
        },
        {
          "from": "./services/index.js",
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { OpenAIService } from './services/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "testFoundation"
          ],
          "typeOnly": false,
          "line": 140,
          "raw": "export { testFoundation };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/test-foundation.ts"
    },
    "npm-package/shared/test-imports.ts": {
      "filePath": "npm-package/shared/test-imports.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/test-imports.ts",
      "size": 2066,
      "lines": 69,
      "imports": [
        {
          "from": "./validation/index.js",
          "named": [
            "ValidationResult"
          ],
          "typeOnly": true,
          "line": 22,
          "raw": "import type { ValidationResult } from './validation/index.js';"
        },
        {
          "from": "./validation/index.js",
          "named": [
            "SUPPORTED_MODELS",
            "ID_PATTERNS"
          ],
          "typeOnly": false,
          "line": 23,
          "raw": "import { SUPPORTED_MODELS, ID_PATTERNS } from './validation/index.js';"
        },
        {
          "from": "./resources/index.js",
          "named": [
            "getResourceContent"
          ],
          "typeOnly": false,
          "line": 24,
          "raw": "import { getResourceContent } from './resources/index.js';"
        },
        {
          "from": "./types/index.js",
          "named": [
            "Env"
          ],
          "typeOnly": true,
          "line": 25,
          "raw": "import type { Env } from './types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "testSharedLibraries"
          ],
          "typeOnly": false,
          "line": 57,
          "raw": "export { testSharedLibraries };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/test-imports.ts"
    },
    "npm-package/shared/types/cloudflare-types.ts": {
      "filePath": "npm-package/shared/types/cloudflare-types.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/types/cloudflare-types.ts",
      "size": 274,
      "lines": 11,
      "imports": [],
      "exports": [
        {
          "named": [
            "Env"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "export interface Env {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/types/cloudflare-types.ts"
    },
    "npm-package/shared/types/core-types.ts": {
      "filePath": "npm-package/shared/types/core-types.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/types/core-types.ts",
      "size": 19065,
      "lines": 804,
      "imports": [],
      "exports": [
        {
          "named": [
            "JsonRpcRequest"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "export interface JsonRpcRequest {"
        },
        {
          "named": [
            "JsonRpcResponse"
          ],
          "typeOnly": false,
          "line": 18,
          "raw": "export interface JsonRpcResponse {"
        },
        {
          "named": [
            "JsonRpcError"
          ],
          "typeOnly": false,
          "line": 25,
          "raw": "export interface JsonRpcError {"
        },
        {
          "named": [
            "MCPRequest"
          ],
          "typeOnly": false,
          "line": 32,
          "raw": "export interface MCPRequest extends JsonRpcRequest {}"
        },
        {
          "named": [
            "MCPResponse"
          ],
          "typeOnly": false,
          "line": 33,
          "raw": "export interface MCPResponse extends JsonRpcResponse {}"
        },
        {
          "named": [
            "MCPInitializeRequest"
          ],
          "typeOnly": false,
          "line": 36,
          "raw": "export interface MCPInitializeRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPInitializeResponse"
          ],
          "typeOnly": false,
          "line": 50,
          "raw": "export interface MCPInitializeResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "MCPToolsListRequest"
          ],
          "typeOnly": false,
          "line": 74,
          "raw": "export interface MCPToolsListRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPTool"
          ],
          "typeOnly": false,
          "line": 81,
          "raw": "export interface MCPTool {"
        },
        {
          "named": [
            "Tool"
          ],
          "typeOnly": false,
          "line": 95,
          "raw": "export interface Tool extends MCPTool {} // Legacy compatibility"
        },
        {
          "named": [
            "MCPToolsListResponse"
          ],
          "typeOnly": false,
          "line": 97,
          "raw": "export interface MCPToolsListResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "MCPToolsCallRequest"
          ],
          "typeOnly": false,
          "line": 104,
          "raw": "export interface MCPToolsCallRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPToolsCallResponse"
          ],
          "typeOnly": false,
          "line": 112,
          "raw": "export interface MCPToolsCallResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "MCPResource"
          ],
          "typeOnly": false,
          "line": 123,
          "raw": "export interface MCPResource {"
        },
        {
          "named": [
            "MCPResourcesListRequest"
          ],
          "typeOnly": false,
          "line": 143,
          "raw": "export interface MCPResourcesListRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPResourcesListResponse"
          ],
          "typeOnly": false,
          "line": 150,
          "raw": "export interface MCPResourcesListResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "MCPResourcesReadRequest"
          ],
          "typeOnly": false,
          "line": 157,
          "raw": "export interface MCPResourcesReadRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPResourcesReadResponse"
          ],
          "typeOnly": false,
          "line": 164,
          "raw": "export interface MCPResourcesReadResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "Resource"
          ],
          "typeOnly": false,
          "line": 177,
          "raw": "export interface Resource extends MCPResource {}"
        },
        {
          "named": [
            "Assistant"
          ],
          "typeOnly": false,
          "line": 180,
          "raw": "export interface Assistant {"
        },
        {
          "named": [
            "CreateAssistantRequest"
          ],
          "typeOnly": false,
          "line": 210,
          "raw": "export interface CreateAssistantRequest {"
        },
        {
          "named": [
            "UpdateAssistantRequest"
          ],
          "typeOnly": false,
          "line": 237,
          "raw": "export interface UpdateAssistantRequest {"
        },
        {
          "named": [
            "ListAssistantsRequest"
          ],
          "typeOnly": false,
          "line": 264,
          "raw": "export interface ListAssistantsRequest {"
        },
        {
          "named": [
            "ListAssistantsResponse"
          ],
          "typeOnly": false,
          "line": 271,
          "raw": "export interface ListAssistantsResponse {"
        },
        {
          "named": [
            "Thread"
          ],
          "typeOnly": false,
          "line": 280,
          "raw": "export interface Thread {"
        },
        {
          "named": [
            "CreateThreadRequest"
          ],
          "typeOnly": false,
          "line": 295,
          "raw": "export interface CreateThreadRequest {"
        },
        {
          "named": [
            "UpdateThreadRequest"
          ],
          "typeOnly": false,
          "line": 321,
          "raw": "export interface UpdateThreadRequest {"
        },
        {
          "named": [
            "Message"
          ],
          "typeOnly": false,
          "line": 334,
          "raw": "export interface Message {"
        },
        {
          "named": [
            "CreateMessageRequest"
          ],
          "typeOnly": false,
          "line": 376,
          "raw": "export interface CreateMessageRequest {"
        },
        {
          "named": [
            "UpdateMessageRequest"
          ],
          "typeOnly": false,
          "line": 391,
          "raw": "export interface UpdateMessageRequest {"
        },
        {
          "named": [
            "ListMessagesRequest"
          ],
          "typeOnly": false,
          "line": 395,
          "raw": "export interface ListMessagesRequest {"
        },
        {
          "named": [
            "ListMessagesResponse"
          ],
          "typeOnly": false,
          "line": 403,
          "raw": "export interface ListMessagesResponse {"
        },
        {
          "named": [
            "Run"
          ],
          "typeOnly": false,
          "line": 412,
          "raw": "export interface Run {"
        },
        {
          "named": [
            "CreateRunRequest"
          ],
          "typeOnly": false,
          "line": 473,
          "raw": "export interface CreateRunRequest {"
        },
        {
          "named": [
            "UpdateRunRequest"
          ],
          "typeOnly": false,
          "line": 514,
          "raw": "export interface UpdateRunRequest {"
        },
        {
          "named": [
            "ListRunsRequest"
          ],
          "typeOnly": false,
          "line": 518,
          "raw": "export interface ListRunsRequest {"
        },
        {
          "named": [
            "ListRunsResponse"
          ],
          "typeOnly": false,
          "line": 525,
          "raw": "export interface ListRunsResponse {"
        },
        {
          "named": [
            "SubmitToolOutputsRequest"
          ],
          "typeOnly": false,
          "line": 533,
          "raw": "export interface SubmitToolOutputsRequest {"
        },
        {
          "named": [
            "RunStep"
          ],
          "typeOnly": false,
          "line": 542,
          "raw": "export interface RunStep {"
        },
        {
          "named": [
            "ListRunStepsRequest"
          ],
          "typeOnly": false,
          "line": 607,
          "raw": "export interface ListRunStepsRequest {"
        },
        {
          "named": [
            "ListRunStepsResponse"
          ],
          "typeOnly": false,
          "line": 615,
          "raw": "export interface ListRunStepsResponse {"
        },
        {
          "named": [
            "MCPError"
          ],
          "typeOnly": false,
          "line": 624,
          "raw": "export class MCPError extends Error {"
        },
        {
          "named": [
            "createEnhancedError"
          ],
          "typeOnly": false,
          "line": 636,
          "raw": "export function createEnhancedError("
        },
        {
          "named": [
            "createStandardErrorResponse"
          ],
          "typeOnly": false,
          "line": 660,
          "raw": "export function createStandardErrorResponse("
        },
        {
          "named": [
            "formatOpenAIError"
          ],
          "typeOnly": false,
          "line": 678,
          "raw": "export function formatOpenAIError("
        },
        {
          "named": [
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 724,
          "raw": "export const ErrorCodes = {"
        },
        {
          "named": [
            "LegacyErrorCodes"
          ],
          "typeOnly": false,
          "line": 741,
          "raw": "export const LegacyErrorCodes = {"
        },
        {
          "named": [
            "ErrorCodeMapping"
          ],
          "typeOnly": false,
          "line": 749,
          "raw": "export const ErrorCodeMapping = {"
        },
        {
          "named": [
            "MCPCompletionRequest"
          ],
          "typeOnly": false,
          "line": 773,
          "raw": "export interface MCPCompletionRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPCompletionItem"
          ],
          "typeOnly": false,
          "line": 787,
          "raw": "export interface MCPCompletionItem {"
        },
        {
          "named": [
            "MCPCompletionResponse"
          ],
          "typeOnly": false,
          "line": 793,
          "raw": "export interface MCPCompletionResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "ToolResponse"
          ],
          "typeOnly": false,
          "line": 800,
          "raw": "export interface ToolResponse {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/types/core-types.ts"
    },
    "npm-package/shared/types/index.ts": {
      "filePath": "npm-package/shared/types/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/types/index.ts",
      "size": 483,
      "lines": 15,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 9,
          "raw": "export * from './core-types.js';",
          "all": true,
          "from": "./core-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 12,
          "raw": "export * from './cloudflare-types.js';",
          "all": true,
          "from": "./cloudflare-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 15,
          "raw": "export * from './prompt-types.js';",
          "all": true,
          "from": "./prompt-types.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/types/index.ts"
    },
    "npm-package/shared/types/prompt-types.ts": {
      "filePath": "npm-package/shared/types/prompt-types.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/types/prompt-types.ts",
      "size": 4490,
      "lines": 209,
      "imports": [
        {
          "from": "./core-types.js",
          "named": [
            "JsonRpcRequest",
            "JsonRpcResponse"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { JsonRpcRequest, JsonRpcResponse } from './core-types.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PromptArgument"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "export interface PromptArgument {"
        },
        {
          "named": [
            "Prompt"
          ],
          "typeOnly": false,
          "line": 27,
          "raw": "export interface Prompt {"
        },
        {
          "named": [
            "PromptTextContent"
          ],
          "typeOnly": false,
          "line": 41,
          "raw": "export interface PromptTextContent {"
        },
        {
          "named": [
            "PromptImageContent"
          ],
          "typeOnly": false,
          "line": 46,
          "raw": "export interface PromptImageContent {"
        },
        {
          "named": [
            "PromptAudioContent"
          ],
          "typeOnly": false,
          "line": 52,
          "raw": "export interface PromptAudioContent {"
        },
        {
          "named": [
            "PromptResourceContent"
          ],
          "typeOnly": false,
          "line": 58,
          "raw": "export interface PromptResourceContent {"
        },
        {
          "named": [
            "PromptMessage"
          ],
          "typeOnly": false,
          "line": 79,
          "raw": "export interface PromptMessage {"
        },
        {
          "named": [
            "MCPPromptsListRequest"
          ],
          "typeOnly": false,
          "line": 91,
          "raw": "export interface MCPPromptsListRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPPromptsListResponse"
          ],
          "typeOnly": false,
          "line": 101,
          "raw": "export interface MCPPromptsListResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "MCPPromptsGetRequest"
          ],
          "typeOnly": false,
          "line": 111,
          "raw": "export interface MCPPromptsGetRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPPromptsGetResponse"
          ],
          "typeOnly": false,
          "line": 122,
          "raw": "export interface MCPPromptsGetResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "AssistantPromptTemplate"
          ],
          "typeOnly": false,
          "line": 134,
          "raw": "export interface AssistantPromptTemplate {"
        },
        {
          "named": [
            "ThreadPromptTemplate"
          ],
          "typeOnly": false,
          "line": 145,
          "raw": "export interface ThreadPromptTemplate {"
        },
        {
          "named": [
            "RunPromptTemplate"
          ],
          "typeOnly": false,
          "line": 156,
          "raw": "export interface RunPromptTemplate {"
        },
        {
          "named": [
            "PromptTemplate"
          ],
          "typeOnly": false,
          "line": 167,
          "raw": "export interface PromptTemplate {"
        },
        {
          "named": [
            "PromptRegistry"
          ],
          "typeOnly": false,
          "line": 180,
          "raw": "export interface PromptRegistry {"
        },
        {
          "named": [
            "PromptValidationResult"
          ],
          "typeOnly": false,
          "line": 196,
          "raw": "export interface PromptValidationResult {"
        },
        {
          "named": [
            "PromptExecutionContext"
          ],
          "typeOnly": false,
          "line": 205,
          "raw": "export interface PromptExecutionContext {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/types/prompt-types.ts"
    },
    "npm-package/shared/validation/index.ts": {
      "filePath": "npm-package/shared/validation/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/validation/index.ts",
      "size": 840,
      "lines": 30,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 9,
          "raw": "export * from './validation.js';",
          "all": true,
          "from": "./validation.js"
        },
        {
          "named": [
            "ValidationResult"
          ],
          "typeOnly": true,
          "line": 30,
          "raw": "export type { ValidationResult } from './validation.js';",
          "from": "./validation.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/validation/index.ts"
    },
    "npm-package/shared/validation/validation.ts": {
      "filePath": "npm-package/shared/validation/validation.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/shared/validation/validation.ts",
      "size": 17837,
      "lines": 567,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { MCPError, ErrorCodes } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "SUPPORTED_MODELS"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "export const SUPPORTED_MODELS = ["
        },
        {
          "named": [
            "ID_PATTERNS"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export const ID_PATTERNS = {"
        },
        {
          "named": [
            "ValidationResult"
          ],
          "typeOnly": false,
          "line": 39,
          "raw": "export interface ValidationResult {"
        },
        {
          "named": [
            "validateOpenAIId"
          ],
          "typeOnly": false,
          "line": 47,
          "raw": "export function validateOpenAIId(id: string, type: keyof typeof ID_PATTERNS, paramName: string): ValidationResult {"
        },
        {
          "named": [
            "validateModel"
          ],
          "typeOnly": false,
          "line": 85,
          "raw": "export function validateModel(model: string, paramName: string = 'model'): ValidationResult {"
        },
        {
          "named": [
            "validateNumericRange"
          ],
          "typeOnly": false,
          "line": 122,
          "raw": "export function validateNumericRange("
        },
        {
          "named": [
            "validateRequiredString"
          ],
          "typeOnly": false,
          "line": 168,
          "raw": "export function validateRequiredString(value: any, paramName: string, examples?: string[]): ValidationResult {"
        },
        {
          "named": [
            "validateEnum"
          ],
          "typeOnly": false,
          "line": 208,
          "raw": "export function validateEnum<T extends string>("
        },
        {
          "named": [
            "validateArray"
          ],
          "typeOnly": false,
          "line": 243,
          "raw": "export function validateArray(value: any, paramName: string, required: boolean = false): ValidationResult {"
        },
        {
          "named": [
            "validateMetadata"
          ],
          "typeOnly": false,
          "line": 273,
          "raw": "export function validateMetadata(metadata: any, paramName: string = 'metadata'): ValidationResult {"
        },
        {
          "named": [
            "validateTools"
          ],
          "typeOnly": false,
          "line": 306,
          "raw": "export function validateTools(tools: any, paramName: string = 'tools'): ValidationResult {"
        },
        {
          "named": [
            "validateToolResources"
          ],
          "typeOnly": false,
          "line": 371,
          "raw": "export function validateToolResources(toolResources: any, tools: any[], paramName: string = 'tool_resources'): ValidationResult {"
        },
        {
          "named": [
            "validateMessageRole"
          ],
          "typeOnly": false,
          "line": 414,
          "raw": "export function validateMessageRole(role: any, paramName: string = 'role'): ValidationResult {"
        },
        {
          "named": [
            "validatePaginationParams"
          ],
          "typeOnly": false,
          "line": 421,
          "raw": "export function validatePaginationParams(params: {"
        },
        {
          "named": [
            "validateCreateAssistantParams"
          ],
          "typeOnly": false,
          "line": 485,
          "raw": "export function validateCreateAssistantParams(params: any): ValidationResult {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "shared/validation/validation.ts"
    },
    "npm-package/src/index.ts": {
      "filePath": "npm-package/src/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/src/index.ts",
      "size": 3798,
      "lines": 147,
      "imports": [
        {
          "from": "@modelcontextprotocol/sdk/server/index.js",
          "named": [
            "Server"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "import { Server } from '@modelcontextprotocol/sdk/server/index.js';"
        },
        {
          "from": "@modelcontextprotocol/sdk/server/stdio.js",
          "named": [
            "StdioServerTransport"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { StdioServerTransport } from '@modelcontextprotocol/sdk/server/stdio.js';"
        },
        {
          "from": "./mcp-handler.js",
          "named": [
            "MCPHandler"
          ],
          "typeOnly": false,
          "line": 18,
          "raw": "import { MCPHandler } from './mcp-handler.js';"
        }
      ],
      "exports": [],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "@modelcontextprotocol/sdk/server/index.js",
        "@modelcontextprotocol/sdk/server/stdio.js"
      ],
      "isDuplicated": false
    },
    "npm-package/src/mcp-handler-tools.ts": {
      "filePath": "npm-package/src/mcp-handler-tools.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/src/mcp-handler-tools.ts",
      "size": 27053,
      "lines": 590,
      "imports": [
        {
          "from": "@shared/types",
          "named": [
            "MCPTool"
          ],
          "typeOnly": false,
          "line": 2,
          "raw": "import { MCPTool } from '@shared/types';"
        }
      ],
      "exports": [
        {
          "named": [
            "enhancedTools"
          ],
          "typeOnly": false,
          "line": 4,
          "raw": "export const enhancedTools: MCPTool[] = ["
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "@shared/types"
      ],
      "isDuplicated": false
    },
    "npm-package/src/mcp-handler.ts": {
      "filePath": "npm-package/src/mcp-handler.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/src/mcp-handler.ts",
      "size": 3578,
      "lines": 126,
      "imports": [],
      "exports": [
        {
          "named": [
            "MCPHandler"
          ],
          "typeOnly": false,
          "line": 34,
          "raw": "export class MCPHandler {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "npm-package/test/test-stdio.js": {
      "filePath": "npm-package/test/test-stdio.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/npm-package/test/test-stdio.js",
      "size": 8368,
      "lines": 285,
      "imports": [],
      "exports": [],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "scripts/duplication-analysis.js": {
      "filePath": "scripts/duplication-analysis.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/scripts/duplication-analysis.js",
      "size": 12514,
      "lines": 443,
      "imports": [],
      "exports": [],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "shared/analysis/dependency-map.ts": {
      "filePath": "shared/analysis/dependency-map.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/analysis/dependency-map.ts",
      "size": 26628,
      "lines": 849,
      "imports": [
        {
          "from": "fs",
          "named": [],
          "typeOnly": false,
          "line": 15,
          "raw": "import * as fs from 'fs';",
          "namespace": "fs"
        },
        {
          "from": "path",
          "named": [],
          "typeOnly": false,
          "line": 16,
          "raw": "import * as path from 'path';",
          "namespace": "path"
        },
        {
          "from": "url",
          "named": [
            "fileURLToPath"
          ],
          "typeOnly": false,
          "line": 17,
          "raw": "import { fileURLToPath } from 'url';"
        }
      ],
      "exports": [
        {
          "named": [
            "ImportStatement"
          ],
          "typeOnly": false,
          "line": 26,
          "raw": "export interface ImportStatement {"
        },
        {
          "named": [
            "ExportStatement"
          ],
          "typeOnly": false,
          "line": 46,
          "raw": "export interface ExportStatement {"
        },
        {
          "named": [
            "FileDependencyInfo"
          ],
          "typeOnly": false,
          "line": 66,
          "raw": "export interface FileDependencyInfo {"
        },
        {
          "named": [
            "CircularDependency"
          ],
          "typeOnly": false,
          "line": 94,
          "raw": "export interface CircularDependency {"
        },
        {
          "named": [
            "ExternalDependencyUsage"
          ],
          "typeOnly": false,
          "line": 108,
          "raw": "export interface ExternalDependencyUsage {"
        },
        {
          "named": [
            "DependencyAnalysisResult"
          ],
          "typeOnly": false,
          "line": 126,
          "raw": "export interface DependencyAnalysisResult {"
        },
        {
          "named": [
            "DependencyVisualizationData"
          ],
          "typeOnly": false,
          "line": 144,
          "raw": "export interface DependencyVisualizationData {"
        },
        {
          "named": [
            "DependencyAnalysisSummary"
          ],
          "typeOnly": false,
          "line": 172,
          "raw": "export interface DependencyAnalysisSummary {"
        },
        {
          "named": [
            "DependencyMapper"
          ],
          "typeOnly": false,
          "line": 196,
          "raw": "export class DependencyMapper {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "fs",
        "path",
        "url"
      ],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/analysis/dependency-map.ts"
    },
    "shared/config/audit-trail.ts": {
      "filePath": "shared/config/audit-trail.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/audit-trail.ts",
      "size": 21855,
      "lines": 858,
      "imports": [],
      "exports": [
        {
          "named": [
            "AuditLogEntry"
          ],
          "typeOnly": false,
          "line": 18,
          "raw": "export interface AuditLogEntry {"
        },
        {
          "named": [
            "AuditUser"
          ],
          "typeOnly": false,
          "line": 40,
          "raw": "export interface AuditUser {"
        },
        {
          "named": [
            "ConfigurationDiff"
          ],
          "typeOnly": false,
          "line": 51,
          "raw": "export interface ConfigurationDiff {"
        },
        {
          "named": [
            "AuditQueryOptions"
          ],
          "typeOnly": false,
          "line": 62,
          "raw": "export interface AuditQueryOptions {"
        },
        {
          "named": [
            "AuditStatistics"
          ],
          "typeOnly": false,
          "line": 78,
          "raw": "export interface AuditStatistics {"
        },
        {
          "named": [
            "AuditExportOptions"
          ],
          "typeOnly": false,
          "line": 94,
          "raw": "export interface AuditExportOptions {"
        },
        {
          "named": [
            "AuditRetentionPolicy"
          ],
          "typeOnly": false,
          "line": 108,
          "raw": "export interface AuditRetentionPolicy {"
        },
        {
          "named": [
            "ConfigurationAuditTrailManager"
          ],
          "typeOnly": false,
          "line": 421,
          "raw": "export class ConfigurationAuditTrailManager {"
        },
        {
          "named": [
            "getGlobalAuditTrailManager"
          ],
          "typeOnly": false,
          "line": 812,
          "raw": "export function getGlobalAuditTrailManager("
        },
        {
          "named": [
            "setGlobalAuditTrailManager"
          ],
          "typeOnly": false,
          "line": 831,
          "raw": "export function setGlobalAuditTrailManager(manager: ConfigurationAuditTrailManager): void {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/audit-trail.ts"
    },
    "shared/config/cache-manager.ts": {
      "filePath": "shared/config/cache-manager.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/cache-manager.ts",
      "size": 19014,
      "lines": 763,
      "imports": [],
      "exports": [
        {
          "named": [
            "CacheEntry"
          ],
          "typeOnly": false,
          "line": 17,
          "raw": "export interface CacheEntry<T = any> {"
        },
        {
          "named": [
            "CacheStatistics"
          ],
          "typeOnly": false,
          "line": 31,
          "raw": "export interface CacheStatistics {"
        },
        {
          "named": [
            "CacheOptions"
          ],
          "typeOnly": false,
          "line": 55,
          "raw": "export interface CacheOptions {"
        },
        {
          "named": [
            "CacheWarmingConfig"
          ],
          "typeOnly": false,
          "line": 71,
          "raw": "export interface CacheWarmingConfig {"
        },
        {
          "named": [
            "ConfigurationCacheManager"
          ],
          "typeOnly": false,
          "line": 273,
          "raw": "export class ConfigurationCacheManager {"
        },
        {
          "named": [
            "getGlobalCacheManager"
          ],
          "typeOnly": false,
          "line": 731,
          "raw": "export function getGlobalCacheManager(options?: Partial<CacheOptions>): ConfigurationCacheManager {"
        },
        {
          "named": [
            "setGlobalCacheManager"
          ],
          "typeOnly": false,
          "line": 741,
          "raw": "export function setGlobalCacheManager(manager: ConfigurationCacheManager): void {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/cache-manager.ts"
    },
    "shared/config/defaults.ts": {
      "filePath": "shared/config/defaults.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/defaults.ts",
      "size": 5888,
      "lines": 275,
      "imports": [
        {
          "from": "../types/config-types.js",
          "named": [
            "MCPServerConfig"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { MCPServerConfig } from '../types/config-types.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "defaultConfig"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "export const defaultConfig: MCPServerConfig = {"
        },
        {
          "named": [
            "developmentOverrides"
          ],
          "typeOnly": false,
          "line": 160,
          "raw": "export const developmentOverrides = {"
        },
        {
          "named": [
            "stagingOverrides"
          ],
          "typeOnly": false,
          "line": 177,
          "raw": "export const stagingOverrides = {"
        },
        {
          "named": [
            "productionOverrides"
          ],
          "typeOnly": false,
          "line": 194,
          "raw": "export const productionOverrides = {"
        },
        {
          "named": [
            "testOverrides"
          ],
          "typeOnly": false,
          "line": 211,
          "raw": "export const testOverrides = {"
        },
        {
          "named": [
            "getEnvironmentOverrides"
          ],
          "typeOnly": false,
          "line": 235,
          "raw": "export function getEnvironmentOverrides(environment: string) {"
        },
        {
          "named": [
            "deepMerge"
          ],
          "typeOnly": false,
          "line": 253,
          "raw": "export function deepMerge<T extends Record<string, any>>(target: T, source: Partial<T>): T {"
        },
        {
          "named": [
            "createConfigWithOverrides"
          ],
          "typeOnly": false,
          "line": 272,
          "raw": "export function createConfigWithOverrides(environment: string): MCPServerConfig {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/defaults.ts"
    },
    "shared/config/deployment-health.ts": {
      "filePath": "shared/config/deployment-health.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/deployment-health.ts",
      "size": 17763,
      "lines": 545,
      "imports": [
        {
          "from": "../types/config-types.js",
          "named": [
            "MCPServerConfig",
            "ValidationResult"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { MCPServerConfig, ValidationResult } from '../types/config-types.js';"
        },
        {
          "from": "./environment-manager.js",
          "named": [
            "EnvironmentManager",
            "EnvironmentDetectionResult"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { EnvironmentManager, EnvironmentDetectionResult } from './environment-manager.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "HealthCheckResult"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "export interface HealthCheckResult {"
        },
        {
          "named": [
            "HealthCheck"
          ],
          "typeOnly": false,
          "line": 29,
          "raw": "export interface HealthCheck {"
        },
        {
          "named": [
            "DeploymentHealthChecker"
          ],
          "typeOnly": false,
          "line": 41,
          "raw": "export class DeploymentHealthChecker {"
        },
        {
          "named": [
            "getGlobalHealthChecker"
          ],
          "typeOnly": false,
          "line": 530,
          "raw": "export function getGlobalHealthChecker(): DeploymentHealthChecker {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/deployment-health.ts"
    },
    "shared/config/deployment-pipeline.ts": {
      "filePath": "shared/config/deployment-pipeline.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/deployment-pipeline.ts",
      "size": 21735,
      "lines": 834,
      "imports": [
        {
          "from": "../types/config-types.js",
          "named": [
            "MCPServerConfig",
            "ValidationResult"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { MCPServerConfig, ValidationResult } from '../types/config-types.js';"
        },
        {
          "from": "./environment-manager.js",
          "named": [
            "EnvironmentManager"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { EnvironmentManager } from './environment-manager.js';"
        },
        {
          "from": "./deployment-health.js",
          "named": [
            "DeploymentHealthChecker",
            "HealthCheckResult"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "import { DeploymentHealthChecker, HealthCheckResult } from './deployment-health.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "DeploymentPipelineConfig"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "export interface DeploymentPipelineConfig {"
        },
        {
          "named": [
            "DeploymentStage"
          ],
          "typeOnly": false,
          "line": 26,
          "raw": "export interface DeploymentStage {"
        },
        {
          "named": [
            "DeploymentStep"
          ],
          "typeOnly": false,
          "line": 40,
          "raw": "export interface DeploymentStep {"
        },
        {
          "named": [
            "HealthCheckConfig"
          ],
          "typeOnly": false,
          "line": 53,
          "raw": "export interface HealthCheckConfig {"
        },
        {
          "named": [
            "RollbackConfig"
          ],
          "typeOnly": false,
          "line": 66,
          "raw": "export interface RollbackConfig {"
        },
        {
          "named": [
            "RollbackCondition"
          ],
          "typeOnly": false,
          "line": 77,
          "raw": "export interface RollbackCondition {"
        },
        {
          "named": [
            "NotificationConfig"
          ],
          "typeOnly": false,
          "line": 86,
          "raw": "export interface NotificationConfig {"
        },
        {
          "named": [
            "NotificationChannel"
          ],
          "typeOnly": false,
          "line": 95,
          "raw": "export interface NotificationChannel {"
        },
        {
          "named": [
            "NotificationEvent"
          ],
          "typeOnly": false,
          "line": 103,
          "raw": "export interface NotificationEvent {"
        },
        {
          "named": [
            "ValidationConfig"
          ],
          "typeOnly": false,
          "line": 112,
          "raw": "export interface ValidationConfig {"
        },
        {
          "named": [
            "DeploymentResult"
          ],
          "typeOnly": false,
          "line": 123,
          "raw": "export interface DeploymentResult {"
        },
        {
          "named": [
            "StepResult"
          ],
          "typeOnly": false,
          "line": 140,
          "raw": "export interface StepResult {"
        },
        {
          "named": [
            "RollbackResult"
          ],
          "typeOnly": false,
          "line": 154,
          "raw": "export interface RollbackResult {"
        },
        {
          "named": [
            "DeploymentPipelineManager"
          ],
          "typeOnly": false,
          "line": 165,
          "raw": "export class DeploymentPipelineManager {"
        },
        {
          "named": [
            "defaultPipelineConfig"
          ],
          "typeOnly": false,
          "line": 592,
          "raw": "export const defaultPipelineConfig: DeploymentPipelineConfig = {"
        },
        {
          "named": [
            "createDeploymentPipeline"
          ],
          "typeOnly": false,
          "line": 828,
          "raw": "export function createDeploymentPipeline(config?: Partial<DeploymentPipelineConfig>): DeploymentPipelineManager {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/deployment-pipeline.ts"
    },
    "shared/config/environment-manager.ts": {
      "filePath": "shared/config/environment-manager.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/environment-manager.ts",
      "size": 23567,
      "lines": 723,
      "imports": [
        {
          "from": "../types/config-types.js",
          "named": [
            "MCPServerConfig",
            "ValidationResult"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { MCPServerConfig, ValidationResult } from '../types/config-types.js';"
        },
        {
          "from": "./defaults.js",
          "named": [
            "deepMerge"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { deepMerge } from './defaults.js';"
        },
        {
          "from": "./validator.js",
          "named": [
            "ConfigurationValidator"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "import { ConfigurationValidator } from './validator.js';"
        },
        {
          "from": "./runtime-manager.js",
          "named": [
            "RuntimeConfigurationManager"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { RuntimeConfigurationManager } from './runtime-manager.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "EnvironmentDetectionResult"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "export interface EnvironmentDetectionResult {"
        },
        {
          "named": [
            "EnvironmentValidationResult"
          ],
          "typeOnly": false,
          "line": 27,
          "raw": "export interface EnvironmentValidationResult extends ValidationResult {"
        },
        {
          "named": [
            "EnvironmentManager"
          ],
          "typeOnly": false,
          "line": 37,
          "raw": "export class EnvironmentManager {"
        },
        {
          "named": [
            "getGlobalEnvironmentManager"
          ],
          "typeOnly": false,
          "line": 687,
          "raw": "export function getGlobalEnvironmentManager(): EnvironmentManager {"
        },
        {
          "named": [
            "setGlobalEnvironmentManager"
          ],
          "typeOnly": false,
          "line": 697,
          "raw": "export function setGlobalEnvironmentManager(manager: EnvironmentManager): void {"
        },
        {
          "named": [
            "detectCurrentEnvironment"
          ],
          "typeOnly": false,
          "line": 704,
          "raw": "export function detectCurrentEnvironment(): EnvironmentDetectionResult {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/environment-manager.ts"
    },
    "shared/config/feature-flags.ts": {
      "filePath": "shared/config/feature-flags.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/feature-flags.ts",
      "size": 21148,
      "lines": 834,
      "imports": [],
      "exports": [
        {
          "named": [
            "FeatureFlagsEngine"
          ],
          "typeOnly": false,
          "line": 107,
          "raw": "export class FeatureFlagsEngine {"
        },
        {
          "named": [
            "getGlobalFeatureFlags"
          ],
          "typeOnly": false,
          "line": 822,
          "raw": "export function getGlobalFeatureFlags(): FeatureFlagsEngine {"
        },
        {
          "named": [
            "setGlobalFeatureFlags"
          ],
          "typeOnly": false,
          "line": 832,
          "raw": "export function setGlobalFeatureFlags(engine: FeatureFlagsEngine): void {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/feature-flags.ts"
    },
    "shared/config/health-dashboard.ts": {
      "filePath": "shared/config/health-dashboard.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/health-dashboard.ts",
      "size": 28022,
      "lines": 949,
      "imports": [],
      "exports": [
        {
          "named": [
            "SystemHealthStatus"
          ],
          "typeOnly": false,
          "line": 34,
          "raw": "export interface SystemHealthStatus {"
        },
        {
          "named": [
            "ComponentHealthMap"
          ],
          "typeOnly": false,
          "line": 44,
          "raw": "export interface ComponentHealthMap {"
        },
        {
          "named": [
            "ComponentHealth"
          ],
          "typeOnly": false,
          "line": 56,
          "raw": "export interface ComponentHealth {"
        },
        {
          "named": [
            "SystemMetrics"
          ],
          "typeOnly": false,
          "line": 66,
          "raw": "export interface SystemMetrics {"
        },
        {
          "named": [
            "PerformanceMetrics"
          ],
          "typeOnly": false,
          "line": 75,
          "raw": "export interface PerformanceMetrics {"
        },
        {
          "named": [
            "ConfigurationMetrics"
          ],
          "typeOnly": false,
          "line": 85,
          "raw": "export interface ConfigurationMetrics {"
        },
        {
          "named": [
            "FeatureFlagMetrics"
          ],
          "typeOnly": false,
          "line": 94,
          "raw": "export interface FeatureFlagMetrics {"
        },
        {
          "named": [
            "CacheMetrics"
          ],
          "typeOnly": false,
          "line": 102,
          "raw": "export interface CacheMetrics {"
        },
        {
          "named": [
            "AuditMetrics"
          ],
          "typeOnly": false,
          "line": 111,
          "raw": "export interface AuditMetrics {"
        },
        {
          "named": [
            "SyncMetrics"
          ],
          "typeOnly": false,
          "line": 119,
          "raw": "export interface SyncMetrics {"
        },
        {
          "named": [
            "HealthAlert"
          ],
          "typeOnly": false,
          "line": 127,
          "raw": "export interface HealthAlert {"
        },
        {
          "named": [
            "DashboardConfig"
          ],
          "typeOnly": false,
          "line": 137,
          "raw": "export interface DashboardConfig {"
        },
        {
          "named": [
            "AlertThresholds"
          ],
          "typeOnly": false,
          "line": 145,
          "raw": "export interface AlertThresholds {"
        },
        {
          "named": [
            "VisualizationOptions"
          ],
          "typeOnly": false,
          "line": 153,
          "raw": "export interface VisualizationOptions {"
        },
        {
          "named": [
            "ConfigurationHealthDashboard"
          ],
          "typeOnly": false,
          "line": 163,
          "raw": "export class ConfigurationHealthDashboard {"
        },
        {
          "named": [
            "HealthSubscriber"
          ],
          "typeOnly": false,
          "line": 771,
          "raw": "export interface HealthSubscriber {"
        },
        {
          "named": [
            "HealthReport"
          ],
          "typeOnly": false,
          "line": 775,
          "raw": "export interface HealthReport {"
        },
        {
          "named": [
            "HealthTrends"
          ],
          "typeOnly": false,
          "line": 788,
          "raw": "export interface HealthTrends {"
        },
        {
          "named": [
            "getGlobalHealthDashboard"
          ],
          "typeOnly": false,
          "line": 803,
          "raw": "export function getGlobalHealthDashboard(config?: Partial<DashboardConfig>): ConfigurationHealthDashboard {"
        },
        {
          "named": [
            "setGlobalHealthDashboard"
          ],
          "typeOnly": false,
          "line": 813,
          "raw": "export function setGlobalHealthDashboard(dashboard: ConfigurationHealthDashboard): void {"
        },
        {
          "named": [
            "startHealthMonitoring"
          ],
          "typeOnly": false,
          "line": 820,
          "raw": "export function startHealthMonitoring(config?: Partial<DashboardConfig>): ConfigurationHealthDashboard {"
        },
        {
          "named": [
            "generateDashboardHTML"
          ],
          "typeOnly": false,
          "line": 839,
          "raw": "export function generateDashboardHTML(healthStatus: SystemHealthStatus): string {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/health-dashboard.ts"
    },
    "shared/config/hot-reload.ts": {
      "filePath": "shared/config/hot-reload.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/hot-reload.ts",
      "size": 17377,
      "lines": 662,
      "imports": [
        {
          "from": "./runtime-manager.js",
          "named": [
            "RuntimeConfigurationManager"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { RuntimeConfigurationManager } from './runtime-manager.js';"
        },
        {
          "from": "./validator.js",
          "named": [
            "ConfigurationValidator"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { ConfigurationValidator } from './validator.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "HotReloadOptions"
          ],
          "typeOnly": false,
          "line": 20,
          "raw": "export interface HotReloadOptions {"
        },
        {
          "named": [
            "RemoteSourceConfig"
          ],
          "typeOnly": false,
          "line": 35,
          "raw": "export interface RemoteSourceConfig {"
        },
        {
          "named": [
            "FileWatchEvent"
          ],
          "typeOnly": false,
          "line": 48,
          "raw": "export interface FileWatchEvent {"
        },
        {
          "named": [
            "HotReloadEvent"
          ],
          "typeOnly": false,
          "line": 61,
          "raw": "export interface HotReloadEvent {"
        },
        {
          "named": [
            "ConfigurationHotReloadManager"
          ],
          "typeOnly": false,
          "line": 264,
          "raw": "export class ConfigurationHotReloadManager {"
        },
        {
          "named": [
            "getGlobalHotReloadManager"
          ],
          "typeOnly": false,
          "line": 624,
          "raw": "export function getGlobalHotReloadManager("
        },
        {
          "named": [
            "setGlobalHotReloadManager"
          ],
          "typeOnly": false,
          "line": 640,
          "raw": "export function setGlobalHotReloadManager(manager: ConfigurationHotReloadManager): void {"
        },
        {
          "named": [
            "startHotReload"
          ],
          "typeOnly": false,
          "line": 647,
          "raw": "export function startHotReload(): void {"
        },
        {
          "named": [
            "stopHotReload"
          ],
          "typeOnly": false,
          "line": 657,
          "raw": "export function stopHotReload(): void {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/hot-reload.ts"
    },
    "shared/config/index.ts": {
      "filePath": "shared/config/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/index.ts",
      "size": 20360,
      "lines": 752,
      "imports": [
        {
          "from": "./manager.js",
          "named": [
            "ConfigurationManager"
          ],
          "typeOnly": false,
          "line": 145,
          "raw": "import { ConfigurationManager } from './manager.js';"
        },
        {
          "from": "./feature-flags.js",
          "named": [
            "FeatureFlagsEngine"
          ],
          "typeOnly": false,
          "line": 146,
          "raw": "import { FeatureFlagsEngine } from './feature-flags.js';"
        },
        {
          "from": "./validator.js",
          "named": [
            "ConfigurationValidator"
          ],
          "typeOnly": false,
          "line": 147,
          "raw": "import { ConfigurationValidator } from './validator.js';"
        },
        {
          "from": "./environment-manager.js",
          "named": [
            "EnvironmentManager"
          ],
          "typeOnly": false,
          "line": 148,
          "raw": "import { EnvironmentManager } from './environment-manager.js';"
        },
        {
          "from": "./deployment-health.js",
          "named": [
            "DeploymentHealthChecker"
          ],
          "typeOnly": false,
          "line": 149,
          "raw": "import { DeploymentHealthChecker } from './deployment-health.js';"
        },
        {
          "from": "./deployment-pipeline.js",
          "named": [
            "DeploymentPipelineManager",
            "createDeploymentPipeline"
          ],
          "typeOnly": false,
          "line": 150,
          "raw": "import { DeploymentPipelineManager, createDeploymentPipeline } from './deployment-pipeline.js';"
        },
        {
          "from": "./runtime-manager.js",
          "named": [
            "RuntimeConfigurationManager"
          ],
          "typeOnly": false,
          "line": 151,
          "raw": "import { RuntimeConfigurationManager } from './runtime-manager.js';"
        },
        {
          "from": "./hot-reload.js",
          "named": [
            "ConfigurationHotReloadManager"
          ],
          "typeOnly": false,
          "line": 152,
          "raw": "import { ConfigurationHotReloadManager } from './hot-reload.js';"
        },
        {
          "from": "./cache-manager.js",
          "named": [
            "ConfigurationCacheManager"
          ],
          "typeOnly": false,
          "line": 153,
          "raw": "import { ConfigurationCacheManager } from './cache-manager.js';"
        },
        {
          "from": "./sync-manager.js",
          "named": [
            "ConfigurationSyncManager"
          ],
          "typeOnly": false,
          "line": 154,
          "raw": "import { ConfigurationSyncManager } from './sync-manager.js';"
        },
        {
          "from": "./audit-trail.js",
          "named": [
            "ConfigurationAuditTrailManager"
          ],
          "typeOnly": false,
          "line": 155,
          "raw": "import { ConfigurationAuditTrailManager } from './audit-trail.js';"
        },
        {
          "from": "./defaults.js",
          "named": [
            "deepMerge",
            "defaultConfig"
          ],
          "typeOnly": false,
          "line": 156,
          "raw": "import { deepMerge, defaultConfig } from './defaults.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ConfigurationManager"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "export { ConfigurationManager } from './manager.js';",
          "from": "./manager.js"
        },
        {
          "named": [
            "ConfigurationValidator"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "export { ConfigurationValidator } from './validator.js';",
          "from": "./validator.js"
        },
        {
          "named": [
            "FeatureFlagsEngine",
            "getGlobalFeatureFlags",
            "setGlobalFeatureFlags"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "export { FeatureFlagsEngine, getGlobalFeatureFlags, setGlobalFeatureFlags } from './feature-flags.js';",
          "from": "./feature-flags.js"
        },
        {
          "named": [
            "EnvironmentManager"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "export { EnvironmentManager } from './environment-manager.js';",
          "from": "./environment-manager.js"
        },
        {
          "named": [
            "DeploymentHealthChecker",
            "getGlobalHealthChecker",
            "performDeploymentHealthCheck"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "export { DeploymentHealthChecker, getGlobalHealthChecker, performDeploymentHealthCheck } from './deployment-health.js';",
          "from": "./deployment-health.js"
        },
        {
          "named": [
            "DeploymentPipelineManager",
            "createDeploymentPipeline",
            "defaultPipelineConfig"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "export { DeploymentPipelineManager, createDeploymentPipeline, defaultPipelineConfig } from './deployment-pipeline.js';",
          "from": "./deployment-pipeline.js"
        },
        {
          "named": [
            "ConfigurationSystem"
          ],
          "typeOnly": false,
          "line": 168,
          "raw": "export class ConfigurationSystem {"
        },
        {
          "named": [
            "getGlobalConfigSystem"
          ],
          "typeOnly": false,
          "line": 523,
          "raw": "export function getGlobalConfigSystem(): ConfigurationSystem {"
        },
        {
          "named": [
            "setGlobalConfigSystem"
          ],
          "typeOnly": false,
          "line": 533,
          "raw": "export function setGlobalConfigSystem(system: ConfigurationSystem): void {"
        },
        {
          "named": [
            "getConfig"
          ],
          "typeOnly": false,
          "line": 552,
          "raw": "export function getConfig(): MCPServerConfig {"
        },
        {
          "named": [
            "isFeatureEnabled"
          ],
          "typeOnly": false,
          "line": 559,
          "raw": "export function isFeatureEnabled(flagName: string, context?: EvaluationContext): boolean {"
        },
        {
          "named": [
            "getFeatureVariant"
          ],
          "typeOnly": false,
          "line": 566,
          "raw": "export function getFeatureVariant(flagName: string, context?: EvaluationContext): string | undefined {"
        },
        {
          "named": [
            "getFeatureConfig"
          ],
          "typeOnly": false,
          "line": 573,
          "raw": "export function getFeatureConfig(flagName: string, context?: EvaluationContext): any {"
        },
        {
          "named": [
            "validateConfig"
          ],
          "typeOnly": false,
          "line": 587,
          "raw": "export function validateConfig(): ValidationResult {"
        },
        {
          "named": [
            "detectEnvironment"
          ],
          "typeOnly": false,
          "line": 594,
          "raw": "export function detectEnvironment() {"
        },
        {
          "named": [
            "ConfigUtils"
          ],
          "typeOnly": false,
          "line": 638,
          "raw": "export const ConfigUtils = {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/index.ts"
    },
    "shared/config/manager.ts": {
      "filePath": "shared/config/manager.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/manager.ts",
      "size": 13234,
      "lines": 467,
      "imports": [
        {
          "from": "./defaults.js",
          "named": [
            "defaultConfig",
            "deepMerge",
            "getEnvironmentOverrides"
          ],
          "typeOnly": false,
          "line": 20,
          "raw": "import { defaultConfig, deepMerge, getEnvironmentOverrides } from './defaults.js';"
        },
        {
          "from": "./validator.js",
          "named": [
            "ConfigurationValidator"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "import { ConfigurationValidator } from './validator.js';"
        },
        {
          "from": "./feature-flags.js",
          "named": [
            "FeatureFlagsEngine"
          ],
          "typeOnly": false,
          "line": 22,
          "raw": "import { FeatureFlagsEngine } from './feature-flags.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ConfigurationManager"
          ],
          "typeOnly": false,
          "line": 157,
          "raw": "export class ConfigurationManager {"
        },
        {
          "named": [
            "createConfigurationManager"
          ],
          "typeOnly": false,
          "line": 437,
          "raw": "export function createConfigurationManager(environment: string, options: Partial<ConfigurationManagerOptions> = {}): ConfigurationManager {"
        },
        {
          "named": [
            "getGlobalConfigManager"
          ],
          "typeOnly": false,
          "line": 452,
          "raw": "export function getGlobalConfigManager(environment?: string): ConfigurationManager {"
        },
        {
          "named": [
            "setGlobalConfigManager"
          ],
          "typeOnly": false,
          "line": 465,
          "raw": "export function setGlobalConfigManager(manager: ConfigurationManager): void {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/manager.ts"
    },
    "shared/config/runtime-manager.ts": {
      "filePath": "shared/config/runtime-manager.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/runtime-manager.ts",
      "size": 14976,
      "lines": 591,
      "imports": [
        {
          "from": "./validator.js",
          "named": [
            "ConfigurationValidator"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { ConfigurationValidator } from './validator.js';"
        },
        {
          "from": "./defaults.js",
          "named": [
            "deepMerge"
          ],
          "typeOnly": false,
          "line": 17,
          "raw": "import { deepMerge } from './defaults.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "RuntimeUpdateOptions"
          ],
          "typeOnly": false,
          "line": 22,
          "raw": "export interface RuntimeUpdateOptions {"
        },
        {
          "named": [
            "ConfigurationSnapshot"
          ],
          "typeOnly": false,
          "line": 33,
          "raw": "export interface ConfigurationSnapshot {"
        },
        {
          "named": [
            "RuntimeChangeResult"
          ],
          "typeOnly": false,
          "line": 44,
          "raw": "export interface RuntimeChangeResult {"
        },
        {
          "named": [
            "RuntimeConfigurationManager"
          ],
          "typeOnly": false,
          "line": 89,
          "raw": "export class RuntimeConfigurationManager {"
        },
        {
          "named": [
            "getGlobalRuntimeManager"
          ],
          "typeOnly": false,
          "line": 543,
          "raw": "export function getGlobalRuntimeManager(initialConfig?: MCPServerConfig): RuntimeConfigurationManager {"
        },
        {
          "named": [
            "setGlobalRuntimeManager"
          ],
          "typeOnly": false,
          "line": 556,
          "raw": "export function setGlobalRuntimeManager(manager: RuntimeConfigurationManager): void {"
        },
        {
          "named": [
            "getRuntimeConfiguration"
          ],
          "typeOnly": false,
          "line": 576,
          "raw": "export function getRuntimeConfiguration(): MCPServerConfig {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/runtime-manager.ts"
    },
    "shared/config/schema.ts": {
      "filePath": "shared/config/schema.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/schema.ts",
      "size": 15330,
      "lines": 655,
      "imports": [
        {
          "from": "../types/config-types.js",
          "named": [
            "ConfigurationSchema"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { ConfigurationSchema } from '../types/config-types.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "mcpServerConfigSchema"
          ],
          "typeOnly": false,
          "line": 455,
          "raw": "export const mcpServerConfigSchema: ConfigurationSchema = {"
        },
        {
          "named": [
            "featureFlagSchema"
          ],
          "typeOnly": false,
          "line": 474,
          "raw": "export const featureFlagSchema: JSONSchema7 = {"
        },
        {
          "named": [
            "environmentConfigSchema"
          ],
          "typeOnly": false,
          "line": 551,
          "raw": "export const environmentConfigSchema: JSONSchema7 = {"
        },
        {
          "named": [
            "SchemaUtils"
          ],
          "typeOnly": false,
          "line": 588,
          "raw": "export class SchemaUtils {"
        },
        {
          "named": [
            "SCHEMA_METADATA"
          ],
          "typeOnly": false,
          "line": 644,
          "raw": "export const SCHEMA_METADATA = {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/schema.ts"
    },
    "shared/config/sync-manager.ts": {
      "filePath": "shared/config/sync-manager.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/sync-manager.ts",
      "size": 21604,
      "lines": 834,
      "imports": [
        {
          "from": "./runtime-manager.js",
          "named": [
            "RuntimeConfigurationManager"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { RuntimeConfigurationManager } from './runtime-manager.js';"
        },
        {
          "from": "./validator.js",
          "named": [
            "ConfigurationValidator"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { ConfigurationValidator } from './validator.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ConfigurationVersion"
          ],
          "typeOnly": false,
          "line": 35,
          "raw": "export interface ConfigurationVersion {"
        },
        {
          "named": [
            "SyncEvent"
          ],
          "typeOnly": false,
          "line": 46,
          "raw": "export interface SyncEvent {"
        },
        {
          "named": [
            "ConfigurationConflict"
          ],
          "typeOnly": false,
          "line": 60,
          "raw": "export interface ConfigurationConflict {"
        },
        {
          "named": [
            "SyncPeer"
          ],
          "typeOnly": false,
          "line": 73,
          "raw": "export interface SyncPeer {"
        },
        {
          "named": [
            "SyncOptions"
          ],
          "typeOnly": false,
          "line": 85,
          "raw": "export interface SyncOptions {"
        },
        {
          "named": [
            "PubSubMessage"
          ],
          "typeOnly": false,
          "line": 101,
          "raw": "export interface PubSubMessage {"
        },
        {
          "named": [
            "ConfigurationSyncManager"
          ],
          "typeOnly": false,
          "line": 236,
          "raw": "export class ConfigurationSyncManager {"
        },
        {
          "named": [
            "getGlobalSyncManager"
          ],
          "typeOnly": false,
          "line": 795,
          "raw": "export function getGlobalSyncManager("
        },
        {
          "named": [
            "setGlobalSyncManager"
          ],
          "typeOnly": false,
          "line": 812,
          "raw": "export function setGlobalSyncManager(manager: ConfigurationSyncManager): void {"
        },
        {
          "named": [
            "startSync"
          ],
          "typeOnly": false,
          "line": 819,
          "raw": "export function startSync(): void {"
        },
        {
          "named": [
            "stopSync"
          ],
          "typeOnly": false,
          "line": 829,
          "raw": "export function stopSync(): void {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/sync-manager.ts"
    },
    "shared/config/validator.ts": {
      "filePath": "shared/config/validator.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/config/validator.ts",
      "size": 15400,
      "lines": 487,
      "imports": [
        {
          "from": "./schema.js",
          "named": [
            "mcpServerConfigSchema"
          ],
          "typeOnly": false,
          "line": 18,
          "raw": "import { mcpServerConfigSchema } from './schema.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ConfigurationValidator"
          ],
          "typeOnly": false,
          "line": 23,
          "raw": "export class ConfigurationValidator {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/config/validator.ts"
    },
    "shared/core/base-mcp-handler.js": {
      "filePath": "shared/core/base-mcp-handler.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/base-mcp-handler.js",
      "size": 18912,
      "lines": 475,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes",
            "LegacyErrorCodes",
            "createEnhancedError",
            "createStandardErrorResponse",
            ""
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { MCPError, ErrorCodes, LegacyErrorCodes, createEnhancedError, createStandardErrorResponse, } from '../types/index.js';"
        },
        {
          "from": "../services/index.js",
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 17,
          "raw": "import { OpenAIService } from '../services/index.js';"
        },
        {
          "from": "../resources/index.js",
          "named": [
            "getAllResources",
            "getResource",
            "getResourceContent"
          ],
          "typeOnly": false,
          "line": 18,
          "raw": "import { getAllResources, getResource, getResourceContent } from '../resources/index.js';"
        },
        {
          "from": "./index.js",
          "named": [
            "setupHandlerSystem",
            "generateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 19,
          "raw": "import { setupHandlerSystem, generateToolDefinitions } from './index.js';"
        },
        {
          "from": "./handlers/prompt-handlers.js",
          "named": [
            "createPromptHandlers"
          ],
          "typeOnly": false,
          "line": 20,
          "raw": "import { createPromptHandlers } from './handlers/prompt-handlers.js';"
        },
        {
          "from": "./handlers/completion-handlers.js",
          "named": [
            "createCompletionHandlers"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "import { createCompletionHandlers } from './handlers/completion-handlers.js';"
        },
        {
          "from": "./pagination-utils.js",
          "named": [
            "paginateArray",
            "createPaginationMetadata",
            "PAGINATION_DEFAULTS"
          ],
          "typeOnly": false,
          "line": 22,
          "raw": "import { paginateArray, createPaginationMetadata, PAGINATION_DEFAULTS } from './pagination-utils.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "BaseMCPHandler"
          ],
          "typeOnly": false,
          "line": 29,
          "raw": "export class BaseMCPHandler {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/base-mcp-handler.js"
    },
    "shared/core/base-mcp-handler.ts": {
      "filePath": "shared/core/base-mcp-handler.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/base-mcp-handler.ts",
      "size": 24165,
      "lines": 755,
      "imports": [
        {
          "from": "../services/index.js",
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 42,
          "raw": "import { OpenAIService } from '../services/index.js';"
        },
        {
          "from": "../resources/index.js",
          "named": [
            "getAllResources",
            "getResource",
            "getResourceContent"
          ],
          "typeOnly": false,
          "line": 43,
          "raw": "import { getAllResources, getResource, getResourceContent } from '../resources/index.js';"
        },
        {
          "from": "./tool-registry.js",
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 44,
          "raw": "import { ToolRegistry } from './tool-registry.js';"
        },
        {
          "from": "./handlers/index.js",
          "named": [
            "createFlatHandlerMap",
            "validateHandlerCompleteness",
            "TOTAL_TOOL_COUNT",
            "HANDLER_CATEGORIES"
          ],
          "typeOnly": false,
          "line": 45,
          "raw": "import { createFlatHandlerMap, validateHandlerCompleteness, TOTAL_TOOL_COUNT, HANDLER_CATEGORIES } from './handlers/index.js';"
        },
        {
          "from": "./tool-definitions.js",
          "named": [
            "generateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 46,
          "raw": "import { generateToolDefinitions } from './tool-definitions.js';"
        },
        {
          "from": "./handlers/prompt-handlers.js",
          "named": [
            "createPromptHandlers",
            "PromptHandlerContext"
          ],
          "typeOnly": false,
          "line": 47,
          "raw": "import { createPromptHandlers, PromptHandlerContext } from './handlers/prompt-handlers.js';"
        },
        {
          "from": "./handlers/completion-handlers.js",
          "named": [
            "createCompletionHandlers",
            "CompletionHandlerContext"
          ],
          "typeOnly": false,
          "line": 48,
          "raw": "import { createCompletionHandlers, CompletionHandlerContext } from './handlers/completion-handlers.js';"
        },
        {
          "from": "./transport-adapters.js",
          "named": [
            "TransportAdapter"
          ],
          "typeOnly": false,
          "line": 92,
          "raw": "import { TransportAdapter } from './transport-adapters.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "BaseMCPHandlerConfig"
          ],
          "typeOnly": false,
          "line": 67,
          "raw": "export interface BaseMCPHandlerConfig {"
        },
        {
          "named": [
            "BaseMCPHandler"
          ],
          "typeOnly": false,
          "line": 100,
          "raw": "export class BaseMCPHandler {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/base-mcp-handler.ts"
    },
    "shared/core/handlers/assistant-handlers.js": {
      "filePath": "shared/core/handlers/assistant-handlers.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/assistant-handlers.js",
      "size": 5160,
      "lines": 159,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { BaseToolHandler } from './base-tool-handler.js';"
        },
        {
          "from": "../../validation/index.js",
          "named": [
            "validateCreateAssistantParams",
            "validatePaginationParams",
            "validateOpenAIId",
            "validateModel",
            "validateMetadata"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { validateCreateAssistantParams, validatePaginationParams, validateOpenAIId, validateModel, validateMetadata } from '../../validation/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "AssistantCreateHandler"
          ],
          "typeOnly": false,
          "line": 19,
          "raw": "export class AssistantCreateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "AssistantListHandler"
          ],
          "typeOnly": false,
          "line": 41,
          "raw": "export class AssistantListHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "AssistantGetHandler"
          ],
          "typeOnly": false,
          "line": 63,
          "raw": "export class AssistantGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "AssistantUpdateHandler"
          ],
          "typeOnly": false,
          "line": 85,
          "raw": "export class AssistantUpdateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "AssistantDeleteHandler"
          ],
          "typeOnly": false,
          "line": 128,
          "raw": "export class AssistantDeleteHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createAssistantHandlers"
          ],
          "typeOnly": false,
          "line": 150,
          "raw": "export function createAssistantHandlers(context) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/handlers/assistant-handlers.js"
    },
    "shared/core/handlers/assistant-handlers.ts": {
      "filePath": "shared/core/handlers/assistant-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/assistant-handlers.ts",
      "size": 5268,
      "lines": 201,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './base-tool-handler.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "AssistantCreateHandler"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export class AssistantCreateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "AssistantListHandler"
          ],
          "typeOnly": false,
          "line": 56,
          "raw": "export class AssistantListHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "AssistantGetHandler"
          ],
          "typeOnly": false,
          "line": 84,
          "raw": "export class AssistantGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "AssistantUpdateHandler"
          ],
          "typeOnly": false,
          "line": 112,
          "raw": "export class AssistantUpdateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "AssistantDeleteHandler"
          ],
          "typeOnly": false,
          "line": 165,
          "raw": "export class AssistantDeleteHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createAssistantHandlers"
          ],
          "typeOnly": false,
          "line": 193,
          "raw": "export function createAssistantHandlers(context: ToolHandlerContext): Record<string, BaseToolHandler> {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/handlers/assistant-handlers.ts"
    },
    "shared/core/handlers/base-prompt-handler.js": {
      "filePath": "shared/core/handlers/base-prompt-handler.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/base-prompt-handler.js",
      "size": 2830,
      "lines": 83,
      "imports": [
        {
          "from": "../../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 7,
          "raw": "import { MCPError, ErrorCodes } from '../../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "BasePromptHandler"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "export class BasePromptHandler {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/handlers/base-prompt-handler.js"
    },
    "shared/core/handlers/base-prompt-handler.ts": {
      "filePath": "shared/core/handlers/base-prompt-handler.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/base-prompt-handler.ts",
      "size": 3350,
      "lines": 125,
      "imports": [
        {
          "from": "../../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { MCPError, ErrorCodes } from '../../types/index.js';"
        },
        {
          "from": "../../validation/index.js",
          "named": [
            "ValidationResult"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { ValidationResult } from '../../validation/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PromptHandlerContext"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "export interface PromptHandlerContext {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/handlers/base-prompt-handler.ts"
    },
    "shared/core/handlers/base-tool-handler.js": {
      "filePath": "shared/core/handlers/base-tool-handler.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/base-tool-handler.js",
      "size": 3543,
      "lines": 99,
      "imports": [
        {
          "from": "../../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { MCPError, ErrorCodes } from '../../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 22,
          "raw": "export class BaseToolHandler {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/handlers/base-tool-handler.js"
    },
    "shared/core/handlers/base-tool-handler.ts": {
      "filePath": "shared/core/handlers/base-tool-handler.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/base-tool-handler.ts",
      "size": 4537,
      "lines": 160,
      "imports": [
        {
          "from": "../../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { MCPError, ErrorCodes } from '../../types/index.js';"
        },
        {
          "from": "../../validation/index.js",
          "named": [
            "ValidationResult"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { ValidationResult } from '../../validation/index.js';"
        },
        {
          "from": "../../services/index.js",
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { OpenAIService } from '../../services/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "export interface ToolHandlerContext {"
        },
        {
          "named": [
            "ToolExecutionResult"
          ],
          "typeOnly": false,
          "line": 30,
          "raw": "export interface ToolExecutionResult {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/handlers/base-tool-handler.ts"
    },
    "shared/core/handlers/completion-handlers.js": {
      "filePath": "shared/core/handlers/completion-handlers.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/completion-handlers.js",
      "size": 13080,
      "lines": 360,
      "imports": [
        {
          "from": "../../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes",
            ""
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { MCPError, ErrorCodes, } from '../../types/index.js';"
        },
        {
          "from": "../../resources/index.js",
          "named": [
            "getResources"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { getResources } from '../../resources/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "CompletionHandlerContext"
          ],
          "typeOnly": false,
          "line": 18,
          "raw": "export const CompletionHandlerContext = {};"
        },
        {
          "named": [
            "CompletionHandler"
          ],
          "typeOnly": false,
          "line": 22,
          "raw": "export class CompletionHandler {"
        },
        {
          "named": [
            "createCompletionHandlers"
          ],
          "typeOnly": false,
          "line": 343,
          "raw": "export function createCompletionHandlers(context) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/handlers/completion-handlers.js"
    },
    "shared/core/handlers/completion-handlers.ts": {
      "filePath": "shared/core/handlers/completion-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/completion-handlers.ts",
      "size": 12407,
      "lines": 464,
      "imports": [
        {
          "from": "../../resources/index.js",
          "named": [
            "getResources"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "import { getResources } from '../../resources/index.js';"
        },
        {
          "from": "../tool-definitions.js",
          "named": [
            "generateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 22,
          "raw": "import { generateToolDefinitions } from '../tool-definitions.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "CompletionHandlerContext"
          ],
          "typeOnly": false,
          "line": 27,
          "raw": "export interface CompletionHandlerContext {"
        },
        {
          "named": [
            "CompletionHandler"
          ],
          "typeOnly": false,
          "line": 34,
          "raw": "export class CompletionHandler {"
        },
        {
          "named": [
            "createCompletionHandlers"
          ],
          "typeOnly": false,
          "line": 446,
          "raw": "export function createCompletionHandlers(context: CompletionHandlerContext) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/handlers/completion-handlers.ts"
    },
    "shared/core/handlers/index.js": {
      "filePath": "shared/core/handlers/index.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/index.js",
      "size": 5556,
      "lines": 119,
      "imports": [
        {
          "from": "./assistant-handlers.js",
          "named": [
            "createAssistantHandlers"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "import { createAssistantHandlers } from './assistant-handlers.js';"
        },
        {
          "from": "./thread-handlers.js",
          "named": [
            "createThreadHandlers"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { createThreadHandlers } from './thread-handlers.js';"
        },
        {
          "from": "./message-handlers.js",
          "named": [
            "createMessageHandlers"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { createMessageHandlers } from './message-handlers.js';"
        },
        {
          "from": "./run-handlers.js",
          "named": [
            "createRunHandlers"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { createRunHandlers } from './run-handlers.js';"
        },
        {
          "from": "./run-step-handlers.js",
          "named": [
            "createRunStepHandlers"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { createRunStepHandlers } from './run-step-handlers.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "export { BaseToolHandler } from './base-tool-handler.js';",
          "from": "./base-tool-handler.js"
        },
        {
          "named": [
            "createAssistantHandlers"
          ],
          "typeOnly": false,
          "line": 18,
          "raw": "export { createAssistantHandlers } from './assistant-handlers.js';",
          "from": "./assistant-handlers.js"
        },
        {
          "named": [
            "createThreadHandlers"
          ],
          "typeOnly": false,
          "line": 19,
          "raw": "export { createThreadHandlers } from './thread-handlers.js';",
          "from": "./thread-handlers.js"
        },
        {
          "named": [
            "createMessageHandlers"
          ],
          "typeOnly": false,
          "line": 20,
          "raw": "export { createMessageHandlers } from './message-handlers.js';",
          "from": "./message-handlers.js"
        },
        {
          "named": [
            "createRunHandlers"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "export { createRunHandlers } from './run-handlers.js';",
          "from": "./run-handlers.js"
        },
        {
          "named": [
            "createRunStepHandlers"
          ],
          "typeOnly": false,
          "line": 22,
          "raw": "export { createRunStepHandlers } from './run-step-handlers.js';",
          "from": "./run-step-handlers.js"
        },
        {
          "named": [
            "createCompletionHandlers"
          ],
          "typeOnly": false,
          "line": 23,
          "raw": "export { createCompletionHandlers } from './completion-handlers.js';",
          "from": "./completion-handlers.js"
        },
        {
          "named": [
            "createAllHandlers"
          ],
          "typeOnly": false,
          "line": 33,
          "raw": "export function createAllHandlers(context) {"
        },
        {
          "named": [
            "createFlatHandlerMap"
          ],
          "typeOnly": false,
          "line": 84,
          "raw": "export function createFlatHandlerMap(context) {"
        },
        {
          "named": [
            "HANDLER_CATEGORIES"
          ],
          "typeOnly": false,
          "line": 91,
          "raw": "export const HANDLER_CATEGORIES = {"
        },
        {
          "named": [
            "TOTAL_TOOL_COUNT"
          ],
          "typeOnly": false,
          "line": 101,
          "raw": "export const TOTAL_TOOL_COUNT = Object.values(HANDLER_CATEGORIES).reduce((total, tools) => total + tools.length, 0);"
        },
        {
          "named": [
            "validateHandlerCompleteness"
          ],
          "typeOnly": false,
          "line": 108,
          "raw": "export function validateHandlerCompleteness(handlers) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/handlers/index.js"
    },
    "shared/core/handlers/index.ts": {
      "filePath": "shared/core/handlers/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/index.ts",
      "size": 6080,
      "lines": 152,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './base-tool-handler.js';"
        },
        {
          "from": "./assistant-handlers.js",
          "named": [
            "createAssistantHandlers"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { createAssistantHandlers } from './assistant-handlers.js';"
        },
        {
          "from": "./thread-handlers.js",
          "named": [
            "createThreadHandlers"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { createThreadHandlers } from './thread-handlers.js';"
        },
        {
          "from": "./message-handlers.js",
          "named": [
            "createMessageHandlers"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { createMessageHandlers } from './message-handlers.js';"
        },
        {
          "from": "./run-handlers.js",
          "named": [
            "createRunHandlers"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { createRunHandlers } from './run-handlers.js';"
        },
        {
          "from": "./run-step-handlers.js",
          "named": [
            "createRunStepHandlers"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { createRunStepHandlers } from './run-step-handlers.js';"
        },
        {
          "from": "./completion-handlers.js",
          "named": [
            "createCompletionHandlers"
          ],
          "typeOnly": false,
          "line": 17,
          "raw": "import { createCompletionHandlers } from './completion-handlers.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 20,
          "raw": "export { BaseToolHandler } from './base-tool-handler.js';",
          "from": "./base-tool-handler.js"
        },
        {
          "named": [
            "ToolHandlerContext"
          ],
          "typeOnly": true,
          "line": 21,
          "raw": "export type { ToolHandlerContext } from './base-tool-handler.js';",
          "from": "./base-tool-handler.js"
        },
        {
          "named": [
            "createAssistantHandlers"
          ],
          "typeOnly": false,
          "line": 24,
          "raw": "export { createAssistantHandlers } from './assistant-handlers.js';",
          "from": "./assistant-handlers.js"
        },
        {
          "named": [
            "createThreadHandlers"
          ],
          "typeOnly": false,
          "line": 25,
          "raw": "export { createThreadHandlers } from './thread-handlers.js';",
          "from": "./thread-handlers.js"
        },
        {
          "named": [
            "createMessageHandlers"
          ],
          "typeOnly": false,
          "line": 26,
          "raw": "export { createMessageHandlers } from './message-handlers.js';",
          "from": "./message-handlers.js"
        },
        {
          "named": [
            "createRunHandlers"
          ],
          "typeOnly": false,
          "line": 27,
          "raw": "export { createRunHandlers } from './run-handlers.js';",
          "from": "./run-handlers.js"
        },
        {
          "named": [
            "createRunStepHandlers"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export { createRunStepHandlers } from './run-step-handlers.js';",
          "from": "./run-step-handlers.js"
        },
        {
          "named": [
            "createCompletionHandlers"
          ],
          "typeOnly": false,
          "line": 29,
          "raw": "export { createCompletionHandlers } from './completion-handlers.js';",
          "from": "./completion-handlers.js"
        },
        {
          "named": [
            "createAllHandlers"
          ],
          "typeOnly": false,
          "line": 40,
          "raw": "export function createAllHandlers(context: ToolHandlerContext): {"
        },
        {
          "named": [
            "createFlatHandlerMap"
          ],
          "typeOnly": false,
          "line": 106,
          "raw": "export function createFlatHandlerMap(context: ToolHandlerContext): Record<string, BaseToolHandler> {"
        },
        {
          "named": [
            "HANDLER_CATEGORIES"
          ],
          "typeOnly": false,
          "line": 114,
          "raw": "export const HANDLER_CATEGORIES = {"
        },
        {
          "named": [
            "TOTAL_TOOL_COUNT"
          ],
          "typeOnly": false,
          "line": 125,
          "raw": "export const TOTAL_TOOL_COUNT = Object.values(HANDLER_CATEGORIES).reduce("
        },
        {
          "named": [
            "validateHandlerCompleteness"
          ],
          "typeOnly": false,
          "line": 136,
          "raw": "export function validateHandlerCompleteness(handlers: Record<string, BaseToolHandler>): {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/handlers/index.ts"
    },
    "shared/core/handlers/message-handlers.js": {
      "filePath": "shared/core/handlers/message-handlers.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/message-handlers.js",
      "size": 7662,
      "lines": 219,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { BaseToolHandler } from './base-tool-handler.js';"
        },
        {
          "from": "../../validation/index.js",
          "named": [
            "validateOpenAIId",
            "validateMessageRole",
            "validateRequiredString",
            "validateMetadata",
            "validatePaginationParams"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { validateOpenAIId, validateMessageRole, validateRequiredString, validateMetadata, validatePaginationParams } from '../../validation/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "MessageCreateHandler"
          ],
          "typeOnly": false,
          "line": 19,
          "raw": "export class MessageCreateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "MessageListHandler"
          ],
          "typeOnly": false,
          "line": 64,
          "raw": "export class MessageListHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "MessageGetHandler"
          ],
          "typeOnly": false,
          "line": 105,
          "raw": "export class MessageGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "MessageUpdateHandler"
          ],
          "typeOnly": false,
          "line": 137,
          "raw": "export class MessageUpdateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "MessageDeleteHandler"
          ],
          "typeOnly": false,
          "line": 178,
          "raw": "export class MessageDeleteHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createMessageHandlers"
          ],
          "typeOnly": false,
          "line": 210,
          "raw": "export function createMessageHandlers(context) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/handlers/message-handlers.js"
    },
    "shared/core/handlers/message-handlers.ts": {
      "filePath": "shared/core/handlers/message-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/message-handlers.ts",
      "size": 7534,
      "lines": 277,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './base-tool-handler.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "MessageCreateHandler"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export class MessageCreateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "MessageListHandler"
          ],
          "typeOnly": false,
          "line": 87,
          "raw": "export class MessageListHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "MessageGetHandler"
          ],
          "typeOnly": false,
          "line": 138,
          "raw": "export class MessageGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "MessageUpdateHandler"
          ],
          "typeOnly": false,
          "line": 178,
          "raw": "export class MessageUpdateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "MessageDeleteHandler"
          ],
          "typeOnly": false,
          "line": 229,
          "raw": "export class MessageDeleteHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createMessageHandlers"
          ],
          "typeOnly": false,
          "line": 269,
          "raw": "export function createMessageHandlers(context: ToolHandlerContext): Record<string, BaseToolHandler> {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/handlers/message-handlers.ts"
    },
    "shared/core/handlers/prompt-handlers.js": {
      "filePath": "shared/core/handlers/prompt-handlers.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/prompt-handlers.js",
      "size": 5215,
      "lines": 144,
      "imports": [
        {
          "from": "./base-prompt-handler.js",
          "named": [
            "BasePromptHandler"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { BasePromptHandler } from './base-prompt-handler.js';"
        },
        {
          "from": "../../prompts/index.js",
          "named": [
            "getAvailablePrompts",
            "generatePromptMessages",
            "hasPrompt"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { getAvailablePrompts, generatePromptMessages, hasPrompt } from '../../prompts/index.js';"
        },
        {
          "from": "../pagination-utils.js",
          "named": [
            "paginateArray",
            "createPaginationMetadata",
            "PAGINATION_DEFAULTS"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "import { paginateArray, createPaginationMetadata, PAGINATION_DEFAULTS } from '../pagination-utils.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PromptsListHandler"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "export class PromptsListHandler extends BasePromptHandler {"
        },
        {
          "named": [
            "PromptsGetHandler"
          ],
          "typeOnly": false,
          "line": 60,
          "raw": "export class PromptsGetHandler extends BasePromptHandler {"
        },
        {
          "named": [
            "createPromptHandlers"
          ],
          "typeOnly": false,
          "line": 126,
          "raw": "export function createPromptHandlers(context) {"
        },
        {
          "named": [
            "getPromptHandlerMethods"
          ],
          "typeOnly": false,
          "line": 135,
          "raw": "export function getPromptHandlerMethods() {"
        },
        {
          "named": [
            "isPromptHandlerMethod"
          ],
          "typeOnly": false,
          "line": 141,
          "raw": "export function isPromptHandlerMethod(method) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/handlers/prompt-handlers.js"
    },
    "shared/core/handlers/prompt-handlers.ts": {
      "filePath": "shared/core/handlers/prompt-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/prompt-handlers.ts",
      "size": 5330,
      "lines": 192,
      "imports": [
        {
          "from": "./base-prompt-handler.js",
          "named": [
            "BasePromptHandler"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { BasePromptHandler } from './base-prompt-handler.js';"
        },
        {
          "from": "./base-prompt-handler.js",
          "named": [
            "PromptHandlerContext"
          ],
          "typeOnly": true,
          "line": 10,
          "raw": "import type { PromptHandlerContext } from './base-prompt-handler.js';"
        },
        {
          "from": "../../validation/index.js",
          "named": [
            "ValidationResult"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { ValidationResult } from '../../validation/index.js';"
        },
        {
          "from": "../../prompts/index.js",
          "named": [
            "getAvailablePrompts",
            "generatePromptMessages",
            "hasPrompt"
          ],
          "typeOnly": false,
          "line": 18,
          "raw": "import { getAvailablePrompts, generatePromptMessages, hasPrompt } from '../../prompts/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PromptsListHandler"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export class PromptsListHandler extends BasePromptHandler {"
        },
        {
          "named": [
            "PromptsGetHandler"
          ],
          "typeOnly": false,
          "line": 85,
          "raw": "export class PromptsGetHandler extends BasePromptHandler {"
        },
        {
          "named": [
            "PromptHandlerContext"
          ],
          "typeOnly": true,
          "line": 168,
          "raw": "export type { PromptHandlerContext };"
        },
        {
          "named": [
            "createPromptHandlers"
          ],
          "typeOnly": false,
          "line": 173,
          "raw": "export function createPromptHandlers(context: PromptHandlerContext) {"
        },
        {
          "named": [
            "getPromptHandlerMethods"
          ],
          "typeOnly": false,
          "line": 183,
          "raw": "export function getPromptHandlerMethods(): string[] {"
        },
        {
          "named": [
            "isPromptHandlerMethod"
          ],
          "typeOnly": false,
          "line": 190,
          "raw": "export function isPromptHandlerMethod(method: string): boolean {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/handlers/prompt-handlers.ts"
    },
    "shared/core/handlers/run-handlers.js": {
      "filePath": "shared/core/handlers/run-handlers.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/run-handlers.js",
      "size": 10061,
      "lines": 277,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { BaseToolHandler } from './base-tool-handler.js';"
        },
        {
          "from": "../../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { MCPError, ErrorCodes } from '../../types/index.js';"
        },
        {
          "from": "../../validation/index.js",
          "named": [
            "validateOpenAIId",
            "validateModel",
            "validateMetadata",
            "validatePaginationParams",
            "validateArray"
          ],
          "typeOnly": false,
          "line": 17,
          "raw": "import { validateOpenAIId, validateModel, validateMetadata, validatePaginationParams, validateArray } from '../../validation/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "RunCreateHandler"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "export class RunCreateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunListHandler"
          ],
          "typeOnly": false,
          "line": 68,
          "raw": "export class RunListHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunGetHandler"
          ],
          "typeOnly": false,
          "line": 102,
          "raw": "export class RunGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunUpdateHandler"
          ],
          "typeOnly": false,
          "line": 134,
          "raw": "export class RunUpdateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunCancelHandler"
          ],
          "typeOnly": false,
          "line": 175,
          "raw": "export class RunCancelHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunSubmitToolOutputsHandler"
          ],
          "typeOnly": false,
          "line": 207,
          "raw": "export class RunSubmitToolOutputsHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createRunHandlers"
          ],
          "typeOnly": false,
          "line": 267,
          "raw": "export function createRunHandlers(context) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/handlers/run-handlers.js"
    },
    "shared/core/handlers/run-handlers.ts": {
      "filePath": "shared/core/handlers/run-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/run-handlers.ts",
      "size": 9783,
      "lines": 349,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './base-tool-handler.js';"
        },
        {
          "from": "../../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 17,
          "raw": "import { MCPError, ErrorCodes } from '../../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "RunCreateHandler"
          ],
          "typeOnly": false,
          "line": 30,
          "raw": "export class RunCreateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunListHandler"
          ],
          "typeOnly": false,
          "line": 87,
          "raw": "export class RunListHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunGetHandler"
          ],
          "typeOnly": false,
          "line": 130,
          "raw": "export class RunGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunUpdateHandler"
          ],
          "typeOnly": false,
          "line": 170,
          "raw": "export class RunUpdateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunCancelHandler"
          ],
          "typeOnly": false,
          "line": 221,
          "raw": "export class RunCancelHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunSubmitToolOutputsHandler"
          ],
          "typeOnly": false,
          "line": 261,
          "raw": "export class RunSubmitToolOutputsHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createRunHandlers"
          ],
          "typeOnly": false,
          "line": 340,
          "raw": "export function createRunHandlers(context: ToolHandlerContext): Record<string, BaseToolHandler> {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/handlers/run-handlers.ts"
    },
    "shared/core/handlers/run-step-handlers.js": {
      "filePath": "shared/core/handlers/run-step-handlers.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/run-step-handlers.js",
      "size": 3329,
      "lines": 98,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { BaseToolHandler } from './base-tool-handler.js';"
        },
        {
          "from": "../../validation/index.js",
          "named": [
            "validateOpenAIId",
            "validatePaginationParams"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { validateOpenAIId, validatePaginationParams } from '../../validation/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "RunStepListHandler"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "export class RunStepListHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunStepGetHandler"
          ],
          "typeOnly": false,
          "line": 55,
          "raw": "export class RunStepGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createRunStepHandlers"
          ],
          "typeOnly": false,
          "line": 92,
          "raw": "export function createRunStepHandlers(context) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/handlers/run-step-handlers.js"
    },
    "shared/core/handlers/run-step-handlers.ts": {
      "filePath": "shared/core/handlers/run-step-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/run-step-handlers.ts",
      "size": 3334,
      "lines": 122,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './base-tool-handler.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "RunStepListHandler"
          ],
          "typeOnly": false,
          "line": 22,
          "raw": "export class RunStepListHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "RunStepGetHandler"
          ],
          "typeOnly": false,
          "line": 71,
          "raw": "export class RunStepGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createRunStepHandlers"
          ],
          "typeOnly": false,
          "line": 117,
          "raw": "export function createRunStepHandlers(context: ToolHandlerContext): Record<string, BaseToolHandler> {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/handlers/run-step-handlers.ts"
    },
    "shared/core/handlers/thread-handlers.js": {
      "filePath": "shared/core/handlers/thread-handlers.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/thread-handlers.js",
      "size": 4199,
      "lines": 135,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { BaseToolHandler } from './base-tool-handler.js';"
        },
        {
          "from": "../../validation/index.js",
          "named": [
            "validateOpenAIId",
            "validateMetadata"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { validateOpenAIId, validateMetadata } from '../../validation/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ThreadCreateHandler"
          ],
          "typeOnly": false,
          "line": 18,
          "raw": "export class ThreadCreateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "ThreadGetHandler"
          ],
          "typeOnly": false,
          "line": 47,
          "raw": "export class ThreadGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "ThreadUpdateHandler"
          ],
          "typeOnly": false,
          "line": 69,
          "raw": "export class ThreadUpdateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "ThreadDeleteHandler"
          ],
          "typeOnly": false,
          "line": 105,
          "raw": "export class ThreadDeleteHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createThreadHandlers"
          ],
          "typeOnly": false,
          "line": 127,
          "raw": "export function createThreadHandlers(context) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/handlers/thread-handlers.js"
    },
    "shared/core/handlers/thread-handlers.ts": {
      "filePath": "shared/core/handlers/thread-handlers.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/handlers/thread-handlers.ts",
      "size": 4279,
      "lines": 168,
      "imports": [
        {
          "from": "./base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './base-tool-handler.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ThreadCreateHandler"
          ],
          "typeOnly": false,
          "line": 24,
          "raw": "export class ThreadCreateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "ThreadGetHandler"
          ],
          "typeOnly": false,
          "line": 60,
          "raw": "export class ThreadGetHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "ThreadUpdateHandler"
          ],
          "typeOnly": false,
          "line": 88,
          "raw": "export class ThreadUpdateHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "ThreadDeleteHandler"
          ],
          "typeOnly": false,
          "line": 133,
          "raw": "export class ThreadDeleteHandler extends BaseToolHandler {"
        },
        {
          "named": [
            "createThreadHandlers"
          ],
          "typeOnly": false,
          "line": 161,
          "raw": "export function createThreadHandlers(context: ToolHandlerContext): Record<string, BaseToolHandler> {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/handlers/thread-handlers.ts"
    },
    "shared/core/index.js": {
      "filePath": "shared/core/index.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/index.js",
      "size": 4267,
      "lines": 85,
      "imports": [
        {
          "from": "./tool-registry.js",
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 37,
          "raw": "import { ToolRegistry } from './tool-registry.js';"
        },
        {
          "from": "./handlers/index.js",
          "named": [
            "createFlatHandlerMap",
            "validateHandlerCompleteness",
            "TOTAL_TOOL_COUNT",
            "HANDLER_CATEGORIES"
          ],
          "typeOnly": false,
          "line": 38,
          "raw": "import { createFlatHandlerMap, validateHandlerCompleteness, TOTAL_TOOL_COUNT, HANDLER_CATEGORIES } from './handlers/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 27,
          "raw": "export { BaseToolHandler } from './handlers/base-tool-handler.js';",
          "from": "./handlers/base-tool-handler.js"
        },
        {
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export { ToolRegistry } from './tool-registry.js';",
          "from": "./tool-registry.js"
        },
        {
          "named": [
            "BaseMCPHandler"
          ],
          "typeOnly": false,
          "line": 29,
          "raw": "export { BaseMCPHandler } from './base-mcp-handler.js';",
          "from": "./base-mcp-handler.js"
        },
        {
          "named": [
            "HTTPTransportAdapter",
            "StdioTransportAdapter",
            "CloudflareWorkerTransportAdapter",
            "RequestRouter",
            "ProxyTransportAdapter",
            "LocalDevTransportAdapter"
          ],
          "typeOnly": false,
          "line": 30,
          "raw": "export { HTTPTransportAdapter, StdioTransportAdapter, CloudflareWorkerTransportAdapter, RequestRouter, ProxyTransportAdapter, LocalDevTransportAdapter } from './transport-adapters.js';",
          "from": "./transport-adapters.js"
        },
        {
          "named": [
            "createAllHandlers",
            "createFlatHandlerMap",
            "createAssistantHandlers",
            "createThreadHandlers",
            "createMessageHandlers",
            "createRunHandlers",
            "createRunStepHandlers",
            "HANDLER_CATEGORIES",
            "TOTAL_TOOL_COUNT",
            "validateHandlerCompleteness"
          ],
          "typeOnly": false,
          "line": 32,
          "raw": "export { createAllHandlers, createFlatHandlerMap, createAssistantHandlers, createThreadHandlers, createMessageHandlers, createRunHandlers, createRunStepHandlers, HANDLER_CATEGORIES, TOTAL_TOOL_COUNT, validateHandlerCompleteness } from './handlers/index.js';",
          "from": "./handlers/index.js"
        },
        {
          "named": [
            "generateToolDefinitions",
            "validateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 34,
          "raw": "export { generateToolDefinitions, validateToolDefinitions } from './tool-definitions.js';",
          "from": "./tool-definitions.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 36,
          "raw": "export * from './pagination-utils.js';",
          "all": true,
          "from": "./pagination-utils.js"
        },
        {
          "named": [
            "AssistantCreateHandler",
            "AssistantListHandler",
            "AssistantGetHandler",
            "AssistantUpdateHandler",
            "AssistantDeleteHandler"
          ],
          "typeOnly": false,
          "line": 40,
          "raw": "export { AssistantCreateHandler, AssistantListHandler, AssistantGetHandler, AssistantUpdateHandler, AssistantDeleteHandler } from './handlers/assistant-handlers.js';",
          "from": "./handlers/assistant-handlers.js"
        },
        {
          "named": [
            "ThreadCreateHandler",
            "ThreadGetHandler",
            "ThreadUpdateHandler",
            "ThreadDeleteHandler"
          ],
          "typeOnly": false,
          "line": 41,
          "raw": "export { ThreadCreateHandler, ThreadGetHandler, ThreadUpdateHandler, ThreadDeleteHandler } from './handlers/thread-handlers.js';",
          "from": "./handlers/thread-handlers.js"
        },
        {
          "named": [
            "MessageCreateHandler",
            "MessageListHandler",
            "MessageGetHandler",
            "MessageUpdateHandler",
            "MessageDeleteHandler"
          ],
          "typeOnly": false,
          "line": 42,
          "raw": "export { MessageCreateHandler, MessageListHandler, MessageGetHandler, MessageUpdateHandler, MessageDeleteHandler } from './handlers/message-handlers.js';",
          "from": "./handlers/message-handlers.js"
        },
        {
          "named": [
            "RunCreateHandler",
            "RunListHandler",
            "RunGetHandler",
            "RunUpdateHandler",
            "RunCancelHandler",
            "RunSubmitToolOutputsHandler"
          ],
          "typeOnly": false,
          "line": 43,
          "raw": "export { RunCreateHandler, RunListHandler, RunGetHandler, RunUpdateHandler, RunCancelHandler, RunSubmitToolOutputsHandler } from './handlers/run-handlers.js';",
          "from": "./handlers/run-handlers.js"
        },
        {
          "named": [
            "RunStepListHandler",
            "RunStepGetHandler"
          ],
          "typeOnly": false,
          "line": 44,
          "raw": "export { RunStepListHandler, RunStepGetHandler } from './handlers/run-step-handlers.js';",
          "from": "./handlers/run-step-handlers.js"
        },
        {
          "named": [
            "setupHandlerSystem"
          ],
          "typeOnly": false,
          "line": 54,
          "raw": "export function setupHandlerSystem(context) {"
        },
        {
          "named": [
            "HANDLER_SYSTEM_VERSION"
          ],
          "typeOnly": false,
          "line": 74,
          "raw": "export const HANDLER_SYSTEM_VERSION = '1.0.0-phase1';"
        },
        {
          "named": [
            "SYSTEM_INFO"
          ],
          "typeOnly": false,
          "line": 78,
          "raw": "export const SYSTEM_INFO = {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/index.js"
    },
    "shared/core/index.ts": {
      "filePath": "shared/core/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/index.ts",
      "size": 4750,
      "lines": 160,
      "imports": [
        {
          "from": "./handlers/base-tool-handler.js",
          "named": [
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 68,
          "raw": "import { ToolHandlerContext } from './handlers/base-tool-handler.js';"
        },
        {
          "from": "./tool-registry.js",
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 69,
          "raw": "import { ToolRegistry } from './tool-registry.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export { BaseToolHandler } from './handlers/base-tool-handler.js';",
          "from": "./handlers/base-tool-handler.js"
        },
        {
          "named": [
            "ToolHandlerContext"
          ],
          "typeOnly": true,
          "line": 29,
          "raw": "export type { ToolHandlerContext } from './handlers/base-tool-handler.js';",
          "from": "./handlers/base-tool-handler.js"
        },
        {
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 30,
          "raw": "export { ToolRegistry } from './tool-registry.js';",
          "from": "./tool-registry.js"
        },
        {
          "named": [
            "ToolRegistryStats"
          ],
          "typeOnly": true,
          "line": 31,
          "raw": "export type { ToolRegistryStats } from './tool-registry.js';",
          "from": "./tool-registry.js"
        },
        {
          "named": [
            "BaseMCPHandler"
          ],
          "typeOnly": false,
          "line": 32,
          "raw": "export { BaseMCPHandler } from './base-mcp-handler.js';",
          "from": "./base-mcp-handler.js"
        },
        {
          "named": [
            "BaseMCPHandlerConfig"
          ],
          "typeOnly": true,
          "line": 33,
          "raw": "export type { BaseMCPHandlerConfig } from './base-mcp-handler.js';",
          "from": "./base-mcp-handler.js"
        },
        {
          "named": [
            "TransportAdapter"
          ],
          "typeOnly": true,
          "line": 34,
          "raw": "export type { TransportAdapter } from './transport-adapters.js';",
          "from": "./transport-adapters.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 65,
          "raw": "export * from './pagination-utils.js';",
          "all": true,
          "from": "./pagination-utils.js"
        },
        {
          "named": [
            "setupHandlerSystem"
          ],
          "typeOnly": false,
          "line": 124,
          "raw": "export function setupHandlerSystem(context: ToolHandlerContext): ToolRegistry {"
        },
        {
          "named": [
            "HANDLER_SYSTEM_VERSION"
          ],
          "typeOnly": false,
          "line": 149,
          "raw": "export const HANDLER_SYSTEM_VERSION = '1.0.0-phase1';"
        },
        {
          "named": [
            "SYSTEM_INFO"
          ],
          "typeOnly": false,
          "line": 154,
          "raw": "export const SYSTEM_INFO = {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/index.ts"
    },
    "shared/core/pagination-utils.js": {
      "filePath": "shared/core/pagination-utils.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/pagination-utils.js",
      "size": 5234,
      "lines": 166,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { MCPError, ErrorCodes } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PAGINATION_DEFAULTS"
          ],
          "typeOnly": false,
          "line": 17,
          "raw": "export const PAGINATION_DEFAULTS = {"
        },
        {
          "named": [
            "encodeCursor"
          ],
          "typeOnly": false,
          "line": 30,
          "raw": "export function encodeCursor(cursor) {"
        },
        {
          "named": [
            "decodeCursor"
          ],
          "typeOnly": false,
          "line": 42,
          "raw": "export function decodeCursor(cursorString) {"
        },
        {
          "named": [
            "validatePaginationParams"
          ],
          "typeOnly": false,
          "line": 70,
          "raw": "export function validatePaginationParams(params) {"
        },
        {
          "named": [
            "paginateArray"
          ],
          "typeOnly": false,
          "line": 94,
          "raw": "export function paginateArray(items, params) {"
        },
        {
          "named": [
            "createPaginationMetadata"
          ],
          "typeOnly": false,
          "line": 130,
          "raw": "export function createPaginationMetadata(params, result) {"
        },
        {
          "named": [
            "createFirstPageCursor"
          ],
          "typeOnly": false,
          "line": 144,
          "raw": "export function createFirstPageCursor(total) {"
        },
        {
          "named": [
            "isPaginationNeeded"
          ],
          "typeOnly": false,
          "line": 155,
          "raw": "export function isPaginationNeeded(totalItems, limit = PAGINATION_DEFAULTS.DEFAULT_LIMIT) {"
        },
        {
          "named": [
            "getPaginationSummary"
          ],
          "typeOnly": false,
          "line": 161,
          "raw": "export function getPaginationSummary(params, result) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/pagination-utils.js"
    },
    "shared/core/pagination-utils.ts": {
      "filePath": "shared/core/pagination-utils.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/pagination-utils.ts",
      "size": 6209,
      "lines": 249,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { MCPError, ErrorCodes } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PaginationCursor"
          ],
          "typeOnly": false,
          "line": 19,
          "raw": "export interface PaginationCursor {"
        },
        {
          "named": [
            "PaginationParams"
          ],
          "typeOnly": false,
          "line": 31,
          "raw": "export interface PaginationParams {"
        },
        {
          "named": [
            "PaginationResult"
          ],
          "typeOnly": false,
          "line": 41,
          "raw": "export interface PaginationResult<T> {"
        },
        {
          "named": [
            "PAGINATION_DEFAULTS"
          ],
          "typeOnly": false,
          "line": 55,
          "raw": "export const PAGINATION_DEFAULTS = {"
        },
        {
          "named": [
            "encodeCursor"
          ],
          "typeOnly": false,
          "line": 69,
          "raw": "export function encodeCursor(cursor: PaginationCursor): string {"
        },
        {
          "named": [
            "decodeCursor"
          ],
          "typeOnly": false,
          "line": 85,
          "raw": "export function decodeCursor(cursorString: string): PaginationCursor {"
        },
        {
          "named": [
            "validatePaginationParams"
          ],
          "typeOnly": false,
          "line": 120,
          "raw": "export function validatePaginationParams(params: PaginationParams): {"
        },
        {
          "named": [
            "paginateArray"
          ],
          "typeOnly": false,
          "line": 156,
          "raw": "export function paginateArray<T>("
        },
        {
          "named": [
            "createPaginationMetadata"
          ],
          "typeOnly": false,
          "line": 201,
          "raw": "export function createPaginationMetadata("
        },
        {
          "named": [
            "createFirstPageCursor"
          ],
          "typeOnly": false,
          "line": 219,
          "raw": "export function createFirstPageCursor(total: number): string {"
        },
        {
          "named": [
            "isPaginationNeeded"
          ],
          "typeOnly": false,
          "line": 231,
          "raw": "export function isPaginationNeeded("
        },
        {
          "named": [
            "getPaginationSummary"
          ],
          "typeOnly": false,
          "line": 241,
          "raw": "export function getPaginationSummary<T>("
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/pagination-utils.ts"
    },
    "shared/core/tool-definitions.js": {
      "filePath": "shared/core/tool-definitions.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/tool-definitions.js",
      "size": 34704,
      "lines": 718,
      "imports": [],
      "exports": [
        {
          "named": [
            "generateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 674,
          "raw": "export function generateToolDefinitions(registry) {"
        },
        {
          "named": [
            "validateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 707,
          "raw": "export function validateToolDefinitions(registry) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/tool-definitions.js"
    },
    "shared/core/tool-definitions.ts": {
      "filePath": "shared/core/tool-definitions.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/tool-definitions.ts",
      "size": 29882,
      "lines": 734,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "MCPTool"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { MCPTool } from '../types/index.js';"
        },
        {
          "from": "./handlers/base-tool-handler.js",
          "named": [
            "BaseToolHandler"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { BaseToolHandler } from './handlers/base-tool-handler.js';"
        },
        {
          "from": "./tool-registry.js",
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { ToolRegistry } from './tool-registry.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "generateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 680,
          "raw": "export function generateToolDefinitions(registry: ToolRegistry): MCPTool[] {"
        },
        {
          "named": [
            "validateToolDefinitions"
          ],
          "typeOnly": false,
          "line": 717,
          "raw": "export function validateToolDefinitions(registry: ToolRegistry): {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/tool-definitions.ts"
    },
    "shared/core/tool-registry.js": {
      "filePath": "shared/core/tool-registry.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/tool-registry.js",
      "size": 8611,
      "lines": 226,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { MCPError, ErrorCodes } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 24,
          "raw": "export class ToolRegistry {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/tool-registry.js"
    },
    "shared/core/tool-registry.ts": {
      "filePath": "shared/core/tool-registry.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/tool-registry.ts",
      "size": 8796,
      "lines": 285,
      "imports": [
        {
          "from": "./handlers/base-tool-handler.js",
          "named": [
            "BaseToolHandler",
            "ToolHandlerContext"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { BaseToolHandler, ToolHandlerContext } from './handlers/base-tool-handler.js';"
        },
        {
          "from": "../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { MCPError, ErrorCodes } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ToolRegistryStats"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "export interface ToolRegistryStats {"
        },
        {
          "named": [
            "ToolRegistry"
          ],
          "typeOnly": false,
          "line": 36,
          "raw": "export class ToolRegistry {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/tool-registry.ts"
    },
    "shared/core/transport-adapters.js": {
      "filePath": "shared/core/transport-adapters.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/transport-adapters.js",
      "size": 13083,
      "lines": 377,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "ErrorCodes",
            "LegacyErrorCodes",
            "createStandardErrorResponse",
            "createEnhancedError",
            ""
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { ErrorCodes, LegacyErrorCodes, createStandardErrorResponse, createEnhancedError, } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "CloudflareWorkerTransportAdapter"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "export class CloudflareWorkerTransportAdapter {"
        },
        {
          "named": [
            "HTTPTransportAdapter"
          ],
          "typeOnly": false,
          "line": 31,
          "raw": "export class HTTPTransportAdapter {"
        },
        {
          "named": [
            "StdioTransportAdapter"
          ],
          "typeOnly": false,
          "line": 329,
          "raw": "export class StdioTransportAdapter extends StdioTransportHelper {"
        },
        {
          "named": [
            "ProxyTransportAdapter"
          ],
          "typeOnly": false,
          "line": 345,
          "raw": "export const ProxyTransportAdapter = CloudflareWorkerTransportAdapter;"
        },
        {
          "named": [
            "LocalDevTransportAdapter"
          ],
          "typeOnly": false,
          "line": 346,
          "raw": "export const LocalDevTransportAdapter = StdioTransportAdapter;"
        },
        {
          "named": [
            "RequestRouter"
          ],
          "typeOnly": false,
          "line": 350,
          "raw": "export class RequestRouter {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/core/transport-adapters.js"
    },
    "shared/core/transport-adapters.ts": {
      "filePath": "shared/core/transport-adapters.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/core/transport-adapters.ts",
      "size": 13511,
      "lines": 474,
      "imports": [],
      "exports": [
        {
          "named": [
            "TransportAdapter"
          ],
          "typeOnly": false,
          "line": 22,
          "raw": "export interface TransportAdapter {"
        },
        {
          "named": [
            "CloudflareWorkerTransportAdapter"
          ],
          "typeOnly": false,
          "line": 35,
          "raw": "export class CloudflareWorkerTransportAdapter implements TransportAdapter {"
        },
        {
          "named": [
            "HTTPTransportAdapter"
          ],
          "typeOnly": false,
          "line": 56,
          "raw": "export class HTTPTransportAdapter {"
        },
        {
          "named": [
            "StdioTransportAdapter"
          ],
          "typeOnly": false,
          "line": 422,
          "raw": "export class StdioTransportAdapter extends StdioTransportHelper implements TransportAdapter {"
        },
        {
          "named": [
            "ProxyTransportAdapter"
          ],
          "typeOnly": false,
          "line": 441,
          "raw": "export const ProxyTransportAdapter = CloudflareWorkerTransportAdapter;"
        },
        {
          "named": [
            "LocalDevTransportAdapter"
          ],
          "typeOnly": false,
          "line": 442,
          "raw": "export const LocalDevTransportAdapter = StdioTransportAdapter;"
        },
        {
          "named": [
            "RequestRouter"
          ],
          "typeOnly": false,
          "line": 447,
          "raw": "export class RequestRouter {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/core/transport-adapters.ts"
    },
    "shared/index.ts": {
      "filePath": "shared/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/index.ts",
      "size": 2044,
      "lines": 92,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 17,
          "raw": "export * from './types/index.js';",
          "all": true,
          "from": "./types/index.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 18,
          "raw": "export * from './validation/index.js';",
          "all": true,
          "from": "./validation/index.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 19,
          "raw": "export * from './resources/index.js';",
          "all": true,
          "from": "./resources/index.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 20,
          "raw": "export * from './services/index.js';",
          "all": true,
          "from": "./services/index.js"
        },
        {
          "named": [
            "ValidationResult"
          ],
          "typeOnly": true,
          "line": 62,
          "raw": "export type { ValidationResult } from './validation/index.js';",
          "from": "./validation/index.js"
        },
        {
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 92,
          "raw": "export { OpenAIService } from './services/index.js';",
          "from": "./services/index.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/index.ts"
    },
    "shared/prompts/index.js": {
      "filePath": "shared/prompts/index.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/prompts/index.js",
      "size": 1005,
      "lines": 17,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 8,
          "raw": "export * from './prompt-templates.js';",
          "all": true,
          "from": "./prompt-templates.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 10,
          "raw": "export * from './prompt-registry.js';",
          "all": true,
          "from": "./prompt-registry.js"
        },
        {
          "named": [
            "getAvailablePrompts",
            "getPrompt",
            "generatePromptMessages",
            "hasPrompt",
            "searchPrompts",
            "getPromptsByCategory",
            "getPromptRegistryStats",
            "promptRegistry"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "export { getAvailablePrompts, getPrompt, generatePromptMessages, hasPrompt, searchPrompts, getPromptsByCategory, getPromptRegistryStats, promptRegistry } from './prompt-registry.js';",
          "from": "./prompt-registry.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/prompts/index.js"
    },
    "shared/prompts/index.ts": {
      "filePath": "shared/prompts/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/prompts/index.ts",
      "size": 1052,
      "lines": 42,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 9,
          "raw": "export * from './prompt-templates.js';",
          "all": true,
          "from": "./prompt-templates.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 12,
          "raw": "export * from './prompt-registry.js';",
          "all": true,
          "from": "./prompt-registry.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/prompts/index.ts"
    },
    "shared/prompts/prompt-registry.js": {
      "filePath": "shared/prompts/prompt-registry.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/prompts/prompt-registry.js",
      "size": 7022,
      "lines": 249,
      "imports": [
        {
          "from": "./prompt-templates.js",
          "named": [
            "getPromptTemplates"
          ],
          "typeOnly": false,
          "line": 7,
          "raw": "import { getPromptTemplates } from './prompt-templates.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PromptRegistry"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "export class PromptRegistry {"
        },
        {
          "named": [
            "promptRegistry"
          ],
          "typeOnly": false,
          "line": 203,
          "raw": "export const promptRegistry = new PromptRegistry();"
        },
        {
          "named": [
            "getAvailablePrompts"
          ],
          "typeOnly": false,
          "line": 210,
          "raw": "export function getAvailablePrompts() {"
        },
        {
          "named": [
            "getPrompt"
          ],
          "typeOnly": false,
          "line": 216,
          "raw": "export function getPrompt(name) {"
        },
        {
          "named": [
            "generatePromptMessages"
          ],
          "typeOnly": false,
          "line": 222,
          "raw": "export function generatePromptMessages(name, args) {"
        },
        {
          "named": [
            "hasPrompt"
          ],
          "typeOnly": false,
          "line": 228,
          "raw": "export function hasPrompt(name) {"
        },
        {
          "named": [
            "searchPrompts"
          ],
          "typeOnly": false,
          "line": 234,
          "raw": "export function searchPrompts(query) {"
        },
        {
          "named": [
            "getPromptsByCategory"
          ],
          "typeOnly": false,
          "line": 240,
          "raw": "export function getPromptsByCategory(category) {"
        },
        {
          "named": [
            "getPromptRegistryStats"
          ],
          "typeOnly": false,
          "line": 246,
          "raw": "export function getPromptRegistryStats() {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/prompts/prompt-registry.js"
    },
    "shared/prompts/prompt-registry.ts": {
      "filePath": "shared/prompts/prompt-registry.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/prompts/prompt-registry.ts",
      "size": 7137,
      "lines": 296,
      "imports": [
        {
          "from": "./prompt-templates.js",
          "named": [
            "getPromptTemplates"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { getPromptTemplates } from './prompt-templates.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PromptRegistry"
          ],
          "typeOnly": false,
          "line": 21,
          "raw": "export class PromptRegistry implements IPromptRegistry {"
        },
        {
          "named": [
            "promptRegistry"
          ],
          "typeOnly": false,
          "line": 243,
          "raw": "export const promptRegistry = new PromptRegistry();"
        },
        {
          "named": [
            "getAvailablePrompts"
          ],
          "typeOnly": false,
          "line": 252,
          "raw": "export function getAvailablePrompts(): Prompt[] {"
        },
        {
          "named": [
            "getPrompt"
          ],
          "typeOnly": false,
          "line": 259,
          "raw": "export function getPrompt(name: string): Prompt | null {"
        },
        {
          "named": [
            "generatePromptMessages"
          ],
          "typeOnly": false,
          "line": 266,
          "raw": "export function generatePromptMessages(name: string, args?: Record<string, string>): PromptMessage[] {"
        },
        {
          "named": [
            "hasPrompt"
          ],
          "typeOnly": false,
          "line": 273,
          "raw": "export function hasPrompt(name: string): boolean {"
        },
        {
          "named": [
            "searchPrompts"
          ],
          "typeOnly": false,
          "line": 280,
          "raw": "export function searchPrompts(query: string): Prompt[] {"
        },
        {
          "named": [
            "getPromptsByCategory"
          ],
          "typeOnly": false,
          "line": 287,
          "raw": "export function getPromptsByCategory(category: string): Prompt[] {"
        },
        {
          "named": [
            "getPromptRegistryStats"
          ],
          "typeOnly": false,
          "line": 294,
          "raw": "export function getPromptRegistryStats() {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/prompts/prompt-registry.ts"
    },
    "shared/prompts/prompt-templates.js": {
      "filePath": "shared/prompts/prompt-templates.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/prompts/prompt-templates.js",
      "size": 14949,
      "lines": 338,
      "imports": [],
      "exports": [
        {
          "named": [
            "getPromptTemplates"
          ],
          "typeOnly": false,
          "line": 301,
          "raw": "export function getPromptTemplates() {"
        },
        {
          "named": [
            "getPromptTemplate"
          ],
          "typeOnly": false,
          "line": 310,
          "raw": "export function getPromptTemplate(name) {"
        },
        {
          "named": [
            "getPromptTemplatesByCategory"
          ],
          "typeOnly": false,
          "line": 320,
          "raw": "export function getPromptTemplatesByCategory(category) {"
        },
        {
          "named": [
            "CreateCodingAssistant"
          ],
          "typeOnly": false,
          "line": 328,
          "raw": "export const CreateCodingAssistant = PROMPT_TEMPLATES['create-coding-assistant'];"
        },
        {
          "named": [
            "CreateDataAnalyst"
          ],
          "typeOnly": false,
          "line": 329,
          "raw": "export const CreateDataAnalyst = PROMPT_TEMPLATES['create-data-analyst'];"
        },
        {
          "named": [
            "CreateWritingAssistant"
          ],
          "typeOnly": false,
          "line": 330,
          "raw": "export const CreateWritingAssistant = PROMPT_TEMPLATES['create-writing-assistant'];"
        },
        {
          "named": [
            "CreateConversationThread"
          ],
          "typeOnly": false,
          "line": 331,
          "raw": "export const CreateConversationThread = PROMPT_TEMPLATES['create-conversation-thread'];"
        },
        {
          "named": [
            "OrganizeThreadMessages"
          ],
          "typeOnly": false,
          "line": 332,
          "raw": "export const OrganizeThreadMessages = PROMPT_TEMPLATES['organize-thread-messages'];"
        },
        {
          "named": [
            "ExplainCode"
          ],
          "typeOnly": false,
          "line": 333,
          "raw": "export const ExplainCode = PROMPT_TEMPLATES['explain-code'];"
        },
        {
          "named": [
            "ReviewCode"
          ],
          "typeOnly": false,
          "line": 334,
          "raw": "export const ReviewCode = PROMPT_TEMPLATES['review-code'];"
        },
        {
          "named": [
            "ConfigureAssistantRun"
          ],
          "typeOnly": false,
          "line": 335,
          "raw": "export const ConfigureAssistantRun = PROMPT_TEMPLATES['configure-assistant-run'];"
        },
        {
          "named": [
            "DebugRunIssues"
          ],
          "typeOnly": false,
          "line": 336,
          "raw": "export const DebugRunIssues = PROMPT_TEMPLATES['debug-run-issues'];"
        },
        {
          "named": [
            "AnalyzeDataset"
          ],
          "typeOnly": false,
          "line": 337,
          "raw": "export const AnalyzeDataset = PROMPT_TEMPLATES['analyze-dataset'];"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/prompts/prompt-templates.js"
    },
    "shared/prompts/prompt-templates.ts": {
      "filePath": "shared/prompts/prompt-templates.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/prompts/prompt-templates.ts",
      "size": 13877,
      "lines": 354,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "Prompt",
            "PromptTemplate",
            "PromptMessage"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { Prompt, PromptTemplate, PromptMessage } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "getPromptTemplates"
          ],
          "typeOnly": false,
          "line": 312,
          "raw": "export function getPromptTemplates(): PromptTemplate[] {"
        },
        {
          "named": [
            "getPromptTemplate"
          ],
          "typeOnly": false,
          "line": 322,
          "raw": "export function getPromptTemplate(name: string): PromptTemplate | undefined {"
        },
        {
          "named": [
            "getPromptTemplatesByCategory"
          ],
          "typeOnly": false,
          "line": 333,
          "raw": "export function getPromptTemplatesByCategory(category: string): PromptTemplate[] {"
        },
        {
          "named": [
            "CreateCodingAssistant"
          ],
          "typeOnly": false,
          "line": 344,
          "raw": "export const CreateCodingAssistant = PROMPT_TEMPLATES['create-coding-assistant'];"
        },
        {
          "named": [
            "CreateDataAnalyst"
          ],
          "typeOnly": false,
          "line": 345,
          "raw": "export const CreateDataAnalyst = PROMPT_TEMPLATES['create-data-analyst'];"
        },
        {
          "named": [
            "CreateWritingAssistant"
          ],
          "typeOnly": false,
          "line": 346,
          "raw": "export const CreateWritingAssistant = PROMPT_TEMPLATES['create-writing-assistant'];"
        },
        {
          "named": [
            "CreateConversationThread"
          ],
          "typeOnly": false,
          "line": 347,
          "raw": "export const CreateConversationThread = PROMPT_TEMPLATES['create-conversation-thread'];"
        },
        {
          "named": [
            "OrganizeThreadMessages"
          ],
          "typeOnly": false,
          "line": 348,
          "raw": "export const OrganizeThreadMessages = PROMPT_TEMPLATES['organize-thread-messages'];"
        },
        {
          "named": [
            "ExplainCode"
          ],
          "typeOnly": false,
          "line": 349,
          "raw": "export const ExplainCode = PROMPT_TEMPLATES['explain-code'];"
        },
        {
          "named": [
            "ReviewCode"
          ],
          "typeOnly": false,
          "line": 350,
          "raw": "export const ReviewCode = PROMPT_TEMPLATES['review-code'];"
        },
        {
          "named": [
            "ConfigureAssistantRun"
          ],
          "typeOnly": false,
          "line": 351,
          "raw": "export const ConfigureAssistantRun = PROMPT_TEMPLATES['configure-assistant-run'];"
        },
        {
          "named": [
            "DebugRunIssues"
          ],
          "typeOnly": false,
          "line": 352,
          "raw": "export const DebugRunIssues = PROMPT_TEMPLATES['debug-run-issues'];"
        },
        {
          "named": [
            "AnalyzeDataset"
          ],
          "typeOnly": false,
          "line": 353,
          "raw": "export const AnalyzeDataset = PROMPT_TEMPLATES['analyze-dataset'];"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/prompts/prompt-templates.ts"
    },
    "shared/resources/index.js": {
      "filePath": "shared/resources/index.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/resources/index.js",
      "size": 736,
      "lines": 14,
      "imports": [
        {
          "from": "./resources.cjs",
          "named": [
            "getAllResources",
            "getResource",
            "getResourceContent",
            "getResourcesByCategory",
            "searchResources",
            "getResourceStats"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { getAllResources, getResource, getResourceContent, getResourcesByCategory, searchResources, getResourceStats } from './resources.cjs';"
        }
      ],
      "exports": [
        {
          "named": [
            "getAllResources",
            "getResource",
            "getResourceContent",
            "getResourcesByCategory",
            "searchResources",
            "getResourceStats"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "export { getAllResources, getResource, getResourceContent, getResourcesByCategory, searchResources, getResourceStats };"
        },
        {
          "named": [
            "getResources"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "export const getResources = getAllResources;"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/resources/index.js"
    },
    "shared/resources/index.ts": {
      "filePath": "shared/resources/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/resources/index.ts",
      "size": 763,
      "lines": 30,
      "imports": [],
      "exports": [
        {
          "named": [
            "getResources"
          ],
          "typeOnly": false,
          "line": 30,
          "raw": "export const getResources = getAllResources;"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/resources/index.ts"
    },
    "shared/resources/resources.ts": {
      "filePath": "shared/resources/resources.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/resources/resources.ts",
      "size": 14798,
      "lines": 180,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "MCPResource"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { MCPResource } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "getResources"
          ],
          "typeOnly": false,
          "line": 130,
          "raw": "export function getResources(): MCPResource[] {"
        },
        {
          "named": [
            "getResource"
          ],
          "typeOnly": false,
          "line": 140,
          "raw": "export function getResource(uri: string): MCPResource | undefined {"
        },
        {
          "named": [
            "getResourceContent"
          ],
          "typeOnly": false,
          "line": 150,
          "raw": "export function getResourceContent(uri: string): any {"
        },
        {
          "named": [
            "getResourcesByCategory"
          ],
          "typeOnly": false,
          "line": 160,
          "raw": "export function getResourcesByCategory(category: string): MCPResource[] {"
        },
        {
          "named": [
            "RESOURCE_URIS"
          ],
          "typeOnly": false,
          "line": 167,
          "raw": "export const RESOURCE_URIS = {"
        },
        {
          "named": [
            "mcpResources"
          ],
          "typeOnly": false,
          "line": 178,
          "raw": "export const mcpResources = getResources();"
        },
        {
          "named": [
            "resourceContent"
          ],
          "typeOnly": false,
          "line": 179,
          "raw": "export const resourceContent = RESOURCE_CONTENT;"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/resources/resources.ts"
    },
    "shared/services/index.js": {
      "filePath": "shared/services/index.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/services/index.js",
      "size": 389,
      "lines": 11,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 8,
          "raw": "export * from './openai-service.js';",
          "all": true,
          "from": "./openai-service.js"
        },
        {
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "export { OpenAIService } from './openai-service.js';",
          "from": "./openai-service.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/services/index.js"
    },
    "shared/services/index.ts": {
      "filePath": "shared/services/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/services/index.ts",
      "size": 391,
      "lines": 12,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 9,
          "raw": "export * from './openai-service.js';",
          "all": true,
          "from": "./openai-service.js"
        },
        {
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "export { OpenAIService } from './openai-service.js';",
          "from": "./openai-service.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/services/index.ts"
    },
    "shared/services/openai-service.js": {
      "filePath": "shared/services/openai-service.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/services/openai-service.js",
      "size": 7742,
      "lines": 195,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes",
            "formatOpenAIError",
            ""
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "import { MCPError, ErrorCodes, formatOpenAIError, } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "export class OpenAIService {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/services/openai-service.js"
    },
    "shared/services/openai-service.ts": {
      "filePath": "shared/services/openai-service.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/services/openai-service.ts",
      "size": 8803,
      "lines": 257,
      "imports": [],
      "exports": [
        {
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 40,
          "raw": "export class OpenAIService {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/services/openai-service.ts"
    },
    "shared/test-foundation.ts": {
      "filePath": "shared/test-foundation.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/test-foundation.ts",
      "size": 4087,
      "lines": 140,
      "imports": [
        {
          "from": "./core/index.js",
          "named": [
            "setupHandlerSystem",
            "SYSTEM_INFO",
            "validateHandlerCompleteness"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { setupHandlerSystem, SYSTEM_INFO, validateHandlerCompleteness } from './core/index.js';"
        },
        {
          "from": "./services/index.js",
          "named": [
            "OpenAIService"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { OpenAIService } from './services/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "testFoundation"
          ],
          "typeOnly": false,
          "line": 140,
          "raw": "export { testFoundation };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/test-foundation.ts"
    },
    "shared/test-imports.ts": {
      "filePath": "shared/test-imports.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/test-imports.ts",
      "size": 2066,
      "lines": 69,
      "imports": [
        {
          "from": "./validation/index.js",
          "named": [
            "ValidationResult"
          ],
          "typeOnly": true,
          "line": 22,
          "raw": "import type { ValidationResult } from './validation/index.js';"
        },
        {
          "from": "./validation/index.js",
          "named": [
            "SUPPORTED_MODELS",
            "ID_PATTERNS"
          ],
          "typeOnly": false,
          "line": 23,
          "raw": "import { SUPPORTED_MODELS, ID_PATTERNS } from './validation/index.js';"
        },
        {
          "from": "./resources/index.js",
          "named": [
            "getResourceContent"
          ],
          "typeOnly": false,
          "line": 24,
          "raw": "import { getResourceContent } from './resources/index.js';"
        },
        {
          "from": "./types/index.js",
          "named": [
            "Env"
          ],
          "typeOnly": true,
          "line": 25,
          "raw": "import type { Env } from './types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "testSharedLibraries"
          ],
          "typeOnly": false,
          "line": 57,
          "raw": "export { testSharedLibraries };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/test-imports.ts"
    },
    "shared/types/cloudflare-types.js": {
      "filePath": "shared/types/cloudflare-types.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/types/cloudflare-types.js",
      "size": 193,
      "lines": 8,
      "imports": [],
      "exports": [],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/types/cloudflare-types.js"
    },
    "shared/types/cloudflare-types.ts": {
      "filePath": "shared/types/cloudflare-types.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/types/cloudflare-types.ts",
      "size": 274,
      "lines": 11,
      "imports": [],
      "exports": [
        {
          "named": [
            "Env"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "export interface Env {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/types/cloudflare-types.ts"
    },
    "shared/types/config-types.ts": {
      "filePath": "shared/types/config-types.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/types/config-types.ts",
      "size": 11214,
      "lines": 539,
      "imports": [],
      "exports": [
        {
          "named": [
            "ServerConfig"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "export interface ServerConfig {"
        },
        {
          "named": [
            "APIConfig"
          ],
          "typeOnly": false,
          "line": 22,
          "raw": "export interface APIConfig {"
        },
        {
          "named": [
            "FeatureFlags"
          ],
          "typeOnly": false,
          "line": 36,
          "raw": "export interface FeatureFlags {"
        },
        {
          "named": [
            "PerformanceConfig"
          ],
          "typeOnly": false,
          "line": 80,
          "raw": "export interface PerformanceConfig {"
        },
        {
          "named": [
            "SecurityConfig"
          ],
          "typeOnly": false,
          "line": 107,
          "raw": "export interface SecurityConfig {"
        },
        {
          "named": [
            "DeploymentConfig"
          ],
          "typeOnly": false,
          "line": 138,
          "raw": "export interface DeploymentConfig {"
        },
        {
          "named": [
            "RuntimeConfig"
          ],
          "typeOnly": false,
          "line": 150,
          "raw": "export interface RuntimeConfig {"
        },
        {
          "named": [
            "MCPServerConfig"
          ],
          "typeOnly": false,
          "line": 169,
          "raw": "export interface MCPServerConfig {"
        },
        {
          "named": [
            "ValidationResult"
          ],
          "typeOnly": false,
          "line": 182,
          "raw": "export interface ValidationResult {"
        },
        {
          "named": [
            "ValidationError"
          ],
          "typeOnly": false,
          "line": 196,
          "raw": "export interface ValidationError {"
        },
        {
          "named": [
            "ValidationWarning"
          ],
          "typeOnly": false,
          "line": 207,
          "raw": "export interface ValidationWarning {"
        },
        {
          "named": [
            "FeatureFlag"
          ],
          "typeOnly": false,
          "line": 218,
          "raw": "export interface FeatureFlag {"
        },
        {
          "named": [
            "FeatureFlagVariant"
          ],
          "typeOnly": false,
          "line": 235,
          "raw": "export interface FeatureFlagVariant {"
        },
        {
          "named": [
            "FeatureFlagRule"
          ],
          "typeOnly": false,
          "line": 245,
          "raw": "export interface FeatureFlagRule {"
        },
        {
          "named": [
            "EvaluationContext"
          ],
          "typeOnly": false,
          "line": 255,
          "raw": "export interface EvaluationContext {"
        },
        {
          "named": [
            "ConfigurationChangeEvent"
          ],
          "typeOnly": false,
          "line": 267,
          "raw": "export interface ConfigurationChangeEvent {"
        },
        {
          "named": [
            "EnvironmentConfig"
          ],
          "typeOnly": false,
          "line": 285,
          "raw": "export interface EnvironmentConfig extends Partial<MCPServerConfig> {"
        },
        {
          "named": [
            "ConfigurationSource"
          ],
          "typeOnly": false,
          "line": 295,
          "raw": "export interface ConfigurationSource {"
        },
        {
          "named": [
            "ConfigurationLoader"
          ],
          "typeOnly": false,
          "line": 306,
          "raw": "export interface ConfigurationLoader {"
        },
        {
          "named": [
            "ConfigurationWatcher"
          ],
          "typeOnly": false,
          "line": 314,
          "raw": "export interface ConfigurationWatcher {"
        },
        {
          "named": [
            "ConfigurationManagerOptions"
          ],
          "typeOnly": false,
          "line": 323,
          "raw": "export interface ConfigurationManagerOptions {"
        },
        {
          "named": [
            "ConfigurationSchema"
          ],
          "typeOnly": false,
          "line": 344,
          "raw": "export interface ConfigurationSchema {"
        },
        {
          "named": [
            "ConfigMergeOptions"
          ],
          "typeOnly": false,
          "line": 360,
          "raw": "export interface ConfigMergeOptions {"
        },
        {
          "named": [
            "isValidEnvironment"
          ],
          "typeOnly": false,
          "line": 370,
          "raw": "export const isValidEnvironment = (env: string): env is ServerConfig['environment'] => {"
        },
        {
          "named": [
            "isValidDeploymentType"
          ],
          "typeOnly": false,
          "line": 374,
          "raw": "export const isValidDeploymentType = (type: string): type is DeploymentConfig['type'] => {"
        },
        {
          "named": [
            "isValidTransportType"
          ],
          "typeOnly": false,
          "line": 378,
          "raw": "export const isValidTransportType = (transport: string): transport is DeploymentConfig['transport'] => {"
        },
        {
          "named": [
            "isValidLogLevel"
          ],
          "typeOnly": false,
          "line": 382,
          "raw": "export const isValidLogLevel = (level: string): level is DeploymentConfig['logLevel'] => {"
        },
        {
          "named": [
            "DEFAULT_CONFIG_VALUES"
          ],
          "typeOnly": false,
          "line": 389,
          "raw": "export const DEFAULT_CONFIG_VALUES = {"
        },
        {
          "named": [
            "ConfigPath"
          ],
          "typeOnly": false,
          "line": 513,
          "raw": "export class ConfigPath {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/types/config-types.ts"
    },
    "shared/types/core-types.js": {
      "filePath": "shared/types/core-types.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/types/core-types.js",
      "size": 4421,
      "lines": 126,
      "imports": [],
      "exports": [
        {
          "named": [
            "MCPError"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "export class MCPError extends Error {"
        },
        {
          "named": [
            "createEnhancedError"
          ],
          "typeOnly": false,
          "line": 19,
          "raw": "export function createEnhancedError(legacyCode, message, additionalData) {"
        },
        {
          "named": [
            "createStandardErrorResponse"
          ],
          "typeOnly": false,
          "line": 35,
          "raw": "export function createStandardErrorResponse(id, code, message, data) {"
        },
        {
          "named": [
            "formatOpenAIError"
          ],
          "typeOnly": false,
          "line": 47,
          "raw": "export function formatOpenAIError(httpStatus, openaiError, context) {"
        },
        {
          "named": [
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 82,
          "raw": "export const ErrorCodes = {"
        },
        {
          "named": [
            "LegacyErrorCodes"
          ],
          "typeOnly": false,
          "line": 97,
          "raw": "export const LegacyErrorCodes = {"
        },
        {
          "named": [
            "ErrorCodeMapping"
          ],
          "typeOnly": false,
          "line": 104,
          "raw": "export const ErrorCodeMapping = {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/types/core-types.js"
    },
    "shared/types/core-types.ts": {
      "filePath": "shared/types/core-types.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/types/core-types.ts",
      "size": 19065,
      "lines": 804,
      "imports": [],
      "exports": [
        {
          "named": [
            "JsonRpcRequest"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "export interface JsonRpcRequest {"
        },
        {
          "named": [
            "JsonRpcResponse"
          ],
          "typeOnly": false,
          "line": 18,
          "raw": "export interface JsonRpcResponse {"
        },
        {
          "named": [
            "JsonRpcError"
          ],
          "typeOnly": false,
          "line": 25,
          "raw": "export interface JsonRpcError {"
        },
        {
          "named": [
            "MCPRequest"
          ],
          "typeOnly": false,
          "line": 32,
          "raw": "export interface MCPRequest extends JsonRpcRequest {}"
        },
        {
          "named": [
            "MCPResponse"
          ],
          "typeOnly": false,
          "line": 33,
          "raw": "export interface MCPResponse extends JsonRpcResponse {}"
        },
        {
          "named": [
            "MCPInitializeRequest"
          ],
          "typeOnly": false,
          "line": 36,
          "raw": "export interface MCPInitializeRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPInitializeResponse"
          ],
          "typeOnly": false,
          "line": 50,
          "raw": "export interface MCPInitializeResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "MCPToolsListRequest"
          ],
          "typeOnly": false,
          "line": 74,
          "raw": "export interface MCPToolsListRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPTool"
          ],
          "typeOnly": false,
          "line": 81,
          "raw": "export interface MCPTool {"
        },
        {
          "named": [
            "Tool"
          ],
          "typeOnly": false,
          "line": 95,
          "raw": "export interface Tool extends MCPTool {} // Legacy compatibility"
        },
        {
          "named": [
            "MCPToolsListResponse"
          ],
          "typeOnly": false,
          "line": 97,
          "raw": "export interface MCPToolsListResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "MCPToolsCallRequest"
          ],
          "typeOnly": false,
          "line": 104,
          "raw": "export interface MCPToolsCallRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPToolsCallResponse"
          ],
          "typeOnly": false,
          "line": 112,
          "raw": "export interface MCPToolsCallResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "MCPResource"
          ],
          "typeOnly": false,
          "line": 123,
          "raw": "export interface MCPResource {"
        },
        {
          "named": [
            "MCPResourcesListRequest"
          ],
          "typeOnly": false,
          "line": 143,
          "raw": "export interface MCPResourcesListRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPResourcesListResponse"
          ],
          "typeOnly": false,
          "line": 150,
          "raw": "export interface MCPResourcesListResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "MCPResourcesReadRequest"
          ],
          "typeOnly": false,
          "line": 157,
          "raw": "export interface MCPResourcesReadRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPResourcesReadResponse"
          ],
          "typeOnly": false,
          "line": 164,
          "raw": "export interface MCPResourcesReadResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "Resource"
          ],
          "typeOnly": false,
          "line": 177,
          "raw": "export interface Resource extends MCPResource {}"
        },
        {
          "named": [
            "Assistant"
          ],
          "typeOnly": false,
          "line": 180,
          "raw": "export interface Assistant {"
        },
        {
          "named": [
            "CreateAssistantRequest"
          ],
          "typeOnly": false,
          "line": 210,
          "raw": "export interface CreateAssistantRequest {"
        },
        {
          "named": [
            "UpdateAssistantRequest"
          ],
          "typeOnly": false,
          "line": 237,
          "raw": "export interface UpdateAssistantRequest {"
        },
        {
          "named": [
            "ListAssistantsRequest"
          ],
          "typeOnly": false,
          "line": 264,
          "raw": "export interface ListAssistantsRequest {"
        },
        {
          "named": [
            "ListAssistantsResponse"
          ],
          "typeOnly": false,
          "line": 271,
          "raw": "export interface ListAssistantsResponse {"
        },
        {
          "named": [
            "Thread"
          ],
          "typeOnly": false,
          "line": 280,
          "raw": "export interface Thread {"
        },
        {
          "named": [
            "CreateThreadRequest"
          ],
          "typeOnly": false,
          "line": 295,
          "raw": "export interface CreateThreadRequest {"
        },
        {
          "named": [
            "UpdateThreadRequest"
          ],
          "typeOnly": false,
          "line": 321,
          "raw": "export interface UpdateThreadRequest {"
        },
        {
          "named": [
            "Message"
          ],
          "typeOnly": false,
          "line": 334,
          "raw": "export interface Message {"
        },
        {
          "named": [
            "CreateMessageRequest"
          ],
          "typeOnly": false,
          "line": 376,
          "raw": "export interface CreateMessageRequest {"
        },
        {
          "named": [
            "UpdateMessageRequest"
          ],
          "typeOnly": false,
          "line": 391,
          "raw": "export interface UpdateMessageRequest {"
        },
        {
          "named": [
            "ListMessagesRequest"
          ],
          "typeOnly": false,
          "line": 395,
          "raw": "export interface ListMessagesRequest {"
        },
        {
          "named": [
            "ListMessagesResponse"
          ],
          "typeOnly": false,
          "line": 403,
          "raw": "export interface ListMessagesResponse {"
        },
        {
          "named": [
            "Run"
          ],
          "typeOnly": false,
          "line": 412,
          "raw": "export interface Run {"
        },
        {
          "named": [
            "CreateRunRequest"
          ],
          "typeOnly": false,
          "line": 473,
          "raw": "export interface CreateRunRequest {"
        },
        {
          "named": [
            "UpdateRunRequest"
          ],
          "typeOnly": false,
          "line": 514,
          "raw": "export interface UpdateRunRequest {"
        },
        {
          "named": [
            "ListRunsRequest"
          ],
          "typeOnly": false,
          "line": 518,
          "raw": "export interface ListRunsRequest {"
        },
        {
          "named": [
            "ListRunsResponse"
          ],
          "typeOnly": false,
          "line": 525,
          "raw": "export interface ListRunsResponse {"
        },
        {
          "named": [
            "SubmitToolOutputsRequest"
          ],
          "typeOnly": false,
          "line": 533,
          "raw": "export interface SubmitToolOutputsRequest {"
        },
        {
          "named": [
            "RunStep"
          ],
          "typeOnly": false,
          "line": 542,
          "raw": "export interface RunStep {"
        },
        {
          "named": [
            "ListRunStepsRequest"
          ],
          "typeOnly": false,
          "line": 607,
          "raw": "export interface ListRunStepsRequest {"
        },
        {
          "named": [
            "ListRunStepsResponse"
          ],
          "typeOnly": false,
          "line": 615,
          "raw": "export interface ListRunStepsResponse {"
        },
        {
          "named": [
            "MCPError"
          ],
          "typeOnly": false,
          "line": 624,
          "raw": "export class MCPError extends Error {"
        },
        {
          "named": [
            "createEnhancedError"
          ],
          "typeOnly": false,
          "line": 636,
          "raw": "export function createEnhancedError("
        },
        {
          "named": [
            "createStandardErrorResponse"
          ],
          "typeOnly": false,
          "line": 660,
          "raw": "export function createStandardErrorResponse("
        },
        {
          "named": [
            "formatOpenAIError"
          ],
          "typeOnly": false,
          "line": 678,
          "raw": "export function formatOpenAIError("
        },
        {
          "named": [
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 724,
          "raw": "export const ErrorCodes = {"
        },
        {
          "named": [
            "LegacyErrorCodes"
          ],
          "typeOnly": false,
          "line": 741,
          "raw": "export const LegacyErrorCodes = {"
        },
        {
          "named": [
            "ErrorCodeMapping"
          ],
          "typeOnly": false,
          "line": 749,
          "raw": "export const ErrorCodeMapping = {"
        },
        {
          "named": [
            "MCPCompletionRequest"
          ],
          "typeOnly": false,
          "line": 773,
          "raw": "export interface MCPCompletionRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPCompletionItem"
          ],
          "typeOnly": false,
          "line": 787,
          "raw": "export interface MCPCompletionItem {"
        },
        {
          "named": [
            "MCPCompletionResponse"
          ],
          "typeOnly": false,
          "line": 793,
          "raw": "export interface MCPCompletionResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "ToolResponse"
          ],
          "typeOnly": false,
          "line": 800,
          "raw": "export interface ToolResponse {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/types/core-types.ts"
    },
    "shared/types/index.js": {
      "filePath": "shared/types/index.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/types/index.js",
      "size": 481,
      "lines": 13,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 8,
          "raw": "export * from './core-types.js';",
          "all": true,
          "from": "./core-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 10,
          "raw": "export * from './cloudflare-types.js';",
          "all": true,
          "from": "./cloudflare-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 12,
          "raw": "export * from './prompt-types.js';",
          "all": true,
          "from": "./prompt-types.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/types/index.js"
    },
    "shared/types/index.ts": {
      "filePath": "shared/types/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/types/index.ts",
      "size": 483,
      "lines": 15,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 9,
          "raw": "export * from './core-types.js';",
          "all": true,
          "from": "./core-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 12,
          "raw": "export * from './cloudflare-types.js';",
          "all": true,
          "from": "./cloudflare-types.js"
        },
        {
          "named": [],
          "typeOnly": false,
          "line": 15,
          "raw": "export * from './prompt-types.js';",
          "all": true,
          "from": "./prompt-types.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/types/index.ts"
    },
    "shared/types/prompt-types.js": {
      "filePath": "shared/types/prompt-types.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/types/prompt-types.js",
      "size": 226,
      "lines": 8,
      "imports": [],
      "exports": [],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/types/prompt-types.js"
    },
    "shared/types/prompt-types.ts": {
      "filePath": "shared/types/prompt-types.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/types/prompt-types.ts",
      "size": 4490,
      "lines": 209,
      "imports": [
        {
          "from": "./core-types.js",
          "named": [
            "JsonRpcRequest",
            "JsonRpcResponse"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { JsonRpcRequest, JsonRpcResponse } from './core-types.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PromptArgument"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "export interface PromptArgument {"
        },
        {
          "named": [
            "Prompt"
          ],
          "typeOnly": false,
          "line": 27,
          "raw": "export interface Prompt {"
        },
        {
          "named": [
            "PromptTextContent"
          ],
          "typeOnly": false,
          "line": 41,
          "raw": "export interface PromptTextContent {"
        },
        {
          "named": [
            "PromptImageContent"
          ],
          "typeOnly": false,
          "line": 46,
          "raw": "export interface PromptImageContent {"
        },
        {
          "named": [
            "PromptAudioContent"
          ],
          "typeOnly": false,
          "line": 52,
          "raw": "export interface PromptAudioContent {"
        },
        {
          "named": [
            "PromptResourceContent"
          ],
          "typeOnly": false,
          "line": 58,
          "raw": "export interface PromptResourceContent {"
        },
        {
          "named": [
            "PromptMessage"
          ],
          "typeOnly": false,
          "line": 79,
          "raw": "export interface PromptMessage {"
        },
        {
          "named": [
            "MCPPromptsListRequest"
          ],
          "typeOnly": false,
          "line": 91,
          "raw": "export interface MCPPromptsListRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPPromptsListResponse"
          ],
          "typeOnly": false,
          "line": 101,
          "raw": "export interface MCPPromptsListResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "MCPPromptsGetRequest"
          ],
          "typeOnly": false,
          "line": 111,
          "raw": "export interface MCPPromptsGetRequest extends JsonRpcRequest {"
        },
        {
          "named": [
            "MCPPromptsGetResponse"
          ],
          "typeOnly": false,
          "line": 122,
          "raw": "export interface MCPPromptsGetResponse extends JsonRpcResponse {"
        },
        {
          "named": [
            "AssistantPromptTemplate"
          ],
          "typeOnly": false,
          "line": 134,
          "raw": "export interface AssistantPromptTemplate {"
        },
        {
          "named": [
            "ThreadPromptTemplate"
          ],
          "typeOnly": false,
          "line": 145,
          "raw": "export interface ThreadPromptTemplate {"
        },
        {
          "named": [
            "RunPromptTemplate"
          ],
          "typeOnly": false,
          "line": 156,
          "raw": "export interface RunPromptTemplate {"
        },
        {
          "named": [
            "PromptTemplate"
          ],
          "typeOnly": false,
          "line": 167,
          "raw": "export interface PromptTemplate {"
        },
        {
          "named": [
            "PromptRegistry"
          ],
          "typeOnly": false,
          "line": 180,
          "raw": "export interface PromptRegistry {"
        },
        {
          "named": [
            "PromptValidationResult"
          ],
          "typeOnly": false,
          "line": 196,
          "raw": "export interface PromptValidationResult {"
        },
        {
          "named": [
            "PromptExecutionContext"
          ],
          "typeOnly": false,
          "line": 205,
          "raw": "export interface PromptExecutionContext {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/types/prompt-types.ts"
    },
    "shared/validation/index.js": {
      "filePath": "shared/validation/index.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/validation/index.js",
      "size": 714,
      "lines": 11,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 8,
          "raw": "export * from './validation.js';",
          "all": true,
          "from": "./validation.js"
        },
        {
          "named": [
            "validateOpenAIId",
            "validateModel",
            "validateNumericRange",
            "validateRequiredString",
            "validateEnum",
            "validateArray",
            "validateMetadata",
            "validateTools",
            "validateToolResources",
            "validateMessageRole",
            "validatePaginationParams",
            "validateCreateAssistantParams",
            "SUPPORTED_MODELS",
            "ID_PATTERNS"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "export { validateOpenAIId, validateModel, validateNumericRange, validateRequiredString, validateEnum, validateArray, validateMetadata, validateTools, validateToolResources, validateMessageRole, validatePaginationParams, validateCreateAssistantParams, SUPPORTED_MODELS, ID_PATTERNS } from './validation.js';",
          "from": "./validation.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/validation/index.js"
    },
    "shared/validation/index.ts": {
      "filePath": "shared/validation/index.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/validation/index.ts",
      "size": 840,
      "lines": 30,
      "imports": [],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 9,
          "raw": "export * from './validation.js';",
          "all": true,
          "from": "./validation.js"
        },
        {
          "named": [
            "ValidationResult"
          ],
          "typeOnly": true,
          "line": 30,
          "raw": "export type { ValidationResult } from './validation.js';",
          "from": "./validation.js"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/validation/index.ts"
    },
    "shared/validation/validation.js": {
      "filePath": "shared/validation/validation.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/validation/validation.js",
      "size": 17523,
      "lines": 396,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "import { MCPError, ErrorCodes } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "SUPPORTED_MODELS"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "export const SUPPORTED_MODELS = ["
        },
        {
          "named": [
            "ID_PATTERNS"
          ],
          "typeOnly": false,
          "line": 25,
          "raw": "export const ID_PATTERNS = {"
        },
        {
          "named": [
            "validateOpenAIId"
          ],
          "typeOnly": false,
          "line": 37,
          "raw": "export function validateOpenAIId(id, type, paramName) {"
        },
        {
          "named": [
            "validateModel"
          ],
          "typeOnly": false,
          "line": 62,
          "raw": "export function validateModel(model, paramName = 'model') {"
        },
        {
          "named": [
            "validateNumericRange"
          ],
          "typeOnly": false,
          "line": 86,
          "raw": "export function validateNumericRange(value, paramName, min, max, defaultValue) {"
        },
        {
          "named": [
            "validateRequiredString"
          ],
          "typeOnly": false,
          "line": 113,
          "raw": "export function validateRequiredString(value, paramName, examples) {"
        },
        {
          "named": [
            "validateEnum"
          ],
          "typeOnly": false,
          "line": 140,
          "raw": "export function validateEnum(value, paramName, allowedValues, defaultValue) {"
        },
        {
          "named": [
            "validateArray"
          ],
          "typeOnly": false,
          "line": 161,
          "raw": "export function validateArray(value, paramName, required = false) {"
        },
        {
          "named": [
            "validateMetadata"
          ],
          "typeOnly": false,
          "line": 182,
          "raw": "export function validateMetadata(metadata, paramName = 'metadata') {"
        },
        {
          "named": [
            "validateTools"
          ],
          "typeOnly": false,
          "line": 205,
          "raw": "export function validateTools(tools, paramName = 'tools') {"
        },
        {
          "named": [
            "validateToolResources"
          ],
          "typeOnly": false,
          "line": 249,
          "raw": "export function validateToolResources(toolResources, tools, paramName = 'tool_resources') {"
        },
        {
          "named": [
            "validateMessageRole"
          ],
          "typeOnly": false,
          "line": 278,
          "raw": "export function validateMessageRole(role, paramName = 'role') {"
        },
        {
          "named": [
            "validatePaginationParams"
          ],
          "typeOnly": false,
          "line": 284,
          "raw": "export function validatePaginationParams(params) {"
        },
        {
          "named": [
            "validateCreateAssistantParams"
          ],
          "typeOnly": false,
          "line": 328,
          "raw": "export function validateCreateAssistantParams(params) {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false,
      "duplicatePath": "npm-package/shared/validation/validation.js"
    },
    "shared/validation/validation.ts": {
      "filePath": "shared/validation/validation.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/shared/validation/validation.ts",
      "size": 17837,
      "lines": 567,
      "imports": [
        {
          "from": "../types/index.js",
          "named": [
            "MCPError",
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { MCPError, ErrorCodes } from '../types/index.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "SUPPORTED_MODELS"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "export const SUPPORTED_MODELS = ["
        },
        {
          "named": [
            "ID_PATTERNS"
          ],
          "typeOnly": false,
          "line": 28,
          "raw": "export const ID_PATTERNS = {"
        },
        {
          "named": [
            "ValidationResult"
          ],
          "typeOnly": false,
          "line": 39,
          "raw": "export interface ValidationResult {"
        },
        {
          "named": [
            "validateOpenAIId"
          ],
          "typeOnly": false,
          "line": 47,
          "raw": "export function validateOpenAIId(id: string, type: keyof typeof ID_PATTERNS, paramName: string): ValidationResult {"
        },
        {
          "named": [
            "validateModel"
          ],
          "typeOnly": false,
          "line": 85,
          "raw": "export function validateModel(model: string, paramName: string = 'model'): ValidationResult {"
        },
        {
          "named": [
            "validateNumericRange"
          ],
          "typeOnly": false,
          "line": 122,
          "raw": "export function validateNumericRange("
        },
        {
          "named": [
            "validateRequiredString"
          ],
          "typeOnly": false,
          "line": 168,
          "raw": "export function validateRequiredString(value: any, paramName: string, examples?: string[]): ValidationResult {"
        },
        {
          "named": [
            "validateEnum"
          ],
          "typeOnly": false,
          "line": 208,
          "raw": "export function validateEnum<T extends string>("
        },
        {
          "named": [
            "validateArray"
          ],
          "typeOnly": false,
          "line": 243,
          "raw": "export function validateArray(value: any, paramName: string, required: boolean = false): ValidationResult {"
        },
        {
          "named": [
            "validateMetadata"
          ],
          "typeOnly": false,
          "line": 273,
          "raw": "export function validateMetadata(metadata: any, paramName: string = 'metadata'): ValidationResult {"
        },
        {
          "named": [
            "validateTools"
          ],
          "typeOnly": false,
          "line": 306,
          "raw": "export function validateTools(tools: any, paramName: string = 'tools'): ValidationResult {"
        },
        {
          "named": [
            "validateToolResources"
          ],
          "typeOnly": false,
          "line": 371,
          "raw": "export function validateToolResources(toolResources: any, tools: any[], paramName: string = 'tool_resources'): ValidationResult {"
        },
        {
          "named": [
            "validateMessageRole"
          ],
          "typeOnly": false,
          "line": 414,
          "raw": "export function validateMessageRole(role: any, paramName: string = 'role'): ValidationResult {"
        },
        {
          "named": [
            "validatePaginationParams"
          ],
          "typeOnly": false,
          "line": 421,
          "raw": "export function validatePaginationParams(params: {"
        },
        {
          "named": [
            "validateCreateAssistantParams"
          ],
          "typeOnly": false,
          "line": 485,
          "raw": "export function validateCreateAssistantParams(params: any): ValidationResult {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": true,
      "duplicatePath": "npm-package/shared/validation/validation.ts"
    },
    "src/mcp-handler.ts": {
      "filePath": "src/mcp-handler.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/src/mcp-handler.ts",
      "size": 1907,
      "lines": 64,
      "imports": [],
      "exports": [
        {
          "named": [
            "MCPHandler"
          ],
          "typeOnly": false,
          "line": 26,
          "raw": "export class MCPHandler extends BaseMCPHandler {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "src/worker.ts": {
      "filePath": "src/worker.ts",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/src/worker.ts",
      "size": 3283,
      "lines": 94,
      "imports": [
        {
          "from": "../shared/core/index.js",
          "named": [
            "BaseMCPHandler",
            "BaseMCPHandlerConfig",
            "CloudflareWorkerTransportAdapter"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { BaseMCPHandler, BaseMCPHandlerConfig, CloudflareWorkerTransportAdapter } from '../shared/core/index.js';"
        },
        {
          "from": "../shared/core/transport-adapters.js",
          "named": [
            "HTTPTransportAdapter"
          ],
          "typeOnly": false,
          "line": 15,
          "raw": "import { HTTPTransportAdapter } from '../shared/core/transport-adapters.js';"
        },
        {
          "from": "../shared/config/index.js",
          "named": [
            "initializeGlobalConfig",
            "ConfigUtils"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { initializeGlobalConfig, ConfigUtils } from '../shared/config/index.js';"
        },
        {
          "from": "@shared/types",
          "named": [
            "Env"
          ],
          "typeOnly": false,
          "line": 17,
          "raw": "import { Env } from '@shared/types';"
        }
      ],
      "exports": [
        {
          "named": [],
          "typeOnly": false,
          "line": 19,
          "raw": "export default {",
          "default": "default"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "@shared/types"
      ],
      "isDuplicated": false
    },
    "test/config/cross-component.test.js": {
      "filePath": "test/config/cross-component.test.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/config/cross-component.test.js",
      "size": 27368,
      "lines": 747,
      "imports": [
        {
          "from": "assert",
          "named": [],
          "typeOnly": false,
          "line": 9,
          "raw": "import assert from 'assert';",
          "default": "assert"
        }
      ],
      "exports": [
        {
          "named": [
            "describe",
            "it",
            "beforeEach",
            "afterEach"
          ],
          "typeOnly": false,
          "line": 747,
          "raw": "export { describe, it, beforeEach, afterEach };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "assert"
      ],
      "isDuplicated": false
    },
    "test/config/deployment-integration.test.js": {
      "filePath": "test/config/deployment-integration.test.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/config/deployment-integration.test.js",
      "size": 29374,
      "lines": 925,
      "imports": [
        {
          "from": "assert",
          "named": [],
          "typeOnly": false,
          "line": 12,
          "raw": "import assert from 'assert';",
          "default": "assert"
        },
        {
          "from": "fs",
          "named": [
            "promises as fs"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { promises as fs } from 'fs';"
        },
        {
          "from": "path",
          "named": [],
          "typeOnly": false,
          "line": 14,
          "raw": "import path from 'path';",
          "default": "path"
        }
      ],
      "exports": [
        {
          "named": [
            "describe",
            "it",
            "beforeEach",
            "afterEach"
          ],
          "typeOnly": false,
          "line": 925,
          "raw": "export { describe, it, beforeEach, afterEach };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "assert",
        "fs",
        "path"
      ],
      "isDuplicated": false
    },
    "test/config/environment-management-simple.js": {
      "filePath": "test/config/environment-management-simple.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/config/environment-management-simple.js",
      "size": 8733,
      "lines": 264,
      "imports": [
        {
          "from": "../utils/test-helpers.js",
          "named": [
            "TestTracker"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { TestTracker } from '../utils/test-helpers.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "EnvironmentManagementValidator"
          ],
          "typeOnly": false,
          "line": 235,
          "raw": "export { EnvironmentManagementValidator };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "test/config/environment-management.test.js": {
      "filePath": "test/config/environment-management.test.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/config/environment-management.test.js",
      "size": 16671,
      "lines": 417,
      "imports": [
        {
          "from": "node:test",
          "named": [
            "describe",
            "it",
            "beforeEach",
            "afterEach"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { describe, it, beforeEach, afterEach } from 'node:test';"
        },
        {
          "from": "node:assert",
          "named": [],
          "typeOnly": false,
          "line": 9,
          "raw": "import assert from 'node:assert';",
          "default": "assert"
        },
        {
          "from": "fs",
          "named": [
            "promises as fs"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "import { promises as fs } from 'fs';"
        },
        {
          "from": "path",
          "named": [],
          "typeOnly": false,
          "line": 11,
          "raw": "import path from 'path';",
          "default": "path"
        }
      ],
      "exports": [],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "node:test",
        "node:assert",
        "fs",
        "path"
      ],
      "isDuplicated": false
    },
    "test/config/integration-complete.test.js": {
      "filePath": "test/config/integration-complete.test.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/config/integration-complete.test.js",
      "size": 26866,
      "lines": 742,
      "imports": [
        {
          "from": "assert",
          "named": [],
          "typeOnly": false,
          "line": 9,
          "raw": "import assert from 'assert';",
          "default": "assert"
        },
        {
          "from": "fs",
          "named": [
            "promises as fs"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "import { promises as fs } from 'fs';"
        },
        {
          "from": "path",
          "named": [],
          "typeOnly": false,
          "line": 11,
          "raw": "import path from 'path';",
          "default": "path"
        }
      ],
      "exports": [
        {
          "named": [
            "describe",
            "it",
            "beforeEach",
            "afterEach"
          ],
          "typeOnly": false,
          "line": 742,
          "raw": "export { describe, it, beforeEach, afterEach };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "assert",
        "fs",
        "path"
      ],
      "isDuplicated": false
    },
    "test/config/performance-integration.test.js": {
      "filePath": "test/config/performance-integration.test.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/config/performance-integration.test.js",
      "size": 27159,
      "lines": 859,
      "imports": [
        {
          "from": "assert",
          "named": [],
          "typeOnly": false,
          "line": 15,
          "raw": "import assert from 'assert';",
          "default": "assert"
        },
        {
          "from": "perf_hooks",
          "named": [
            "performance"
          ],
          "typeOnly": false,
          "line": 16,
          "raw": "import { performance } from 'perf_hooks';"
        }
      ],
      "exports": [
        {
          "named": [
            "describe",
            "it",
            "beforeEach",
            "afterEach",
            "PerformanceProfiler"
          ],
          "typeOnly": false,
          "line": 859,
          "raw": "export { describe, it, beforeEach, afterEach, PerformanceProfiler };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "assert",
        "perf_hooks"
      ],
      "isDuplicated": false
    },
    "test/config/regression-complete.test.js": {
      "filePath": "test/config/regression-complete.test.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/config/regression-complete.test.js",
      "size": 23382,
      "lines": 708,
      "imports": [
        {
          "from": "assert",
          "named": [],
          "typeOnly": false,
          "line": 13,
          "raw": "import assert from 'assert';",
          "default": "assert"
        },
        {
          "from": "perf_hooks",
          "named": [
            "performance"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { performance } from 'perf_hooks';"
        }
      ],
      "exports": [
        {
          "named": [
            "describe",
            "it",
            "beforeEach",
            "afterEach"
          ],
          "typeOnly": false,
          "line": 708,
          "raw": "export { describe, it, beforeEach, afterEach };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "assert",
        "perf_hooks"
      ],
      "isDuplicated": false
    },
    "test/config/runtime-configuration.test.js": {
      "filePath": "test/config/runtime-configuration.test.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/config/runtime-configuration.test.js",
      "size": 25050,
      "lines": 842,
      "imports": [
        {
          "from": "assert",
          "named": [],
          "typeOnly": false,
          "line": 8,
          "raw": "import assert from 'assert';",
          "default": "assert"
        }
      ],
      "exports": [],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "assert"
      ],
      "isDuplicated": false
    },
    "test/deployment/cloudflare-workers-tests.js": {
      "filePath": "test/deployment/cloudflare-workers-tests.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/deployment/cloudflare-workers-tests.js",
      "size": 18759,
      "lines": 570,
      "imports": [
        {
          "from": "../utils/test-helpers.js",
          "named": [
            "TestTracker",
            "TestDataGenerator",
            "MCPValidator",
            "PerformanceTracker"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { TestTracker, TestDataGenerator, MCPValidator, PerformanceTracker } from '../utils/test-helpers.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "CloudflareWorkersSpecificTester"
          ],
          "typeOnly": false,
          "line": 570,
          "raw": "export { CloudflareWorkersSpecificTester };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "test/deployment/npm-package-tests.js": {
      "filePath": "test/deployment/npm-package-tests.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/deployment/npm-package-tests.js",
      "size": 19984,
      "lines": 684,
      "imports": [
        {
          "from": "../utils/test-helpers.js",
          "named": [
            "TestTracker",
            "TestDataGenerator",
            "MCPValidator",
            "PerformanceTracker"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { TestTracker, TestDataGenerator, MCPValidator, PerformanceTracker } from '../utils/test-helpers.js';"
        },
        {
          "from": "module",
          "named": [
            "createRequire"
          ],
          "typeOnly": false,
          "line": 450,
          "raw": "import { createRequire } from 'module';"
        }
      ],
      "exports": [
        {
          "named": [
            "NPMPackageSpecificTester"
          ],
          "typeOnly": false,
          "line": 684,
          "raw": "export { NPMPackageSpecificTester };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "module"
      ],
      "isDuplicated": false
    },
    "test/edge-cases/edge-case-tests.js": {
      "filePath": "test/edge-cases/edge-case-tests.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/edge-cases/edge-case-tests.js",
      "size": 25749,
      "lines": 806,
      "imports": [
        {
          "from": "../utils/test-helpers.js",
          "named": [
            "TestTracker",
            "TestDataGenerator",
            "MCPValidator"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { TestTracker, TestDataGenerator, MCPValidator } from '../utils/test-helpers.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "EdgeCaseTester"
          ],
          "typeOnly": false,
          "line": 806,
          "raw": "export { EdgeCaseTester };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "test/enhanced-functionality-test.js": {
      "filePath": "test/enhanced-functionality-test.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/enhanced-functionality-test.js",
      "size": 32739,
      "lines": 909,
      "imports": [
        {
          "from": "../src/mcp-handler.js",
          "named": [
            "MCPHandler"
          ],
          "typeOnly": false,
          "line": 6,
          "raw": "import { MCPHandler } from '../src/mcp-handler.js';"
        },
        {
          "from": "../npm-package/src/mcp-handler.js",
          "named": [
            "MCPHandler as NPMHandler"
          ],
          "typeOnly": false,
          "line": 7,
          "raw": "import { MCPHandler as NPMHandler } from '../npm-package/src/mcp-handler.js';"
        },
        {
          "from": "../shared/resources/index.js",
          "named": [
            "mcpResources",
            "getResourceContent"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { mcpResources, getResourceContent } from '../shared/resources/index.js';"
        },
        {
          "from": "../shared/validation/index.js",
          "named": [
            "validateOpenAIId",
            "validateModel",
            "SUPPORTED_MODELS",
            "ID_PATTERNS"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { validateOpenAIId, validateModel, SUPPORTED_MODELS, ID_PATTERNS } from '../shared/validation/index.js';"
        },
        {
          "from": "fs",
          "named": [],
          "typeOnly": false,
          "line": 10,
          "raw": "import fs from 'fs';",
          "default": "fs"
        }
      ],
      "exports": [],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "fs"
      ],
      "isDuplicated": false
    },
    "test/error-handling/error-handling-tests.js": {
      "filePath": "test/error-handling/error-handling-tests.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/error-handling/error-handling-tests.js",
      "size": 15317,
      "lines": 502,
      "imports": [
        {
          "from": "../utils/test-helpers.js",
          "named": [
            "TestTracker",
            "TestDataGenerator",
            "MCPValidator"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { TestTracker, TestDataGenerator, MCPValidator } from '../utils/test-helpers.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ErrorHandlingTester"
          ],
          "typeOnly": false,
          "line": 502,
          "raw": "export { ErrorHandlingTester };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "test/integration/comprehensive-integration-test.js": {
      "filePath": "test/integration/comprehensive-integration-test.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/integration/comprehensive-integration-test.js",
      "size": 15860,
      "lines": 481,
      "imports": [
        {
          "from": "../utils/test-helpers.js",
          "named": [
            "TestTracker",
            "MockOpenAIResponses",
            "TestDataGenerator",
            "MCPValidator",
            "PerformanceTracker"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { TestTracker, MockOpenAIResponses, TestDataGenerator, MCPValidator, PerformanceTracker } from '../utils/test-helpers.js';"
        },
        {
          "from": "child_process",
          "named": [
            "spawn"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "import { spawn } from 'child_process';"
        }
      ],
      "exports": [
        {
          "named": [
            "ComprehensiveIntegrationTester"
          ],
          "typeOnly": false,
          "line": 481,
          "raw": "export { ComprehensiveIntegrationTester };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [
        "child_process"
      ],
      "isDuplicated": false
    },
    "test/parity/deployment-parity-tests.js": {
      "filePath": "test/parity/deployment-parity-tests.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/parity/deployment-parity-tests.js",
      "size": 20960,
      "lines": 647,
      "imports": [
        {
          "from": "../utils/test-helpers.js",
          "named": [
            "TestTracker",
            "TestDataGenerator",
            "MCPValidator",
            "PerformanceTracker"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { TestTracker, TestDataGenerator, MCPValidator, PerformanceTracker } from '../utils/test-helpers.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "DeploymentParityTester"
          ],
          "typeOnly": false,
          "line": 647,
          "raw": "export { DeploymentParityTester };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "test/performance/performance-tests.js": {
      "filePath": "test/performance/performance-tests.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/performance/performance-tests.js",
      "size": 18769,
      "lines": 538,
      "imports": [
        {
          "from": "../utils/test-helpers.js",
          "named": [
            "TestTracker",
            "TestDataGenerator",
            "PerformanceTracker"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { TestTracker, TestDataGenerator, PerformanceTracker } from '../utils/test-helpers.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "PerformanceTester"
          ],
          "typeOnly": false,
          "line": 538,
          "raw": "export { PerformanceTester };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "test/resources/resource-functionality-test.js": {
      "filePath": "test/resources/resource-functionality-test.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/resources/resource-functionality-test.js",
      "size": 5788,
      "lines": 162,
      "imports": [
        {
          "from": "../../src/mcp-handler.js",
          "named": [
            "MCPHandler"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { MCPHandler } from '../../src/mcp-handler.js';"
        },
        {
          "from": "../../npm-package/src/mcp-handler.js",
          "named": [
            "MCPHandler as NPMHandler"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { MCPHandler as NPMHandler } from '../../npm-package/src/mcp-handler.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "testResourceFunctionality"
          ],
          "typeOnly": false,
          "line": 162,
          "raw": "export { testResourceFunctionality };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "test/resources/simple-resource-test.js": {
      "filePath": "test/resources/simple-resource-test.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/resources/simple-resource-test.js",
      "size": 3309,
      "lines": 89,
      "imports": [
        {
          "from": "../../dist/shared/resources/index.js",
          "named": [
            "mcpResources",
            "getResourceContent"
          ],
          "typeOnly": false,
          "line": 5,
          "raw": "import { mcpResources, getResourceContent } from '../../dist/shared/resources/index.js';"
        }
      ],
      "exports": [],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "test/run-all-tests.js": {
      "filePath": "test/run-all-tests.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/run-all-tests.js",
      "size": 14545,
      "lines": 415,
      "imports": [
        {
          "from": "./utils/test-helpers.js",
          "named": [
            "TestTracker",
            "PerformanceTracker"
          ],
          "typeOnly": false,
          "line": 8,
          "raw": "import { TestTracker, PerformanceTracker } from './utils/test-helpers.js';"
        },
        {
          "from": "./integration/comprehensive-integration-test.js",
          "named": [
            "ComprehensiveIntegrationTester"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "import { ComprehensiveIntegrationTester } from './integration/comprehensive-integration-test.js';"
        },
        {
          "from": "./error-handling/error-handling-tests.js",
          "named": [
            "ErrorHandlingTester"
          ],
          "typeOnly": false,
          "line": 10,
          "raw": "import { ErrorHandlingTester } from './error-handling/error-handling-tests.js';"
        },
        {
          "from": "./performance/performance-tests.js",
          "named": [
            "PerformanceTester"
          ],
          "typeOnly": false,
          "line": 11,
          "raw": "import { PerformanceTester } from './performance/performance-tests.js';"
        },
        {
          "from": "./edge-cases/edge-case-tests.js",
          "named": [
            "EdgeCaseTester"
          ],
          "typeOnly": false,
          "line": 12,
          "raw": "import { EdgeCaseTester } from './edge-cases/edge-case-tests.js';"
        },
        {
          "from": "./deployment/cloudflare-workers-tests.js",
          "named": [
            "CloudflareWorkersSpecificTester"
          ],
          "typeOnly": false,
          "line": 13,
          "raw": "import { CloudflareWorkersSpecificTester } from './deployment/cloudflare-workers-tests.js';"
        },
        {
          "from": "./deployment/npm-package-tests.js",
          "named": [
            "NPMPackageSpecificTester"
          ],
          "typeOnly": false,
          "line": 14,
          "raw": "import { NPMPackageSpecificTester } from './deployment/npm-package-tests.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ComprehensiveTestRunner"
          ],
          "typeOnly": false,
          "line": 415,
          "raw": "export { ComprehensiveTestRunner };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "test/utils/test-helpers.js": {
      "filePath": "test/utils/test-helpers.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/utils/test-helpers.js",
      "size": 12827,
      "lines": 462,
      "imports": [],
      "exports": [
        {
          "named": [
            "TestTracker"
          ],
          "typeOnly": false,
          "line": 9,
          "raw": "export class TestTracker {"
        },
        {
          "named": [
            "MockOpenAIResponses"
          ],
          "typeOnly": false,
          "line": 83,
          "raw": "export class MockOpenAIResponses {"
        },
        {
          "named": [
            "TestDataGenerator"
          ],
          "typeOnly": false,
          "line": 198,
          "raw": "export class TestDataGenerator {"
        },
        {
          "named": [
            "MCPValidator"
          ],
          "typeOnly": false,
          "line": 296,
          "raw": "export class MCPValidator {"
        },
        {
          "named": [
            "PerformanceTracker"
          ],
          "typeOnly": false,
          "line": 359,
          "raw": "export class PerformanceTracker {"
        },
        {
          "named": [
            "EnvironmentDetector"
          ],
          "typeOnly": false,
          "line": 414,
          "raw": "export class EnvironmentDetector {"
        },
        {
          "named": [
            "RetryHelper"
          ],
          "typeOnly": false,
          "line": 441,
          "raw": "export class RetryHelper {"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "test/validation/demo-validation.js": {
      "filePath": "test/validation/demo-validation.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/validation/demo-validation.js",
      "size": 5497,
      "lines": 81,
      "imports": [],
      "exports": [],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    },
    "test/validation/validation-tests.js": {
      "filePath": "test/validation/validation-tests.js",
      "absolutePath": "/home/jez/Documents/cloudflare-remote-mcp-server/openai-assistants-mcp/test/validation/validation-tests.js",
      "size": 18153,
      "lines": 616,
      "imports": [
        {
          "from": "../../src/mcp-handler.js",
          "named": [
            "MCPHandler"
          ],
          "typeOnly": false,
          "line": 6,
          "raw": "import { MCPHandler } from '../../src/mcp-handler.js';"
        },
        {
          "from": "../../src/types.js",
          "named": [
            "ErrorCodes"
          ],
          "typeOnly": false,
          "line": 7,
          "raw": "import { ErrorCodes } from '../../src/types.js';"
        }
      ],
      "exports": [
        {
          "named": [
            "ValidationTestSuite"
          ],
          "typeOnly": false,
          "line": 616,
          "raw": "export { ValidationTestSuite };"
        }
      ],
      "dependencies": [],
      "dependents": [],
      "externalDependencies": [],
      "isDuplicated": false
    }
  },
  "circularDependencies": [],
  "externalDependencies": {
    "fs": {
      "packageName": "fs",
      "usedBy": [
        "definitions/scripts/build.js",
        "definitions/scripts/enhanced-build.js",
        "definitions/scripts/enhanced-validate.js",
        "definitions/scripts/migrate.js",
        "definitions/scripts/validate.js",
        "npm-package/definitions/scripts/build.js",
        "npm-package/definitions/scripts/migrate.js",
        "npm-package/definitions/scripts/validate.js",
        "shared/analysis/dependency-map.ts",
        "test/config/deployment-integration.test.js",
        "test/config/environment-management.test.js",
        "test/config/integration-complete.test.js",
        "test/enhanced-functionality-test.js"
      ],
      "importPatterns": [
        "fs/promises",
        "fs"
      ],
      "frequency": 13,
      "isDuplicated": false
    },
    "path": {
      "packageName": "path",
      "usedBy": [
        "definitions/scripts/build.js",
        "definitions/scripts/enhanced-build.js",
        "definitions/scripts/enhanced-validate.js",
        "definitions/scripts/migrate.js",
        "definitions/scripts/validate.js",
        "npm-package/definitions/scripts/build.js",
        "npm-package/definitions/scripts/migrate.js",
        "npm-package/definitions/scripts/validate.js",
        "shared/analysis/dependency-map.ts",
        "test/config/deployment-integration.test.js",
        "test/config/environment-management.test.js",
        "test/config/integration-complete.test.js"
      ],
      "importPatterns": [
        "path"
      ],
      "frequency": 12,
      "isDuplicated": false
    },
    "url": {
      "packageName": "url",
      "usedBy": [
        "definitions/scripts/build.js",
        "definitions/scripts/enhanced-build.js",
        "definitions/scripts/enhanced-validate.js",
        "definitions/scripts/migrate.js",
        "definitions/scripts/validate.js",
        "npm-package/definitions/scripts/build.js",
        "npm-package/definitions/scripts/migrate.js",
        "npm-package/definitions/scripts/validate.js",
        "shared/analysis/dependency-map.ts"
      ],
      "importPatterns": [
        "url"
      ],
      "frequency": 9,
      "isDuplicated": false
    },
    "react": {
      "packageName": "react",
      "usedBy": [
        "definitions/scripts/enhanced-build.js"
      ],
      "importPatterns": [
        "react"
      ],
      "frequency": 1,
      "isDuplicated": false
    },
    "events": {
      "packageName": "events",
      "usedBy": [
        "examples/configuration/custom-source.js"
      ],
      "importPatterns": [
        "events"
      ],
      "frequency": 1,
      "isDuplicated": false
    },
    "@modelcontextprotocol": {
      "packageName": "@modelcontextprotocol",
      "usedBy": [
        "npm-package/src/index.ts",
        "npm-package/src/index.ts"
      ],
      "importPatterns": [
        "@modelcontextprotocol/sdk/server/index.js",
        "@modelcontextprotocol/sdk/server/stdio.js"
      ],
      "frequency": 2,
      "isDuplicated": false
    },
    "@shared": {
      "packageName": "@shared",
      "usedBy": [
        "npm-package/src/mcp-handler-tools.ts",
        "src/worker.ts"
      ],
      "importPatterns": [
        "@shared/types"
      ],
      "frequency": 2,
      "isDuplicated": false
    },
    "assert": {
      "packageName": "assert",
      "usedBy": [
        "test/config/cross-component.test.js",
        "test/config/deployment-integration.test.js",
        "test/config/integration-complete.test.js",
        "test/config/performance-integration.test.js",
        "test/config/regression-complete.test.js",
        "test/config/runtime-configuration.test.js"
      ],
      "importPatterns": [
        "assert"
      ],
      "frequency": 6,
      "isDuplicated": false
    },
    "node:test": {
      "packageName": "node:test",
      "usedBy": [
        "test/config/environment-management.test.js"
      ],
      "importPatterns": [
        "node:test"
      ],
      "frequency": 1,
      "isDuplicated": false
    },
    "node:assert": {
      "packageName": "node:assert",
      "usedBy": [
        "test/config/environment-management.test.js"
      ],
      "importPatterns": [
        "node:assert"
      ],
      "frequency": 1,
      "isDuplicated": false
    },
    "perf_hooks": {
      "packageName": "perf_hooks",
      "usedBy": [
        "test/config/performance-integration.test.js",
        "test/config/regression-complete.test.js"
      ],
      "importPatterns": [
        "perf_hooks"
      ],
      "frequency": 2,
      "isDuplicated": false
    },
    "module": {
      "packageName": "module",
      "usedBy": [
        "test/deployment/npm-package-tests.js"
      ],
      "importPatterns": [
        "module"
      ],
      "frequency": 1,
      "isDuplicated": false
    },
    "child_process": {
      "packageName": "child_process",
      "usedBy": [
        "test/integration/comprehensive-integration-test.js"
      ],
      "importPatterns": [
        "child_process"
      ],
      "frequency": 1,
      "isDuplicated": false
    }
  },
  "summary": {
    "totalFiles": 163,
    "totalImports": 272,
    "totalExports": 973,
    "circularDependencies": 0,
    "externalDependencies": 13,
    "duplicatedFiles": 40,
    "avgDependenciesPerFile": 1.6687116564417177,
    "mostConnectedFiles": [
      {
        "file": "definitions/generated/index.ts",
        "connections": 0
      },
      {
        "file": "definitions/generated/types/prompts-types.ts",
        "connections": 0
      },
      {
        "file": "definitions/generated/types/resources-types.ts",
        "connections": 0
      },
      {
        "file": "definitions/generated/types/tool-params.ts",
        "connections": 0
      },
      {
        "file": "definitions/generated/types/tools-types.ts",
        "connections": 0
      },
      {
        "file": "definitions/scripts/build.js",
        "connections": 0
      },
      {
        "file": "definitions/scripts/enhanced-build.js",
        "connections": 0
      },
      {
        "file": "definitions/scripts/enhanced-validate.js",
        "connections": 0
      },
      {
        "file": "definitions/scripts/migrate.js",
        "connections": 0
      },
      {
        "file": "definitions/scripts/validate.js",
        "connections": 0
      }
    ],
    "unificationComplexity": 234
  }
}