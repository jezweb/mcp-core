{
  "$schema": "../../schemas/resource-schema.json",
  "uri": "docs://guides/tool-usage",
  "name": "Tool Usage Guide",
  "description": "Detailed guide on using each of the 22 tools provided by the AI Provider Assistants MCP Server. Includes parameters, examples, best practices, and common use cases for every tool.",
  "mimeType": "text/markdown",
  "category": "documentation",
  "tags": ["guide", "tools", "reference", "api", "usage"],
  "contentType": "markdown",
  "annotations": {
    "audience": "intermediate",
    "priority": "high",
    "lastModified": "2025-01-31T12:36:00.000Z",
    "tags": ["tools", "reference", "api", "usage", "parameters", "examples"],
    "category": "guides",
    "version": "1.0.0",
    "author": "Jezweb MCP Core Team",
    "usageContext": "Reference guide for developers who need detailed information about each tool's parameters, usage patterns, and best practices.",
    "prerequisites": ["Basic understanding of AI Provider Assistants API", "Familiarity with JSON"],
    "relatedResources": ["docs://guides/getting-started", "docs://openai-assistants-api", "docs://best-practices"]
  },
  "content": "# üõ†Ô∏è Complete Tool Usage Guide\n\nThis comprehensive guide covers all **22 tools** available in the AI Provider Assistants MCP Server. Each tool is documented with parameters, examples, and best practices.\n\n## üìã Tool Categories\n\n- [Assistant Management](#-assistant-management) (5 tools)\n- [Thread Management](#-thread-management) (4 tools)\n- [Message Management](#-message-management) (5 tools)\n- [Run Management](#-run-management) (6 tools)\n- [Run Step Management](#-run-step-management) (2 tools)\n\n---\n\n## ü§ñ Assistant Management\n\n### `assistant-create`\n\nCreate a new AI assistant with custom instructions and capabilities.\n\n**Parameters:**\n- `model` (required): AI Provider model to use (`gpt-4`, `gpt-3.5-turbo`, `gpt-4-turbo`)\n- `name` (optional): Descriptive name for the assistant\n- `description` (optional): Brief description of the assistant's purpose\n- `instructions` (optional): System instructions defining behavior\n- `tools` (optional): Array of tools to enable\n- `metadata` (optional): Custom key-value pairs\n\n**Example:**\n```json\n{\n  \"tool\": \"assistant-create\",\n  \"arguments\": {\n    \"model\": \"gpt-4\",\n    \"name\": \"Code Review Assistant\",\n    \"description\": \"Specialized in code review and best practices\",\n    \"instructions\": \"You are an expert code reviewer. Focus on security, performance, and maintainability. Provide constructive feedback with specific examples.\",\n    \"tools\": [\n      { \"type\": \"code_interpreter\" },\n      { \"type\": \"file_search\" }\n    ],\n    \"metadata\": {\n      \"team\": \"engineering\",\n      \"purpose\": \"code_review\"\n    }\n  }\n}\n```\n\n**Best Practices:**\n- Use specific, detailed instructions\n- Choose the right model for your use case\n- Only enable necessary tools\n- Add meaningful metadata for organization\n\n---\n\n### `assistant-list`\n\nRetrieve a list of your assistants with pagination support.\n\n**Parameters:**\n- `limit` (optional): Number of assistants to return (1-100, default: 20)\n- `order` (optional): Sort order (`asc` or `desc`, default: `desc`)\n- `after` (optional): Pagination cursor (assistant ID)\n- `before` (optional): Pagination cursor (assistant ID)\n\n**Example:**\n```json\n{\n  \"tool\": \"assistant-list\",\n  \"arguments\": {\n    \"limit\": 10,\n    \"order\": \"desc\"\n  }\n}\n```\n\n**Use Cases:**\n- Browse existing assistants\n- Find assistants by creation date\n- Implement pagination in UI\n\n---\n\n### `assistant-get`\n\nRetrieve detailed information about a specific assistant.\n\n**Parameters:**\n- `assistant_id` (required): The assistant ID (format: `asst_abc123...`)\n\n**Example:**\n```json\n{\n  \"tool\": \"assistant-get\",\n  \"arguments\": {\n    \"assistant_id\": \"asst_abc123def456ghi789jkl012\"\n  }\n}\n```\n\n**Use Cases:**\n- Verify assistant configuration\n- Get assistant details for UI display\n- Debug assistant behavior\n\n---\n\n### `assistant-update`\n\nModify an existing assistant's configuration.\n\n**Parameters:**\n- `assistant_id` (required): The assistant ID\n- `model` (optional): New model to use\n- `name` (optional): New name\n- `description` (optional): New description\n- `instructions` (optional): New instructions\n- `tools` (optional): New tools array (replaces existing)\n- `metadata` (optional): New metadata (replaces existing)\n\n**Example:**\n```json\n{\n  \"tool\": \"assistant-update\",\n  \"arguments\": {\n    \"assistant_id\": \"asst_abc123def456ghi789jkl012\",\n    \"instructions\": \"Updated instructions with new requirements...\",\n    \"metadata\": {\n      \"version\": \"2.0\",\n      \"updated_by\": \"user_123\"\n    }\n  }\n}\n```\n\n**Best Practices:**\n- Only update fields that need changes\n- Keep track of versions in metadata\n- Test updated assistants before production use\n\n---\n\n### `assistant-delete`\n\nPermanently delete an assistant.\n\n**Parameters:**\n- `assistant_id` (required): The assistant ID to delete\n\n**Example:**\n```json\n{\n  \"tool\": \"assistant-delete\",\n  \"arguments\": {\n    \"assistant_id\": \"asst_abc123def456ghi789jkl012\"\n  }\n}\n```\n\n**‚ö†Ô∏è Warning:** This action cannot be undone. All threads using this assistant will no longer be able to create new runs.\n\n---\n\n## üí¨ Thread Management\n\n### `thread-create`\n\nStart a new conversation thread.\n\n**Parameters:**\n- `messages` (optional): Initial messages array\n- `metadata` (optional): Custom key-value pairs\n\n**Example:**\n```json\n{\n  \"tool\": \"thread-create\",\n  \"arguments\": {\n    \"messages\": [\n      {\n        \"role\": \"user\",\n        \"content\": \"Hello! I need help with Python programming.\"\n      }\n    ],\n    \"metadata\": {\n      \"user_id\": \"user_123\",\n      \"session_type\": \"programming_help\",\n      \"priority\": \"normal\"\n    }\n  }\n}\n```\n\n**Use Cases:**\n- Start new conversations\n- Group related messages\n- Organize by user or topic\n\n---\n\n### `thread-get`\n\nRetrieve thread details and metadata.\n\n**Parameters:**\n- `thread_id` (required): The thread ID (format: `thread_abc123...`)\n\n**Example:**\n```json\n{\n  \"tool\": \"thread-get\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\"\n  }\n}\n```\n\n---\n\n### `thread-update`\n\nModify thread metadata.\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `metadata` (optional): New metadata (replaces existing)\n\n**Example:**\n```json\n{\n  \"tool\": \"thread-update\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"metadata\": {\n      \"status\": \"resolved\",\n      \"resolution_time\": \"2025-01-31T12:36:00Z\"\n    }\n  }\n}\n```\n\n---\n\n### `thread-delete`\n\nPermanently delete a thread and all its messages.\n\n**Parameters:**\n- `thread_id` (required): The thread ID to delete\n\n**Example:**\n```json\n{\n  \"tool\": \"thread-delete\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\"\n  }\n}\n```\n\n**‚ö†Ô∏è Warning:** This deletes all messages in the thread permanently.\n\n---\n\n## üìù Message Management\n\n### `message-create`\n\nAdd a new message to a thread.\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `role` (required): Message role (`user` or `assistant`)\n- `content` (required): Message content (string or array)\n- `metadata` (optional): Custom key-value pairs\n\n**Example:**\n```json\n{\n  \"tool\": \"message-create\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"role\": \"user\",\n    \"content\": \"Can you help me debug this Python function?\",\n    \"metadata\": {\n      \"source\": \"web_interface\",\n      \"timestamp\": \"2025-01-31T12:36:00Z\"\n    }\n  }\n}\n```\n\n**Content Types:**\n- **Text**: Simple string\n- **Array**: Multiple content blocks (text, images, files)\n\n---\n\n### `message-list`\n\nRetrieve messages from a thread with pagination.\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `limit` (optional): Number of messages (1-100, default: 20)\n- `order` (optional): Sort order (`asc` or `desc`, default: `desc`)\n- `after` (optional): Pagination cursor (message ID)\n- `before` (optional): Pagination cursor (message ID)\n- `run_id` (optional): Filter by specific run\n\n**Example:**\n```json\n{\n  \"tool\": \"message-list\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"limit\": 10,\n    \"order\": \"asc\"\n  }\n}\n```\n\n**Use Cases:**\n- Display conversation history\n- Get latest messages\n- Export conversation data\n\n---\n\n### `message-get`\n\nRetrieve a specific message.\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `message_id` (required): The message ID (format: `msg_abc123...`)\n\n**Example:**\n```json\n{\n  \"tool\": \"message-get\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"message_id\": \"msg_abc123def456ghi789jkl012\"\n  }\n}\n```\n\n---\n\n### `message-update`\n\nUpdate message metadata (content cannot be changed).\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `message_id` (required): The message ID\n- `metadata` (required): New metadata\n\n**Example:**\n```json\n{\n  \"tool\": \"message-update\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"message_id\": \"msg_abc123def456ghi789jkl012\",\n    \"metadata\": {\n      \"flagged\": true,\n      \"flag_reason\": \"inappropriate_content\"\n    }\n  }\n}\n```\n\n---\n\n### `message-delete`\n\nDelete a message from a thread.\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `message_id` (required): The message ID\n\n**Example:**\n```json\n{\n  \"tool\": \"message-delete\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"message_id\": \"msg_abc123def456ghi789jkl012\"\n  }\n}\n```\n\n---\n\n## üèÉ Run Management\n\n### `run-create`\n\nExecute an assistant on a thread.\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `assistant_id` (required): The assistant ID\n- `model` (optional): Override assistant's model\n- `instructions` (optional): Additional instructions\n- `additional_instructions` (optional): Append to existing instructions\n- `tools` (optional): Override assistant's tools\n- `metadata` (optional): Custom key-value pairs\n\n**Example:**\n```json\n{\n  \"tool\": \"run-create\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"assistant_id\": \"asst_abc123def456ghi789jkl012\",\n    \"additional_instructions\": \"Please provide code examples in Python.\",\n    \"metadata\": {\n      \"run_type\": \"code_help\",\n      \"priority\": \"high\"\n    }\n  }\n}\n```\n\n**Run Statuses:**\n- `queued` - Waiting to start\n- `in_progress` - Currently running\n- `requires_action` - Waiting for tool outputs\n- `completed` - Finished successfully\n- `failed` - Encountered an error\n- `cancelled` - Manually stopped\n- `expired` - Timed out\n\n---\n\n### `run-list`\n\nList runs for a thread.\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `limit` (optional): Number of runs (1-100, default: 20)\n- `order` (optional): Sort order (`asc` or `desc`, default: `desc`)\n- `after` (optional): Pagination cursor\n- `before` (optional): Pagination cursor\n\n**Example:**\n```json\n{\n  \"tool\": \"run-list\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"limit\": 5\n  }\n}\n```\n\n---\n\n### `run-get`\n\nRetrieve details about a specific run.\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `run_id` (required): The run ID (format: `run_abc123...`)\n\n**Example:**\n```json\n{\n  \"tool\": \"run-get\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"run_id\": \"run_abc123def456ghi789jkl012\"\n  }\n}\n```\n\n**Use Cases:**\n- Monitor run progress\n- Check for errors\n- Get usage statistics\n\n---\n\n### `run-update`\n\nUpdate run metadata.\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `run_id` (required): The run ID\n- `metadata` (optional): New metadata\n\n**Example:**\n```json\n{\n  \"tool\": \"run-update\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"run_id\": \"run_abc123def456ghi789jkl012\",\n    \"metadata\": {\n      \"user_rating\": \"5\",\n      \"feedback\": \"Very helpful response\"\n    }\n  }\n}\n```\n\n---\n\n### `run-cancel`\n\nCancel a running assistant.\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `run_id` (required): The run ID\n\n**Example:**\n```json\n{\n  \"tool\": \"run-cancel\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"run_id\": \"run_abc123def456ghi789jkl012\"\n  }\n}\n```\n\n**Use Cases:**\n- Stop long-running processes\n- Cancel incorrect runs\n- Manage resource usage\n\n---\n\n### `run-submit-tool-outputs`\n\nSubmit outputs for tool calls during a run.\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `run_id` (required): The run ID\n- `tool_outputs` (required): Array of tool outputs\n\n**Example:**\n```json\n{\n  \"tool\": \"run-submit-tool-outputs\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"run_id\": \"run_abc123def456ghi789jkl012\",\n    \"tool_outputs\": [\n      {\n        \"tool_call_id\": \"call_abc123\",\n        \"output\": \"Function executed successfully. Result: 42\"\n      }\n    ]\n  }\n}\n```\n\n**When to Use:**\n- Run status is `requires_action`\n- Assistant made function calls\n- Custom tool integration needed\n\n---\n\n## üë£ Run Step Management\n\n### `run-step-list`\n\nList detailed steps of a run execution.\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `run_id` (required): The run ID\n- `limit` (optional): Number of steps (1-100, default: 20)\n- `order` (optional): Sort order (`asc` or `desc`, default: `desc`)\n- `after` (optional): Pagination cursor\n- `before` (optional): Pagination cursor\n\n**Example:**\n```json\n{\n  \"tool\": \"run-step-list\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"run_id\": \"run_abc123def456ghi789jkl012\",\n    \"limit\": 10\n  }\n}\n```\n\n**Use Cases:**\n- Debug run execution\n- Understand assistant reasoning\n- Monitor tool usage\n\n---\n\n### `run-step-get`\n\nRetrieve details about a specific run step.\n\n**Parameters:**\n- `thread_id` (required): The thread ID\n- `run_id` (required): The run ID\n- `step_id` (required): The step ID\n\n**Example:**\n```json\n{\n  \"tool\": \"run-step-get\",\n  \"arguments\": {\n    \"thread_id\": \"thread_abc123def456ghi789jkl012\",\n    \"run_id\": \"run_abc123def456ghi789jkl012\",\n    \"step_id\": \"step_abc123def456ghi789jkl012\"\n  }\n}\n```\n\n**Step Types:**\n- `message_creation` - Assistant created a message\n- `tool_calls` - Assistant used tools (code_interpreter, file_search, function)\n\n---\n\n## üí° Best Practices Summary\n\n### General Guidelines\n\n1. **Error Handling**: Always check response success status\n2. **Rate Limiting**: Implement exponential backoff\n3. **Metadata Usage**: Use metadata for organization and tracking\n4. **Resource Cleanup**: Delete unused assistants and threads\n5. **Model Selection**: Choose appropriate models for tasks\n\n### Performance Tips\n\n1. **Pagination**: Use appropriate limits for large datasets\n2. **Caching**: Cache assistant and thread data when possible\n3. **Batch Operations**: Group related operations\n4. **Monitoring**: Track usage and costs\n\n### Security Considerations\n\n1. **API Keys**: Keep API keys secure and rotate regularly\n2. **Input Validation**: Validate all user inputs\n3. **Access Control**: Implement proper authorization\n4. **Audit Logging**: Log important operations\n\n---\n\n## üîó Related Resources\n\n- **Getting Started**: `docs://guides/getting-started`\n- **API Reference**: `docs://openai-assistants-api`\n- **Best Practices**: `docs://best-practices`\n- **Troubleshooting**: `docs://troubleshooting/common-issues`\n- **Examples**: `examples://workflows/*`\n\n---\n\n**Need help with a specific tool? Check the troubleshooting guide or explore our workflow examples!**"
}